%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: 28.pdf
%%Creator: Adobe Acrobat 15.7.0
%%For: yingchenzhen
%%CreationDate: 2019/12/13, 10:40:26
%%BoundingBox: 0 0 720 432
%%HiResBoundingBox: 0 0 720 432
%%CropBox: 0 0 720 432
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 571 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 81.157285, 2014/12/12-00:43:15        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2019-12-13T10:32:31+08:00"
   xmp:CreatorTool="matplotlib 3.1.1, http://matplotlib.org"
   pdf:Producer="matplotlib pdf backend 3.1.1"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -432 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 432 li
720 432 li
720 0 li
cp
clp
gsave
0 432 mo
720 432 li
720 0 li
0 0 li
cp
clp
0 432 mo
720 432 li
720 0 li
0 0 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
f
74.27 369.16 mo
709.2 369.16 li
709.2 17.2743 li
74.27 17.2743 li
cp
f
90.1432 369.16 mo
90.1432 372.66 li
1 /0 /CSD get_res sepcs
1 sep
f
.8 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
90.1432 369.16 mo
90.1432 372.66 li
@
86.6487 388.338 mo
89.5467 388.338 li
89.5467 378.33 li
86.3967 378.96 li
86.3967 377.34 li
89.5287 376.71 li
91.3107 376.71 li
91.3107 388.338 li
94.2087 388.338 li
94.2087 389.832 li
86.6487 389.832 li
86.6487 388.338 li
f
121.89 369.16 mo
121.89 372.66 li
f
121.89 369.16 mo
121.89 372.66 li
@
119.619 388.338 mo
125.811 388.338 li
125.811 389.832 li
117.477 389.832 li
117.477 388.338 li
118.143 387.654 119.061 386.718 120.231 385.53 cv
121.383 384.36 122.121 383.604 122.427 383.262 cv
123.003 382.632 123.399 382.092 123.615 381.642 cv
123.831 381.21 123.957 380.76 123.957 380.328 cv
123.957 379.644 123.705 379.068 123.219 378.636 cv
122.733 378.204 122.103 377.97 121.311 377.97 cv
120.753 377.97 120.159 378.078 119.547 378.258 cv
118.935 378.456 118.269 378.744 117.567 379.14 cv
117.567 377.34 li
118.287 377.052 118.953 376.836 119.565 376.692 cv
120.177 376.548 120.753 376.476 121.275 376.476 cv
122.625 376.476 123.705 376.818 124.515 377.502 cv
125.325 378.186 125.739 379.086 125.739 380.22 cv
125.739 380.76 125.631 381.282 125.433 381.75 cv
125.235 382.236 124.875 382.812 124.335 383.46 cv
124.191 383.64 123.723 384.126 122.931 384.936 cv
122.139 385.746 121.041 386.88 119.619 388.338 cv
f
153.636 369.16 mo
153.636 372.66 li
f
153.636 369.16 mo
153.636 372.66 li
@
155.218 382.758 mo
156.064 382.938 156.73 383.316 157.198 383.892 cv
157.666 384.468 157.918 385.188 157.918 386.016 cv
157.918 387.312 157.468 388.32 156.586 389.022 cv
155.686 389.724 154.426 390.066 152.788 390.066 cv
152.23 390.066 151.654 390.012 151.078 389.904 cv
150.502 389.814 149.89 389.652 149.278 389.436 cv
149.278 387.726 li
149.764 388.014 150.304 388.23 150.898 388.374 cv
151.474 388.518 152.086 388.59 152.734 388.59 cv
153.85 388.59 154.696 388.374 155.272 387.942 cv
155.848 387.51 156.154 386.862 156.154 386.016 cv
156.154 385.26 155.884 384.648 155.344 384.216 cv
154.804 383.784 154.048 383.55 153.076 383.55 cv
151.546 383.55 li
151.546 382.092 li
153.148 382.092 li
154.012 382.092 154.678 381.93 155.146 381.57 cv
155.614 381.228 155.848 380.724 155.848 380.058 cv
155.848 379.392 155.596 378.87 155.128 378.51 cv
154.642 378.15 153.958 377.97 153.076 377.97 cv
152.59 377.97 152.068 378.024 151.51 378.132 cv
150.952 378.24 150.34 378.402 149.674 378.618 cv
149.674 377.034 li
150.34 376.854 150.97 376.71 151.564 376.62 cv
152.14 376.53 152.698 376.476 153.238 376.476 cv
154.57 376.476 155.632 376.782 156.424 377.394 cv
157.216 378.006 157.612 378.834 157.612 379.878 cv
157.612 380.598 157.396 381.21 156.982 381.714 cv
156.568 382.218 155.974 382.578 155.218 382.758 cv
f
185.383 369.16 mo
185.383 372.66 li
f
185.383 369.16 mo
185.383 372.66 li
@
186.46 378.258 mo
181.978 385.26 li
186.46 385.26 li
186.46 378.258 li
185.992 376.71 mo
188.224 376.71 li
188.224 385.26 li
190.096 385.26 li
190.096 386.736 li
188.224 386.736 li
188.224 389.832 li
186.46 389.832 li
186.46 386.736 li
180.538 386.736 li
180.538 385.026 li
185.992 376.71 li
f
217.129 369.16 mo
217.129 372.66 li
f
217.129 369.16 mo
217.129 372.66 li
@
213.347 376.71 mo
220.313 376.71 li
220.313 378.204 li
214.967 378.204 li
214.967 381.426 li
215.219 381.336 215.489 381.264 215.741 381.228 cv
215.993 381.192 216.263 381.156 216.515 381.156 cv
217.973 381.156 219.125 381.57 219.989 382.362 cv
220.853 383.172 221.285 384.252 221.285 385.62 cv
221.285 387.042 220.835 388.14 219.953 388.914 cv
219.071 389.688 217.829 390.066 216.245 390.066 cv
215.687 390.066 215.129 390.012 214.553 389.94 cv
213.977 389.85 213.401 389.724 212.789 389.526 cv
212.789 387.744 li
213.311 388.032 213.851 388.248 214.427 388.392 cv
214.985 388.536 215.579 388.59 216.209 388.59 cv
217.217 388.59 218.027 388.338 218.621 387.798 cv
219.197 387.258 219.503 386.538 219.503 385.62 cv
219.503 384.72 219.197 384 218.621 383.46 cv
218.027 382.92 217.217 382.65 216.209 382.65 cv
215.741 382.65 215.255 382.704 214.787 382.812 cv
214.319 382.92 213.833 383.082 213.347 383.298 cv
213.347 376.71 li
f
248.876 369.16 mo
248.876 372.66 li
f
248.876 369.16 mo
248.876 372.66 li
@
249.089 382.56 mo
248.297 382.56 247.667 382.848 247.199 383.388 cv
246.731 383.928 246.497 384.684 246.497 385.62 cv
246.497 386.574 246.731 387.33 247.199 387.87 cv
247.667 388.41 248.297 388.68 249.089 388.68 cv
249.881 388.68 250.511 388.41 250.979 387.87 cv
251.447 387.33 251.681 386.574 251.681 385.62 cv
251.681 384.684 251.447 383.928 250.979 383.388 cv
250.511 382.848 249.881 382.56 249.089 382.56 cv
252.617 376.998 mo
252.617 378.618 li
252.167 378.402 251.717 378.24 251.267 378.132 cv
250.799 378.024 250.349 377.97 249.917 377.97 cv
248.729 377.97 247.829 378.366 247.217 379.158 cv
246.605 379.95 246.245 381.156 246.173 382.74 cv
246.515 382.236 246.947 381.84 247.469 381.57 cv
247.991 381.3 248.567 381.156 249.197 381.156 cv
250.511 381.156 251.555 381.57 252.311 382.362 cv
253.067 383.154 253.463 384.252 253.463 385.62 cv
253.463 386.97 253.049 388.05 252.257 388.86 cv
251.465 389.67 250.403 390.066 249.089 390.066 cv
247.577 390.066 246.407 389.49 245.615 388.338 cv
244.805 387.186 244.409 385.494 244.409 383.28 cv
244.409 381.21 244.895 379.554 245.885 378.33 cv
246.857 377.106 248.189 376.476 249.845 376.476 cv
250.277 376.476 250.727 376.53 251.195 376.602 cv
251.645 376.692 252.113 376.818 252.617 376.998 cv
f
280.622 369.16 mo
280.622 372.66 li
f
280.622 369.16 mo
280.622 372.66 li
@
276.372 376.71 mo
284.814 376.71 li
284.814 377.466 li
280.044 389.832 li
278.19 389.832 li
282.672 378.204 li
276.372 378.204 li
276.372 376.71 li
f
312.369 369.16 mo
312.369 372.66 li
f
312.369 369.16 mo
312.369 372.66 li
@
312.366 383.604 mo
311.52 383.604 310.854 383.838 310.368 384.288 cv
309.882 384.738 309.648 385.35 309.648 386.142 cv
309.648 386.934 309.882 387.564 310.368 388.014 cv
310.854 388.464 311.52 388.68 312.366 388.68 cv
313.194 388.68 313.86 388.464 314.346 387.996 cv
314.832 387.546 315.084 386.934 315.084 386.142 cv
315.084 385.35 314.832 384.738 314.364 384.288 cv
313.878 383.838 313.212 383.604 312.366 383.604 cv
310.584 382.848 mo
309.828 382.668 309.234 382.308 308.802 381.786 cv
308.37 381.264 308.172 380.634 308.172 379.878 cv
308.172 378.834 308.532 378.006 309.288 377.394 cv
310.026 376.782 311.052 376.476 312.366 376.476 cv
313.662 376.476 314.688 376.782 315.444 377.394 cv
316.182 378.006 316.56 378.834 316.56 379.878 cv
316.56 380.634 316.344 381.264 315.912 381.786 cv
315.48 382.308 314.904 382.668 314.148 382.848 cv
314.994 383.046 315.66 383.442 316.146 384.018 cv
316.614 384.594 316.866 385.314 316.866 386.142 cv
316.866 387.42 316.47 388.392 315.696 389.058 cv
314.904 389.742 313.806 390.066 312.366 390.066 cv
310.908 390.066 309.792 389.742 309.018 389.058 cv
308.244 388.392 307.866 387.42 307.866 386.142 cv
307.866 385.314 308.1 384.594 308.586 384.018 cv
309.054 383.442 309.72 383.046 310.584 382.848 cv
309.936 380.04 mo
309.936 380.724 310.134 381.264 310.566 381.642 cv
310.998 382.02 311.592 382.2 312.366 382.2 cv
313.122 382.2 313.716 382.02 314.148 381.642 cv
314.58 381.264 314.796 380.724 314.796 380.04 cv
314.796 379.356 314.58 378.834 314.148 378.456 cv
313.716 378.078 313.122 377.88 312.366 377.88 cv
311.592 377.88 310.998 378.078 310.566 378.456 cv
310.134 378.834 309.936 379.356 309.936 380.04 cv
f
344.115 369.16 mo
344.115 372.66 li
f
344.115 369.16 mo
344.115 372.66 li
@
340.369 389.562 mo
340.369 387.942 li
340.801 388.158 341.251 388.32 341.719 388.428 cv
342.169 388.536 342.619 388.59 343.069 388.59 cv
344.221 388.59 345.121 388.212 345.733 387.42 cv
346.345 386.628 346.705 385.44 346.813 383.82 cv
346.453 384.324 346.021 384.72 345.517 384.99 cv
344.995 385.26 344.419 385.386 343.789 385.386 cv
342.457 385.386 341.413 384.99 340.657 384.198 cv
339.901 383.406 339.523 382.326 339.523 380.94 cv
339.523 379.608 339.919 378.528 340.711 377.7 cv
341.503 376.89 342.565 376.476 343.897 376.476 cv
345.409 376.476 346.579 377.07 347.371 378.222 cv
348.163 379.392 348.577 381.084 348.577 383.28 cv
348.577 385.368 348.073 387.006 347.101 388.23 cv
346.111 389.454 344.797 390.066 343.141 390.066 cv
342.691 390.066 342.241 390.012 341.791 389.94 cv
341.323 389.868 340.855 389.742 340.369 389.562 cv
343.897 384 mo
344.689 384 345.319 383.73 345.787 383.19 cv
346.255 382.65 346.489 381.894 346.489 380.94 cv
346.489 380.004 346.255 379.248 345.787 378.708 cv
345.319 378.168 344.689 377.88 343.897 377.88 cv
343.105 377.88 342.475 378.168 342.007 378.708 cv
341.539 379.248 341.305 380.004 341.305 380.94 cv
341.305 381.894 341.539 382.65 342.007 383.19 cv
342.475 383.73 343.105 384 343.897 384 cv
f
375.862 369.16 mo
375.862 372.66 li
f
375.862 369.16 mo
375.862 372.66 li
@
366.641 388.338 mo
369.539 388.338 li
369.539 378.33 li
366.389 378.96 li
366.389 377.34 li
369.521 376.71 li
371.303 376.71 li
371.303 388.338 li
374.201 388.338 li
374.201 389.832 li
366.641 389.832 li
366.641 388.338 li
f
381.581 377.88 mo
380.663 377.88 379.979 378.33 379.511 379.23 cv
379.043 380.13 378.827 381.48 378.827 383.28 cv
378.827 385.08 379.043 386.43 379.511 387.33 cv
379.979 388.23 380.663 388.68 381.581 388.68 cv
382.499 388.68 383.183 388.23 383.651 387.33 cv
384.101 386.43 384.335 385.08 384.335 383.28 cv
384.335 381.48 384.101 380.13 383.651 379.23 cv
383.183 378.33 382.499 377.88 381.581 377.88 cv
381.581 376.476 mo
383.039 376.476 384.155 377.07 384.947 378.222 cv
385.721 379.392 386.117 381.084 386.117 383.28 cv
386.117 385.494 385.721 387.186 384.947 388.338 cv
384.155 389.49 383.039 390.066 381.581 390.066 cv
380.105 390.066 378.971 389.49 378.197 388.338 cv
377.423 387.186 377.045 385.494 377.045 383.28 cv
377.045 381.084 377.423 379.392 378.197 378.222 cv
378.971 377.07 380.105 376.476 381.581 376.476 cv
f
407.608 369.16 mo
407.608 372.66 li
f
407.608 369.16 mo
407.608 372.66 li
@
398.387 388.338 mo
401.285 388.338 li
401.285 378.33 li
398.135 378.96 li
398.135 377.34 li
401.267 376.71 li
403.049 376.71 li
403.049 388.338 li
405.947 388.338 li
405.947 389.832 li
398.387 389.832 li
398.387 388.338 li
f
409.835 388.338 mo
412.733 388.338 li
412.733 378.33 li
409.583 378.96 li
409.583 377.34 li
412.715 376.71 li
414.497 376.71 li
414.497 388.338 li
417.395 388.338 li
417.395 389.832 li
409.835 389.832 li
409.835 388.338 li
f
439.355 369.16 mo
439.355 372.66 li
f
439.355 369.16 mo
439.355 372.66 li
@
430.134 388.338 mo
433.032 388.338 li
433.032 378.33 li
429.882 378.96 li
429.882 377.34 li
433.014 376.71 li
434.796 376.71 li
434.796 388.338 li
437.694 388.338 li
437.694 389.832 li
430.134 389.832 li
430.134 388.338 li
f
442.806 388.338 mo
448.998 388.338 li
448.998 389.832 li
440.664 389.832 li
440.664 388.338 li
441.33 387.654 442.248 386.718 443.418 385.53 cv
444.57 384.36 445.308 383.604 445.614 383.262 cv
446.19 382.632 446.586 382.092 446.802 381.642 cv
447.018 381.21 447.144 380.76 447.144 380.328 cv
447.144 379.644 446.892 379.068 446.406 378.636 cv
445.92 378.204 445.29 377.97 444.498 377.97 cv
443.94 377.97 443.346 378.078 442.734 378.258 cv
442.122 378.456 441.456 378.744 440.754 379.14 cv
440.754 377.34 li
441.474 377.052 442.14 376.836 442.752 376.692 cv
443.364 376.548 443.94 376.476 444.462 376.476 cv
445.812 376.476 446.892 376.818 447.702 377.502 cv
448.512 378.186 448.926 379.086 448.926 380.22 cv
448.926 380.76 448.818 381.282 448.62 381.75 cv
448.422 382.236 448.062 382.812 447.522 383.46 cv
447.378 383.64 446.91 384.126 446.118 384.936 cv
445.326 385.746 444.228 386.88 442.806 388.338 cv
f
471.101 369.16 mo
471.101 372.66 li
f
471.101 369.16 mo
471.101 372.66 li
@
461.88 388.338 mo
464.778 388.338 li
464.778 378.33 li
461.628 378.96 li
461.628 377.34 li
464.76 376.71 li
466.542 376.71 li
466.542 388.338 li
469.44 388.338 li
469.44 389.832 li
461.88 389.832 li
461.88 388.338 li
f
478.404 382.758 mo
479.25 382.938 479.916 383.316 480.384 383.892 cv
480.852 384.468 481.104 385.188 481.104 386.016 cv
481.104 387.312 480.654 388.32 479.772 389.022 cv
478.872 389.724 477.612 390.066 475.974 390.066 cv
475.416 390.066 474.84 390.012 474.264 389.904 cv
473.688 389.814 473.076 389.652 472.464 389.436 cv
472.464 387.726 li
472.95 388.014 473.49 388.23 474.084 388.374 cv
474.66 388.518 475.272 388.59 475.92 388.59 cv
477.036 388.59 477.882 388.374 478.458 387.942 cv
479.034 387.51 479.34 386.862 479.34 386.016 cv
479.34 385.26 479.07 384.648 478.53 384.216 cv
477.99 383.784 477.234 383.55 476.262 383.55 cv
474.732 383.55 li
474.732 382.092 li
476.334 382.092 li
477.198 382.092 477.864 381.93 478.332 381.57 cv
478.8 381.228 479.034 380.724 479.034 380.058 cv
479.034 379.392 478.782 378.87 478.314 378.51 cv
477.828 378.15 477.144 377.97 476.262 377.97 cv
475.776 377.97 475.254 378.024 474.696 378.132 cv
474.138 378.24 473.526 378.402 472.86 378.618 cv
472.86 377.034 li
473.526 376.854 474.156 376.71 474.75 376.62 cv
475.326 376.53 475.884 376.476 476.424 376.476 cv
477.756 376.476 478.818 376.782 479.61 377.394 cv
480.402 378.006 480.798 378.834 480.798 379.878 cv
480.798 380.598 480.582 381.21 480.168 381.714 cv
479.754 382.218 479.16 382.578 478.404 382.758 cv
f
502.848 369.16 mo
502.848 372.66 li
f
502.848 369.16 mo
502.848 372.66 li
@
493.627 388.338 mo
496.525 388.338 li
496.525 378.33 li
493.375 378.96 li
493.375 377.34 li
496.507 376.71 li
498.289 376.71 li
498.289 388.338 li
501.187 388.338 li
501.187 389.832 li
493.627 389.832 li
493.627 388.338 li
f
509.647 378.258 mo
505.165 385.26 li
509.647 385.26 li
509.647 378.258 li
509.179 376.71 mo
511.411 376.71 li
511.411 385.26 li
513.283 385.26 li
513.283 386.736 li
511.411 386.736 li
511.411 389.832 li
509.647 389.832 li
509.647 386.736 li
503.725 386.736 li
503.725 385.026 li
509.179 376.71 li
f
534.594 369.16 mo
534.594 372.66 li
f
534.594 369.16 mo
534.594 372.66 li
@
525.373 388.338 mo
528.271 388.338 li
528.271 378.33 li
525.121 378.96 li
525.121 377.34 li
528.253 376.71 li
530.035 376.71 li
530.035 388.338 li
532.933 388.338 li
532.933 389.832 li
525.373 389.832 li
525.373 388.338 li
f
536.533 376.71 mo
543.499 376.71 li
543.499 378.204 li
538.153 378.204 li
538.153 381.426 li
538.405 381.336 538.675 381.264 538.927 381.228 cv
539.179 381.192 539.449 381.156 539.701 381.156 cv
541.159 381.156 542.311 381.57 543.175 382.362 cv
544.039 383.172 544.471 384.252 544.471 385.62 cv
544.471 387.042 544.021 388.14 543.139 388.914 cv
542.257 389.688 541.015 390.066 539.431 390.066 cv
538.873 390.066 538.315 390.012 537.739 389.94 cv
537.163 389.85 536.587 389.724 535.975 389.526 cv
535.975 387.744 li
536.497 388.032 537.037 388.248 537.613 388.392 cv
538.171 388.536 538.765 388.59 539.395 388.59 cv
540.403 388.59 541.213 388.338 541.807 387.798 cv
542.383 387.258 542.689 386.538 542.689 385.62 cv
542.689 384.72 542.383 384 541.807 383.46 cv
541.213 382.92 540.403 382.65 539.395 382.65 cv
538.927 382.65 538.441 382.704 537.973 382.812 cv
537.505 382.92 537.019 383.082 536.533 383.298 cv
536.533 376.71 li
f
566.341 369.16 mo
566.341 372.66 li
f
566.341 369.16 mo
566.341 372.66 li
@
557.12 388.338 mo
560.018 388.338 li
560.018 378.33 li
556.868 378.96 li
556.868 377.34 li
560 376.71 li
561.782 376.71 li
561.782 388.338 li
564.68 388.338 li
564.68 389.832 li
557.12 389.832 li
557.12 388.338 li
f
572.276 382.56 mo
571.484 382.56 570.854 382.848 570.386 383.388 cv
569.918 383.928 569.684 384.684 569.684 385.62 cv
569.684 386.574 569.918 387.33 570.386 387.87 cv
570.854 388.41 571.484 388.68 572.276 388.68 cv
573.068 388.68 573.698 388.41 574.166 387.87 cv
574.634 387.33 574.868 386.574 574.868 385.62 cv
574.868 384.684 574.634 383.928 574.166 383.388 cv
573.698 382.848 573.068 382.56 572.276 382.56 cv
575.804 376.998 mo
575.804 378.618 li
575.354 378.402 574.904 378.24 574.454 378.132 cv
573.986 378.024 573.536 377.97 573.104 377.97 cv
571.916 377.97 571.016 378.366 570.404 379.158 cv
569.792 379.95 569.432 381.156 569.36 382.74 cv
569.702 382.236 570.134 381.84 570.656 381.57 cv
571.178 381.3 571.754 381.156 572.384 381.156 cv
573.698 381.156 574.742 381.57 575.498 382.362 cv
576.254 383.154 576.65 384.252 576.65 385.62 cv
576.65 386.97 576.236 388.05 575.444 388.86 cv
574.652 389.67 573.59 390.066 572.276 390.066 cv
570.764 390.066 569.594 389.49 568.802 388.338 cv
567.992 387.186 567.596 385.494 567.596 383.28 cv
567.596 381.21 568.082 379.554 569.072 378.33 cv
570.044 377.106 571.376 376.476 573.032 376.476 cv
573.464 376.476 573.914 376.53 574.382 376.602 cv
574.832 376.692 575.3 376.818 575.804 376.998 cv
f
598.087 369.16 mo
598.087 372.66 li
f
598.087 369.16 mo
598.087 372.66 li
@
588.866 388.338 mo
591.764 388.338 li
591.764 378.33 li
588.614 378.96 li
588.614 377.34 li
591.746 376.71 li
593.528 376.71 li
593.528 388.338 li
596.426 388.338 li
596.426 389.832 li
588.866 389.832 li
588.866 388.338 li
f
599.558 376.71 mo
608 376.71 li
608 377.466 li
603.23 389.832 li
601.376 389.832 li
605.858 378.204 li
599.558 378.204 li
599.558 376.71 li
f
629.834 369.16 mo
629.834 372.66 li
f
629.834 369.16 mo
629.834 372.66 li
@
620.613 388.338 mo
623.511 388.338 li
623.511 378.33 li
620.361 378.96 li
620.361 377.34 li
623.493 376.71 li
625.275 376.71 li
625.275 388.338 li
628.173 388.338 li
628.173 389.832 li
620.613 389.832 li
620.613 388.338 li
f
635.553 383.604 mo
634.707 383.604 634.041 383.838 633.555 384.288 cv
633.069 384.738 632.835 385.35 632.835 386.142 cv
632.835 386.934 633.069 387.564 633.555 388.014 cv
634.041 388.464 634.707 388.68 635.553 388.68 cv
636.381 388.68 637.047 388.464 637.533 387.996 cv
638.019 387.546 638.271 386.934 638.271 386.142 cv
638.271 385.35 638.019 384.738 637.551 384.288 cv
637.065 383.838 636.399 383.604 635.553 383.604 cv
633.771 382.848 mo
633.015 382.668 632.421 382.308 631.989 381.786 cv
631.557 381.264 631.359 380.634 631.359 379.878 cv
631.359 378.834 631.719 378.006 632.475 377.394 cv
633.213 376.782 634.239 376.476 635.553 376.476 cv
636.849 376.476 637.875 376.782 638.631 377.394 cv
639.369 378.006 639.747 378.834 639.747 379.878 cv
639.747 380.634 639.531 381.264 639.099 381.786 cv
638.667 382.308 638.091 382.668 637.335 382.848 cv
638.181 383.046 638.847 383.442 639.333 384.018 cv
639.801 384.594 640.053 385.314 640.053 386.142 cv
640.053 387.42 639.657 388.392 638.883 389.058 cv
638.091 389.742 636.993 390.066 635.553 390.066 cv
634.095 390.066 632.979 389.742 632.205 389.058 cv
631.431 388.392 631.053 387.42 631.053 386.142 cv
631.053 385.314 631.287 384.594 631.773 384.018 cv
632.241 383.442 632.907 383.046 633.771 382.848 cv
633.123 380.04 mo
633.123 380.724 633.321 381.264 633.753 381.642 cv
634.185 382.02 634.779 382.2 635.553 382.2 cv
636.309 382.2 636.903 382.02 637.335 381.642 cv
637.767 381.264 637.983 380.724 637.983 380.04 cv
637.983 379.356 637.767 378.834 637.335 378.456 cv
636.903 378.078 636.309 377.88 635.553 377.88 cv
634.779 377.88 634.185 378.078 633.753 378.456 cv
633.321 378.834 633.123 379.356 633.123 380.04 cv
f
661.58 369.16 mo
661.58 372.66 li
f
661.58 369.16 mo
661.58 372.66 li
@
652.359 388.338 mo
655.257 388.338 li
655.257 378.33 li
652.107 378.96 li
652.107 377.34 li
655.239 376.71 li
657.021 376.71 li
657.021 388.338 li
659.919 388.338 li
659.919 389.832 li
652.359 389.832 li
652.359 388.338 li
f
663.555 389.562 mo
663.555 387.942 li
663.987 388.158 664.437 388.32 664.905 388.428 cv
665.355 388.536 665.805 388.59 666.255 388.59 cv
667.407 388.59 668.307 388.212 668.919 387.42 cv
669.531 386.628 669.891 385.44 669.999 383.82 cv
669.639 384.324 669.207 384.72 668.703 384.99 cv
668.181 385.26 667.605 385.386 666.975 385.386 cv
665.643 385.386 664.599 384.99 663.843 384.198 cv
663.087 383.406 662.709 382.326 662.709 380.94 cv
662.709 379.608 663.105 378.528 663.897 377.7 cv
664.689 376.89 665.751 376.476 667.083 376.476 cv
668.595 376.476 669.765 377.07 670.557 378.222 cv
671.349 379.392 671.763 381.084 671.763 383.28 cv
671.763 385.368 671.259 387.006 670.287 388.23 cv
669.297 389.454 667.983 390.066 666.327 390.066 cv
665.877 390.066 665.427 390.012 664.977 389.94 cv
664.509 389.868 664.041 389.742 663.555 389.562 cv
667.083 384 mo
667.875 384 668.505 383.73 668.973 383.19 cv
669.441 382.65 669.675 381.894 669.675 380.94 cv
669.675 380.004 669.441 379.248 668.973 378.708 cv
668.505 378.168 667.875 377.88 667.083 377.88 cv
666.291 377.88 665.661 378.168 665.193 378.708 cv
664.725 379.248 664.491 380.004 664.491 380.94 cv
664.491 381.894 664.725 382.65 665.193 383.19 cv
665.661 383.73 666.291 384 667.083 384 cv
f
693.327 369.16 mo
693.327 372.66 li
f
693.327 369.16 mo
693.327 372.66 li
@
685.33 388.338 mo
691.522 388.338 li
691.522 389.832 li
683.188 389.832 li
683.188 388.338 li
683.854 387.654 684.772 386.718 685.942 385.53 cv
687.094 384.36 687.832 383.604 688.138 383.262 cv
688.714 382.632 689.11 382.092 689.326 381.642 cv
689.542 381.21 689.668 380.76 689.668 380.328 cv
689.668 379.644 689.416 379.068 688.93 378.636 cv
688.444 378.204 687.814 377.97 687.022 377.97 cv
686.464 377.97 685.87 378.078 685.258 378.258 cv
684.646 378.456 683.98 378.744 683.278 379.14 cv
683.278 377.34 li
683.998 377.052 684.664 376.836 685.276 376.692 cv
685.888 376.548 686.464 376.476 686.986 376.476 cv
688.336 376.476 689.416 376.818 690.226 377.502 cv
691.036 378.186 691.45 379.086 691.45 380.22 cv
691.45 380.76 691.342 381.282 691.144 381.75 cv
690.946 382.236 690.586 382.812 690.046 383.46 cv
689.902 383.64 689.434 384.126 688.642 384.936 cv
687.85 385.746 686.752 386.88 685.33 388.338 cv
f
699.046 377.88 mo
698.128 377.88 697.444 378.33 696.976 379.23 cv
696.508 380.13 696.292 381.48 696.292 383.28 cv
696.292 385.08 696.508 386.43 696.976 387.33 cv
697.444 388.23 698.128 388.68 699.046 388.68 cv
699.964 388.68 700.648 388.23 701.116 387.33 cv
701.566 386.43 701.8 385.08 701.8 383.28 cv
701.8 381.48 701.566 380.13 701.116 379.23 cv
700.648 378.33 699.964 377.88 699.046 377.88 cv
699.046 376.476 mo
700.504 376.476 701.62 377.07 702.412 378.222 cv
703.186 379.392 703.582 381.084 703.582 383.28 cv
703.582 385.494 703.186 387.186 702.412 388.338 cv
701.62 389.49 700.504 390.066 699.046 390.066 cv
697.57 390.066 696.436 389.49 695.662 388.338 cv
694.888 387.186 694.51 385.494 694.51 383.28 cv
694.51 381.084 694.888 379.392 695.662 378.222 cv
696.436 377.07 697.57 376.476 699.046 376.476 cv
f
365.531 398.32 mo
367.907 398.32 li
367.907 413.824 li
376.427 413.824 li
376.427 415.816 li
365.531 415.816 li
365.531 398.32 li
f
384.779 409.216 mo
383.027 409.216 381.827 409.432 381.155 409.816 cv
380.483 410.224 380.147 410.896 380.147 411.856 cv
380.147 412.624 380.387 413.248 380.891 413.68 cv
381.395 414.136 382.091 414.352 382.955 414.352 cv
384.155 414.352 385.115 413.944 385.835 413.08 cv
386.555 412.24 386.915 411.112 386.915 409.696 cv
386.915 409.216 li
384.779 409.216 li
389.076 408.328 mo
389.076 415.816 li
386.915 415.816 li
386.915 413.824 li
386.411 414.64 385.787 415.216 385.067 415.576 cv
384.347 415.936 383.435 416.128 382.379 416.128 cv
381.035 416.128 379.955 415.768 379.163 415.024 cv
378.371 414.28 377.987 413.272 377.987 412 cv
377.987 410.536 378.467 409.432 379.475 408.664 cv
380.459 407.92 381.923 407.536 383.891 407.536 cv
386.915 407.536 li
386.915 407.32 li
386.915 406.336 386.579 405.568 385.931 405.016 cv
385.283 404.488 384.371 404.2 383.195 404.2 cv
382.427 404.2 381.707 404.296 380.987 404.488 cv
380.267 404.68 379.595 404.944 378.947 405.28 cv
378.947 403.288 li
379.715 403 380.483 402.76 381.227 402.616 cv
381.971 402.472 382.691 402.376 383.411 402.376 cv
385.307 402.376 386.723 402.88 387.659 403.864 cv
388.595 404.848 389.076 406.336 389.076 408.328 cv
f
402.948 409.264 mo
402.948 407.68 402.612 406.456 401.964 405.544 cv
401.292 404.632 400.404 404.176 399.276 404.176 cv
398.124 404.176 397.236 404.632 396.588 405.544 cv
395.916 406.456 395.604 407.68 395.604 409.264 cv
395.604 410.848 395.916 412.096 396.588 413.008 cv
397.236 413.92 398.124 414.352 399.276 414.352 cv
400.404 414.352 401.292 413.92 401.964 413.008 cv
402.612 412.096 402.948 410.848 402.948 409.264 cv
395.604 404.68 mo
396.036 403.912 396.612 403.336 397.308 402.952 cv
398.004 402.568 398.844 402.376 399.804 402.376 cv
401.388 402.376 402.684 403.024 403.692 404.272 cv
404.676 405.544 405.18 407.2 405.18 409.264 cv
405.18 411.328 404.676 413.008 403.692 414.256 cv
402.684 415.504 401.388 416.128 399.804 416.128 cv
398.844 416.128 398.004 415.936 397.308 415.576 cv
396.612 415.216 396.036 414.64 395.604 413.848 cv
395.604 415.816 li
393.444 415.816 li
393.444 397.576 li
395.604 397.576 li
395.604 404.68 li
f
419.988 408.712 mo
419.988 409.768 li
410.076 409.768 li
410.172 411.256 410.604 412.408 411.42 413.176 cv
412.212 413.944 413.316 414.328 414.756 414.328 cv
415.572 414.328 416.388 414.232 417.156 414.04 cv
417.924 413.848 418.716 413.536 419.484 413.104 cv
419.484 415.144 li
418.716 415.48 417.924 415.744 417.108 415.888 cv
416.292 416.032 415.452 416.128 414.635 416.128 cv
412.523 416.128 410.868 415.528 409.644 414.328 cv
408.42 413.128 407.82 411.472 407.82 409.384 cv
407.82 407.248 408.396 405.544 409.548 404.272 cv
410.7 403.024 412.284 402.376 414.252 402.376 cv
416.028 402.376 417.42 402.952 418.452 404.08 cv
419.46 405.232 419.988 406.768 419.988 408.712 cv
417.828 408.088 mo
417.803 406.912 417.467 405.976 416.844 405.256 cv
416.196 404.56 415.332 404.2 414.276 404.2 cv
413.076 404.2 412.116 404.56 411.396 405.232 cv
410.676 405.904 410.243 406.864 410.148 408.088 cv
417.828 408.088 li
f
423.516 397.576 mo
425.676 397.576 li
425.676 415.816 li
423.516 415.816 li
423.516 397.576 li
f
74.27 341.814 mo
70.77 341.814 li
f
74.27 341.814 mo
70.77 341.814 li
@
44.369 336.698 mo
43.451 336.698 42.767 337.148 42.299 338.048 cv
41.831 338.948 41.615 340.298 41.615 342.098 cv
41.615 343.898 41.831 345.248 42.299 346.148 cv
42.767 347.048 43.451 347.498 44.369 347.498 cv
45.287 347.498 45.971 347.048 46.439 346.148 cv
46.889 345.248 47.123 343.898 47.123 342.098 cv
47.123 340.298 46.889 338.948 46.439 338.048 cv
45.971 337.148 45.287 336.698 44.369 336.698 cv
44.369 335.294 mo
45.827 335.294 46.943 335.888 47.735 337.04 cv
48.509 338.21 48.905 339.902 48.905 342.098 cv
48.905 344.312 48.509 346.004 47.735 347.156 cv
46.943 348.308 45.827 348.884 44.369 348.884 cv
42.893 348.884 41.759 348.308 40.985 347.156 cv
40.211 346.004 39.833 344.312 39.833 342.098 cv
39.833 339.902 40.211 338.21 40.985 337.04 cv
41.759 335.888 42.893 335.294 44.369 335.294 cv
f
52.019 346.418 mo
53.873 346.418 li
53.873 348.65 li
52.019 348.65 li
52.019 346.418 li
f
58.0489 347.156 mo
60.9469 347.156 li
60.9469 337.148 li
57.7969 337.778 li
57.7969 336.158 li
60.9289 335.528 li
62.7109 335.528 li
62.7109 347.156 li
65.6089 347.156 li
65.6089 348.65 li
58.0489 348.65 li
58.0489 347.156 li
f
74.27 301.295 mo
70.77 301.295 li
f
74.27 301.295 mo
70.77 301.295 li
@
44.369 296.179 mo
43.451 296.179 42.767 296.629 42.299 297.529 cv
41.831 298.429 41.615 299.779 41.615 301.579 cv
41.615 303.379 41.831 304.729 42.299 305.629 cv
42.767 306.529 43.451 306.979 44.369 306.979 cv
45.287 306.979 45.971 306.529 46.439 305.629 cv
46.889 304.729 47.123 303.379 47.123 301.579 cv
47.123 299.779 46.889 298.429 46.439 297.529 cv
45.971 296.629 45.287 296.179 44.369 296.179 cv
44.369 294.775 mo
45.827 294.775 46.943 295.369 47.735 296.521 cv
48.509 297.691 48.905 299.383 48.905 301.579 cv
48.905 303.793 48.509 305.485 47.735 306.637 cv
46.943 307.789 45.827 308.365 44.369 308.365 cv
42.893 308.365 41.759 307.789 40.985 306.637 cv
40.211 305.485 39.833 303.793 39.833 301.579 cv
39.833 299.383 40.211 297.691 40.985 296.521 cv
41.759 295.369 42.893 294.775 44.369 294.775 cv
f
52.019 305.899 mo
53.873 305.899 li
53.873 308.131 li
52.019 308.131 li
52.019 305.899 li
f
59.2729 306.637 mo
65.4649 306.637 li
65.4649 308.131 li
57.1309 308.131 li
57.1309 306.637 li
57.7969 305.953 58.7149 305.017 59.8849 303.829 cv
61.0369 302.659 61.7749 301.903 62.0809 301.561 cv
62.6569 300.931 63.0529 300.391 63.2689 299.941 cv
63.4849 299.509 63.6109 299.059 63.6109 298.627 cv
63.6109 297.943 63.3589 297.367 62.8729 296.935 cv
62.3869 296.503 61.7569 296.269 60.9649 296.269 cv
60.4069 296.269 59.8129 296.377 59.2009 296.557 cv
58.5889 296.755 57.9229 297.043 57.2209 297.439 cv
57.2209 295.639 li
57.9409 295.351 58.6069 295.135 59.2189 294.991 cv
59.8309 294.847 60.4069 294.775 60.9289 294.775 cv
62.2789 294.775 63.3589 295.117 64.1689 295.801 cv
64.9789 296.485 65.3929 297.385 65.3929 298.519 cv
65.3929 299.059 65.2849 299.581 65.0869 300.049 cv
64.8889 300.535 64.5289 301.111 63.9889 301.759 cv
63.8449 301.939 63.3769 302.425 62.5849 303.235 cv
61.7929 304.045 60.6949 305.179 59.2729 306.637 cv
f
74.27 260.776 mo
70.77 260.776 li
f
74.27 260.776 mo
70.77 260.776 li
@
44.369 255.66 mo
43.451 255.66 42.767 256.11 42.299 257.01 cv
41.831 257.91 41.615 259.26 41.615 261.06 cv
41.615 262.86 41.831 264.21 42.299 265.11 cv
42.767 266.01 43.451 266.46 44.369 266.46 cv
45.287 266.46 45.971 266.01 46.439 265.11 cv
46.889 264.21 47.123 262.86 47.123 261.06 cv
47.123 259.26 46.889 257.91 46.439 257.01 cv
45.971 256.11 45.287 255.66 44.369 255.66 cv
44.369 254.256 mo
45.827 254.256 46.943 254.85 47.735 256.002 cv
48.509 257.172 48.905 258.864 48.905 261.06 cv
48.905 263.274 48.509 264.966 47.735 266.118 cv
46.943 267.27 45.827 267.846 44.369 267.846 cv
42.893 267.846 41.759 267.27 40.985 266.118 cv
40.211 264.966 39.833 263.274 39.833 261.06 cv
39.833 258.864 40.211 257.172 40.985 256.002 cv
41.759 254.85 42.893 254.256 44.369 254.256 cv
f
52.019 265.38 mo
53.873 265.38 li
53.873 267.612 li
52.019 267.612 li
52.019 265.38 li
f
63.1249 260.538 mo
63.9709 260.718 64.6369 261.096 65.1049 261.672 cv
65.5729 262.248 65.8249 262.968 65.8249 263.796 cv
65.8249 265.092 65.3749 266.1 64.4929 266.802 cv
63.5929 267.504 62.3329 267.846 60.6949 267.846 cv
60.1369 267.846 59.5609 267.792 58.9849 267.684 cv
58.4089 267.594 57.7969 267.432 57.1849 267.216 cv
57.1849 265.506 li
57.6709 265.794 58.2109 266.01 58.8049 266.154 cv
59.3809 266.298 59.9929 266.37 60.6409 266.37 cv
61.7569 266.37 62.6029 266.154 63.1789 265.722 cv
63.7549 265.29 64.0609 264.642 64.0609 263.796 cv
64.0609 263.04 63.7909 262.428 63.2509 261.996 cv
62.7109 261.564 61.9549 261.33 60.9829 261.33 cv
59.4529 261.33 li
59.4529 259.872 li
61.0549 259.872 li
61.9189 259.872 62.5849 259.71 63.0529 259.35 cv
63.5209 259.008 63.7549 258.504 63.7549 257.838 cv
63.7549 257.172 63.5029 256.65 63.0349 256.29 cv
62.5489 255.93 61.8649 255.75 60.9829 255.75 cv
60.4969 255.75 59.9749 255.804 59.4169 255.912 cv
58.8589 256.02 58.2469 256.182 57.5809 256.398 cv
57.5809 254.814 li
58.2469 254.634 58.8769 254.49 59.4709 254.4 cv
60.0469 254.31 60.6049 254.256 61.1449 254.256 cv
62.4769 254.256 63.5389 254.562 64.3309 255.174 cv
65.1229 255.786 65.5189 256.614 65.5189 257.658 cv
65.5189 258.378 65.3029 258.99 64.8889 259.494 cv
64.4749 259.998 63.8809 260.358 63.1249 260.538 cv
f
74.27 220.257 mo
70.77 220.257 li
f
74.27 220.257 mo
70.77 220.257 li
@
44.369 215.141 mo
43.451 215.141 42.767 215.591 42.299 216.491 cv
41.831 217.391 41.615 218.741 41.615 220.541 cv
41.615 222.341 41.831 223.691 42.299 224.591 cv
42.767 225.491 43.451 225.941 44.369 225.941 cv
45.287 225.941 45.971 225.491 46.439 224.591 cv
46.889 223.691 47.123 222.341 47.123 220.541 cv
47.123 218.741 46.889 217.391 46.439 216.491 cv
45.971 215.591 45.287 215.141 44.369 215.141 cv
44.369 213.737 mo
45.827 213.737 46.943 214.331 47.735 215.483 cv
48.509 216.653 48.905 218.345 48.905 220.541 cv
48.905 222.755 48.509 224.447 47.735 225.599 cv
46.943 226.751 45.827 227.327 44.369 227.327 cv
42.893 227.327 41.759 226.751 40.985 225.599 cv
40.211 224.447 39.833 222.755 39.833 220.541 cv
39.833 218.345 40.211 216.653 40.985 215.483 cv
41.759 214.331 42.893 213.737 44.369 213.737 cv
f
52.019 224.861 mo
53.873 224.861 li
53.873 227.093 li
52.019 227.093 li
52.019 224.861 li
f
62.6209 215.519 mo
58.1389 222.521 li
62.6209 222.521 li
62.6209 215.519 li
62.1529 213.971 mo
64.3849 213.971 li
64.3849 222.521 li
66.2569 222.521 li
66.2569 223.997 li
64.3849 223.997 li
64.3849 227.093 li
62.6209 227.093 li
62.6209 223.997 li
56.6989 223.997 li
56.6989 222.287 li
62.1529 213.971 li
f
74.27 179.738 mo
70.77 179.738 li
f
74.27 179.738 mo
70.77 179.738 li
@
44.369 174.622 mo
43.451 174.622 42.767 175.072 42.299 175.972 cv
41.831 176.872 41.615 178.222 41.615 180.022 cv
41.615 181.822 41.831 183.172 42.299 184.072 cv
42.767 184.972 43.451 185.422 44.369 185.422 cv
45.287 185.422 45.971 184.972 46.439 184.072 cv
46.889 183.172 47.123 181.822 47.123 180.022 cv
47.123 178.222 46.889 176.872 46.439 175.972 cv
45.971 175.072 45.287 174.622 44.369 174.622 cv
44.369 173.218 mo
45.827 173.218 46.943 173.812 47.735 174.964 cv
48.509 176.134 48.905 177.826 48.905 180.022 cv
48.905 182.236 48.509 183.928 47.735 185.08 cv
46.943 186.232 45.827 186.808 44.369 186.808 cv
42.893 186.808 41.759 186.232 40.985 185.08 cv
40.211 183.928 39.833 182.236 39.833 180.022 cv
39.833 177.826 40.211 176.134 40.985 174.964 cv
41.759 173.812 42.893 173.218 44.369 173.218 cv
f
52.019 184.342 mo
53.873 184.342 li
53.873 186.574 li
52.019 186.574 li
52.019 184.342 li
f
57.7609 173.452 mo
64.7269 173.452 li
64.7269 174.946 li
59.3809 174.946 li
59.3809 178.168 li
59.6329 178.078 59.9029 178.006 60.1549 177.97 cv
60.4069 177.934 60.6769 177.898 60.9289 177.898 cv
62.3869 177.898 63.5389 178.312 64.4029 179.104 cv
65.2669 179.914 65.6989 180.994 65.6989 182.362 cv
65.6989 183.784 65.2489 184.882 64.3669 185.656 cv
63.4849 186.43 62.2429 186.808 60.6589 186.808 cv
60.1009 186.808 59.5429 186.754 58.9669 186.682 cv
58.3909 186.592 57.8149 186.466 57.2029 186.268 cv
57.2029 184.486 li
57.7249 184.774 58.2649 184.99 58.8409 185.134 cv
59.3989 185.278 59.9929 185.332 60.6229 185.332 cv
61.6309 185.332 62.4409 185.08 63.0349 184.54 cv
63.6109 184 63.9169 183.28 63.9169 182.362 cv
63.9169 181.462 63.6109 180.742 63.0349 180.202 cv
62.4409 179.662 61.6309 179.392 60.6229 179.392 cv
60.1549 179.392 59.6689 179.446 59.2009 179.554 cv
58.7329 179.662 58.2469 179.824 57.7609 180.04 cv
57.7609 173.452 li
f
74.27 139.219 mo
70.77 139.219 li
f
74.27 139.219 mo
70.77 139.219 li
@
44.369 134.102 mo
43.451 134.102 42.767 134.552 42.299 135.452 cv
41.831 136.352 41.615 137.702 41.615 139.502 cv
41.615 141.302 41.831 142.652 42.299 143.552 cv
42.767 144.452 43.451 144.902 44.369 144.902 cv
45.287 144.902 45.971 144.452 46.439 143.552 cv
46.889 142.652 47.123 141.302 47.123 139.502 cv
47.123 137.702 46.889 136.352 46.439 135.452 cv
45.971 134.552 45.287 134.102 44.369 134.102 cv
44.369 132.698 mo
45.827 132.698 46.943 133.292 47.735 134.444 cv
48.509 135.614 48.905 137.306 48.905 139.502 cv
48.905 141.716 48.509 143.408 47.735 144.56 cv
46.943 145.712 45.827 146.288 44.369 146.288 cv
42.893 146.288 41.759 145.712 40.985 144.56 cv
40.211 143.408 39.833 141.716 39.833 139.502 cv
39.833 137.306 40.211 135.614 40.985 134.444 cv
41.759 133.292 42.893 132.698 44.369 132.698 cv
f
52.019 143.822 mo
53.873 143.822 li
53.873 146.054 li
52.019 146.054 li
52.019 143.822 li
f
61.7569 138.782 mo
60.9649 138.782 60.3349 139.07 59.8669 139.61 cv
59.3989 140.15 59.1649 140.906 59.1649 141.842 cv
59.1649 142.796 59.3989 143.552 59.8669 144.092 cv
60.3349 144.632 60.9649 144.902 61.7569 144.902 cv
62.5489 144.902 63.1789 144.632 63.6469 144.092 cv
64.1149 143.552 64.3489 142.796 64.3489 141.842 cv
64.3489 140.906 64.1149 140.15 63.6469 139.61 cv
63.1789 139.07 62.5489 138.782 61.7569 138.782 cv
65.2849 133.22 mo
65.2849 134.84 li
64.8349 134.624 64.3849 134.462 63.9349 134.354 cv
63.4669 134.246 63.0169 134.192 62.5849 134.192 cv
61.3969 134.192 60.4969 134.588 59.8849 135.38 cv
59.2729 136.172 58.9129 137.378 58.8409 138.962 cv
59.1829 138.458 59.6149 138.062 60.1369 137.792 cv
60.6589 137.522 61.2349 137.378 61.8649 137.378 cv
63.1789 137.378 64.2229 137.792 64.9789 138.584 cv
65.7349 139.376 66.1309 140.474 66.1309 141.842 cv
66.1309 143.192 65.7169 144.272 64.9249 145.082 cv
64.1329 145.892 63.0709 146.288 61.7569 146.288 cv
60.2449 146.288 59.0749 145.712 58.2829 144.56 cv
57.4729 143.408 57.0769 141.716 57.0769 139.502 cv
57.0769 137.432 57.5629 135.776 58.5529 134.552 cv
59.5249 133.328 60.8569 132.698 62.5129 132.698 cv
62.9449 132.698 63.3949 132.752 63.8629 132.824 cv
64.3129 132.914 64.7809 133.04 65.2849 133.22 cv
f
74.27 98.6994 mo
70.77 98.6994 li
f
74.27 98.6994 mo
70.77 98.6994 li
@
44.369 93.5833 mo
43.451 93.5833 42.767 94.0333 42.299 94.9333 cv
41.831 95.8333 41.615 97.1833 41.615 98.9833 cv
41.615 100.783 41.831 102.133 42.299 103.033 cv
42.767 103.933 43.451 104.383 44.369 104.383 cv
45.287 104.383 45.971 103.933 46.439 103.033 cv
46.889 102.133 47.123 100.783 47.123 98.9833 cv
47.123 97.1833 46.889 95.8333 46.439 94.9333 cv
45.971 94.0333 45.287 93.5833 44.369 93.5833 cv
44.369 92.1793 mo
45.827 92.1793 46.943 92.7733 47.735 93.9253 cv
48.509 95.0953 48.905 96.7873 48.905 98.9833 cv
48.905 101.197 48.509 102.889 47.735 104.041 cv
46.943 105.193 45.827 105.769 44.369 105.769 cv
42.893 105.769 41.759 105.193 40.985 104.041 cv
40.211 102.889 39.833 101.197 39.833 98.9833 cv
39.833 96.7873 40.211 95.0953 40.985 93.9253 cv
41.759 92.7733 42.893 92.1793 44.369 92.1793 cv
f
52.019 103.303 mo
53.873 103.303 li
53.873 105.535 li
52.019 105.535 li
52.019 103.303 li
f
57.2929 92.4133 mo
65.7349 92.4133 li
65.7349 93.1693 li
60.9649 105.535 li
59.1109 105.535 li
63.5929 93.9073 li
57.2929 93.9073 li
57.2929 92.4133 li
f
74.27 58.1803 mo
70.77 58.1803 li
f
74.27 58.1803 mo
70.77 58.1803 li
@
44.369 53.0642 mo
43.451 53.0642 42.767 53.5142 42.299 54.4142 cv
41.831 55.3142 41.615 56.6642 41.615 58.4642 cv
41.615 60.2642 41.831 61.6142 42.299 62.5142 cv
42.767 63.4142 43.451 63.8642 44.369 63.8642 cv
45.287 63.8642 45.971 63.4142 46.439 62.5142 cv
46.889 61.6142 47.123 60.2642 47.123 58.4642 cv
47.123 56.6642 46.889 55.3142 46.439 54.4142 cv
45.971 53.5142 45.287 53.0642 44.369 53.0642 cv
44.369 51.6602 mo
45.827 51.6602 46.943 52.2542 47.735 53.4062 cv
48.509 54.5762 48.905 56.2682 48.905 58.4642 cv
48.905 60.6782 48.509 62.3702 47.735 63.5222 cv
46.943 64.6742 45.827 65.2502 44.369 65.2502 cv
42.893 65.2502 41.759 64.6742 40.985 63.5222 cv
40.211 62.3702 39.833 60.6782 39.833 58.4642 cv
39.833 56.2682 40.211 54.5762 40.985 53.4062 cv
41.759 52.2542 42.893 51.6602 44.369 51.6602 cv
f
52.019 62.7842 mo
53.873 62.7842 li
53.873 65.0162 li
52.019 65.0162 li
52.019 62.7842 li
f
61.5409 58.7882 mo
60.6949 58.7882 60.0289 59.0222 59.5429 59.4722 cv
59.0569 59.9222 58.8229 60.5342 58.8229 61.3262 cv
58.8229 62.1182 59.0569 62.7482 59.5429 63.1982 cv
60.0289 63.6482 60.6949 63.8642 61.5409 63.8642 cv
62.3689 63.8642 63.0349 63.6482 63.5209 63.1802 cv
64.0069 62.7302 64.2589 62.1182 64.2589 61.3262 cv
64.2589 60.5342 64.0069 59.9222 63.5389 59.4722 cv
63.0529 59.0222 62.3869 58.7882 61.5409 58.7882 cv
59.7589 58.0322 mo
59.0029 57.8522 58.4089 57.4922 57.9769 56.9702 cv
57.5449 56.4482 57.3469 55.8182 57.3469 55.0622 cv
57.3469 54.0182 57.7069 53.1902 58.4629 52.5782 cv
59.2009 51.9662 60.2269 51.6602 61.5409 51.6602 cv
62.8369 51.6602 63.8629 51.9662 64.6189 52.5782 cv
65.3569 53.1902 65.7349 54.0182 65.7349 55.0622 cv
65.7349 55.8182 65.5189 56.4482 65.0869 56.9702 cv
64.6549 57.4922 64.0789 57.8522 63.3229 58.0322 cv
64.1689 58.2302 64.8349 58.6262 65.3209 59.2022 cv
65.7889 59.7782 66.0409 60.4982 66.0409 61.3262 cv
66.0409 62.6042 65.6449 63.5762 64.8709 64.2422 cv
64.0789 64.9262 62.9809 65.2502 61.5409 65.2502 cv
60.0829 65.2502 58.9669 64.9262 58.1929 64.2422 cv
57.4189 63.5762 57.0409 62.6042 57.0409 61.3262 cv
57.0409 60.4982 57.2749 59.7782 57.7609 59.2022 cv
58.2289 58.6262 58.8949 58.2302 59.7589 58.0322 cv
59.1109 55.2242 mo
59.1109 55.9082 59.3089 56.4482 59.7409 56.8262 cv
60.1729 57.2042 60.7669 57.3842 61.5409 57.3842 cv
62.2969 57.3842 62.8909 57.2042 63.3229 56.8262 cv
63.7549 56.4482 63.9709 55.9082 63.9709 55.2242 cv
63.9709 54.5402 63.7549 54.0182 63.3229 53.6402 cv
62.8909 53.2622 62.2969 53.0642 61.5409 53.0642 cv
60.7669 53.0642 60.1729 53.2622 59.7409 53.6402 cv
59.3089 54.0182 59.1109 54.5402 59.1109 55.2242 cv
f
74.27 17.6612 mo
70.77 17.6612 li
f
74.27 17.6612 mo
70.77 17.6612 li
@
44.369 12.5451 mo
43.451 12.5451 42.767 12.9951 42.299 13.8951 cv
41.831 14.7951 41.615 16.1451 41.615 17.9451 cv
41.615 19.7451 41.831 21.0951 42.299 21.9951 cv
42.767 22.8951 43.451 23.3451 44.369 23.3451 cv
45.287 23.3451 45.971 22.8951 46.439 21.9951 cv
46.889 21.0951 47.123 19.7451 47.123 17.9451 cv
47.123 16.1451 46.889 14.7951 46.439 13.8951 cv
45.971 12.9951 45.287 12.5451 44.369 12.5451 cv
44.369 11.1411 mo
45.827 11.1411 46.943 11.7351 47.735 12.8871 cv
48.509 14.0571 48.905 15.7491 48.905 17.9451 cv
48.905 20.1591 48.509 21.8511 47.735 23.0031 cv
46.943 24.1551 45.827 24.7311 44.369 24.7311 cv
42.893 24.7311 41.759 24.1551 40.985 23.0031 cv
40.211 21.8511 39.833 20.1591 39.833 17.9451 cv
39.833 15.7491 40.211 14.0571 40.985 12.8871 cv
41.759 11.7351 42.893 11.1411 44.369 11.1411 cv
f
52.019 22.2651 mo
53.873 22.2651 li
53.873 24.4971 li
52.019 24.4971 li
52.019 22.2651 li
f
57.7969 24.2271 mo
57.7969 22.6071 li
58.2289 22.8231 58.6789 22.9851 59.1469 23.0931 cv
59.5969 23.2011 60.0469 23.2551 60.4969 23.2551 cv
61.6489 23.2551 62.5489 22.8771 63.1609 22.0851 cv
63.7729 21.2931 64.1329 20.1051 64.2409 18.4851 cv
63.8809 18.9891 63.4489 19.3851 62.9449 19.6551 cv
62.4229 19.9251 61.8469 20.0511 61.2169 20.0511 cv
59.8849 20.0511 58.8409 19.6551 58.0849 18.8631 cv
57.3289 18.0711 56.9509 16.9911 56.9509 15.6051 cv
56.9509 14.2731 57.3469 13.1931 58.1389 12.3651 cv
58.9309 11.5551 59.9929 11.1411 61.3249 11.1411 cv
62.8369 11.1411 64.0069 11.7351 64.7989 12.8871 cv
65.5909 14.0571 66.0049 15.7491 66.0049 17.9451 cv
66.0049 20.0331 65.5009 21.6711 64.5289 22.8951 cv
63.5389 24.1191 62.2249 24.7311 60.5689 24.7311 cv
60.1189 24.7311 59.6689 24.6771 59.2189 24.6051 cv
58.7509 24.5331 58.2829 24.4071 57.7969 24.2271 cv
61.3249 18.6651 mo
62.1169 18.6651 62.7469 18.3951 63.2149 17.8551 cv
63.6829 17.3151 63.9169 16.5591 63.9169 15.6051 cv
63.9169 14.6691 63.6829 13.9131 63.2149 13.3731 cv
62.7469 12.8331 62.1169 12.5451 61.3249 12.5451 cv
60.5329 12.5451 59.9029 12.8331 59.4349 13.3731 cv
58.9669 13.9131 58.7329 14.6691 58.7329 15.6051 cv
58.7329 16.5591 58.9669 17.3151 59.4349 17.8551 cv
59.9029 18.3951 60.5329 18.6651 61.3249 18.6651 cv
f
13.493 245.253 mo
15.989 245.253 li
15.269 246.069 14.717 246.909 14.333 247.821 cv
13.973 248.733 13.781 249.669 13.781 250.677 cv
13.781 252.693 14.405 254.229 15.629 255.285 cv
16.853 256.341 18.605 256.869 20.909 256.869 cv
23.213 256.869 24.989 256.341 26.213 255.285 cv
27.437 254.229 28.037 252.693 28.037 250.677 cv
28.037 249.669 27.869 248.733 27.485 247.821 cv
27.125 246.909 26.573 246.069 25.829 245.253 cv
28.301 245.253 li
28.877 246.093 29.285 246.981 29.549 247.893 cv
29.813 248.805 29.957 249.789 29.957 250.821 cv
29.957 253.461 29.165 255.549 27.557 257.085 cv
25.949 258.621 23.741 259.365 20.909 259.365 cv
18.101 259.365 15.893 258.621 14.261 257.085 cv
12.653 255.549 11.837 253.461 11.837 250.821 cv
11.837 249.765 11.981 248.781 12.245 247.869 cv
12.533 246.957 12.941 246.069 13.493 245.253 cv
f
18.029 236.613 mo
18.029 237.765 18.485 238.677 19.397 239.349 cv
20.309 240.021 21.533 240.357 23.093 240.357 cv
24.677 240.357 25.901 240.045 26.813 239.373 cv
27.725 238.701 28.157 237.789 28.157 236.613 cv
28.157 235.461 27.725 234.549 26.813 233.877 cv
25.901 233.205 24.677 232.869 23.093 232.869 cv
21.557 232.869 20.309 233.205 19.397 233.877 cv
18.485 234.549 18.029 235.461 18.029 236.613 cv
16.205 236.613 mo
16.205 234.741 16.829 233.277 18.029 232.197 cv
19.253 231.141 20.933 230.589 23.093 230.589 cv
25.253 230.589 26.933 231.141 28.133 232.197 cv
29.357 233.277 29.957 234.741 29.957 236.613 cv
29.957 238.509 29.357 239.997 28.133 241.053 cv
26.933 242.109 25.253 242.637 23.093 242.637 cv
20.933 242.637 19.253 242.109 18.029 241.053 cv
16.829 239.997 16.205 238.509 16.205 236.613 cv
f
21.725 216.093 mo
29.645 216.093 li
29.645 218.253 li
21.797 218.253 li
20.549 218.253 19.637 218.517 19.013 218.997 cv
18.389 219.477 18.077 220.197 18.077 221.157 cv
18.077 222.333 18.461 223.245 19.205 223.917 cv
19.949 224.589 20.957 224.925 22.229 224.925 cv
29.645 224.925 li
29.645 227.085 li
16.517 227.085 li
16.517 224.925 li
18.557 224.925 li
17.789 224.421 17.189 223.821 16.805 223.101 cv
16.421 222.405 16.205 221.589 16.205 220.677 cv
16.205 219.189 16.685 218.037 17.621 217.269 cv
18.557 216.501 19.925 216.093 21.725 216.093 cv
f
11.405 205.149 mo
13.205 205.149 li
13.205 207.213 li
13.205 207.981 13.373 208.533 13.685 208.821 cv
13.997 209.133 14.549 209.277 15.365 209.277 cv
16.517 209.277 li
16.517 205.725 li
18.197 205.725 li
18.197 209.277 li
29.645 209.277 li
29.645 211.437 li
18.197 211.437 li
18.197 213.501 li
16.517 213.501 li
16.517 211.437 li
15.605 211.437 li
14.165 211.437 13.085 211.101 12.413 210.429 cv
11.741 209.757 11.405 208.677 11.405 207.189 cv
11.405 205.149 li
f
16.517 203.349 mo
16.517 201.189 li
29.645 201.189 li
29.645 203.349 li
16.517 203.349 li
11.405 203.349 mo
11.405 201.189 li
14.141 201.189 li
14.141 203.349 li
11.405 203.349 li
f
18.509 188.037 mo
11.405 188.037 li
11.405 185.877 li
29.645 185.877 li
29.645 188.037 li
27.677 188.037 li
28.469 188.493 29.045 189.069 29.405 189.765 cv
29.765 190.461 29.957 191.277 29.957 192.237 cv
29.957 193.821 29.333 195.117 28.085 196.125 cv
26.837 197.133 25.157 197.613 23.093 197.613 cv
21.029 197.613 19.373 197.133 18.101 196.125 cv
16.853 195.117 16.205 193.821 16.205 192.237 cv
16.205 191.277 16.397 190.461 16.781 189.765 cv
17.165 189.069 17.741 188.493 18.509 188.037 cv
23.093 195.381 mo
24.677 195.381 25.925 195.069 26.837 194.421 cv
27.749 193.773 28.181 192.861 28.181 191.709 cv
28.181 190.581 27.749 189.693 26.837 189.021 cv
25.925 188.373 24.677 188.037 23.093 188.037 cv
21.509 188.037 20.285 188.373 19.373 189.021 cv
18.461 189.693 18.005 190.581 18.005 191.709 cv
18.005 192.861 18.461 193.773 19.373 194.421 cv
20.285 195.069 21.509 195.381 23.093 195.381 cv
f
22.541 170.205 mo
23.597 170.205 li
23.597 180.117 li
25.085 180.021 26.237 179.589 27.005 178.773 cv
27.773 177.981 28.157 176.877 28.157 175.437 cv
28.157 174.621 28.061 173.805 27.869 173.037 cv
27.677 172.269 27.365 171.477 26.933 170.709 cv
28.973 170.709 li
29.309 171.477 29.573 172.269 29.717 173.085 cv
29.861 173.901 29.957 174.741 29.957 175.557 cv
29.957 177.669 29.357 179.325 28.157 180.549 cv
26.957 181.773 25.301 182.373 23.213 182.373 cv
21.077 182.373 19.373 181.797 18.101 180.645 cv
16.853 179.493 16.205 177.909 16.205 175.941 cv
16.205 174.165 16.781 172.773 17.909 171.741 cv
19.061 170.733 20.597 170.205 22.541 170.205 cv
21.917 172.365 mo
20.741 172.389 19.805 172.725 19.085 173.349 cv
18.389 173.997 18.029 174.861 18.029 175.917 cv
18.029 177.117 18.389 178.077 19.061 178.797 cv
19.733 179.517 20.693 179.949 21.917 180.045 cv
21.917 172.365 li
f
21.725 155.757 mo
29.645 155.757 li
29.645 157.917 li
21.797 157.917 li
20.549 157.917 19.637 158.181 19.013 158.661 cv
18.389 159.141 18.077 159.861 18.077 160.821 cv
18.077 161.997 18.461 162.909 19.205 163.581 cv
19.949 164.253 20.957 164.589 22.229 164.589 cv
29.645 164.589 li
29.645 166.749 li
16.517 166.749 li
16.517 164.589 li
18.557 164.589 li
17.789 164.085 17.189 163.485 16.805 162.765 cv
16.421 162.069 16.205 161.253 16.205 160.341 cv
16.205 158.853 16.685 157.701 17.621 156.933 cv
18.557 156.165 19.925 155.757 21.725 155.757 cv
f
17.021 142.005 mo
19.037 142.005 li
18.701 142.629 18.461 143.229 18.293 143.853 cv
18.125 144.477 18.029 145.077 18.029 145.701 cv
18.029 147.093 18.485 148.197 19.373 148.965 cv
20.261 149.733 21.509 150.117 23.093 150.117 cv
24.701 150.117 25.949 149.733 26.837 148.965 cv
27.725 148.197 28.157 147.093 28.157 145.701 cv
28.157 145.077 28.085 144.477 27.917 143.853 cv
27.749 143.229 27.485 142.629 27.149 142.005 cv
29.141 142.005 li
29.429 142.629 29.645 143.253 29.765 143.877 cv
29.885 144.525 29.957 145.221 29.957 145.941 cv
29.957 147.909 29.357 149.493 28.109 150.645 cv
26.885 151.821 25.205 152.397 23.093 152.397 cv
20.957 152.397 19.277 151.821 18.053 150.645 cv
16.829 149.469 16.205 147.861 16.205 145.797 cv
16.205 145.125 16.277 144.477 16.421 143.853 cv
16.565 143.229 16.757 142.605 17.021 142.005 cv
f
22.541 127.029 mo
23.597 127.029 li
23.597 136.941 li
25.085 136.845 26.237 136.413 27.005 135.597 cv
27.773 134.805 28.157 133.701 28.157 132.261 cv
28.157 131.445 28.061 130.629 27.869 129.861 cv
27.677 129.093 27.365 128.301 26.933 127.533 cv
28.973 127.533 li
29.309 128.301 29.573 129.093 29.717 129.909 cv
29.861 130.725 29.957 131.565 29.957 132.381 cv
29.957 134.493 29.357 136.149 28.157 137.373 cv
26.957 138.597 25.301 139.197 23.213 139.197 cv
21.077 139.197 19.373 138.621 18.101 137.469 cv
16.853 136.317 16.205 134.733 16.205 132.765 cv
16.205 130.989 16.781 129.597 17.909 128.565 cv
19.061 127.557 20.597 127.029 22.541 127.029 cv
21.917 129.189 mo
20.741 129.213 19.805 129.549 19.085 130.173 cv
18.389 130.821 18.029 131.685 18.029 132.741 cv
18.029 133.941 18.389 134.901 19.061 135.621 cv
19.733 136.341 20.693 136.773 21.917 136.869 cv
21.917 129.189 li
f
1 lw
2 lc
82.2066 226.324 mo
98.0799 226.324 li
98.0799 113.71 li
82.2066 113.71 li
82.2066 226.324 li
@
90.1432 226.324 mo
90.1432 313.826 li
@
90.1432 113.71 mo
90.1432 51.474 li
@
86.1749 313.826 mo
94.1116 313.826 li
@
86.1749 51.474 mo
94.1116 51.474 li
@
113.953 252.34 mo
129.826 252.34 li
129.826 147.554 li
113.953 147.554 li
113.953 252.34 li
@
121.89 252.34 mo
121.89 342.395 li
@
121.89 147.554 mo
121.89 103.205 li
@
117.921 342.395 mo
125.858 342.395 li
@
117.921 103.205 mo
125.858 103.205 li
@
145.7 258.51 mo
161.573 258.51 li
161.573 162.297 li
145.7 162.297 li
145.7 258.51 li
@
153.636 258.51 mo
153.636 341.459 li
@
153.636 162.297 mo
153.636 86.662 li
@
149.668 341.459 mo
157.605 341.459 li
@
149.668 86.662 mo
157.605 86.662 li
@
177.446 215.49 mo
193.319 215.49 li
193.319 78.4398 li
177.446 78.4398 li
177.446 215.49 li
@
185.383 215.49 mo
185.383 352.319 li
@
185.383 78.4398 mo
185.383 74.3879 li
@
181.414 352.319 mo
189.351 352.319 li
@
181.414 74.3879 mo
189.351 74.3879 li
@
209.193 281.206 mo
225.066 281.206 li
225.066 126.199 li
209.193 126.199 li
209.193 281.206 li
@
217.129 281.206 mo
217.129 304.553 li
@
217.129 126.199 mo
217.129 112.408 li
@
213.161 304.553 mo
221.098 304.553 li
@
213.161 112.408 mo
221.098 112.408 li
@
240.939 351.392 mo
256.812 351.392 li
256.812 262.876 li
240.939 262.876 li
240.939 351.392 li
@
248.876 351.392 mo
248.876 351.392 li
@
248.876 262.876 mo
248.876 188.206 li
@
244.907 351.392 mo
252.844 351.392 li
@
244.907 188.206 mo
252.844 188.206 li
@
gsave
245.376 112.65 mo
252.376 112.65 li
252.376 105.65 li
245.376 105.65 li
cp
clp
0 lc
248.876 112.15 mo
249.671 112.15 250.434 111.834 250.997 111.271 cv
251.56 110.709 251.876 109.946 251.876 109.15 cv
251.876 108.355 251.56 107.591 250.997 107.029 cv
250.434 106.466 249.671 106.15 248.876 106.15 cv
248.08 106.15 247.317 106.466 246.754 107.029 cv
246.192 107.591 245.876 108.355 245.876 109.15 cv
245.876 109.946 246.192 110.709 246.754 111.271 cv
247.317 111.834 248.08 112.15 248.876 112.15 cv
cp
@
grestore
gsave
245.376 112.65 mo
252.376 112.65 li
252.376 105.65 li
245.376 105.65 li
cp
clp
0 lc
248.876 112.15 mo
249.671 112.15 250.434 111.834 250.997 111.271 cv
251.56 110.709 251.876 109.946 251.876 109.15 cv
251.876 108.355 251.56 107.591 250.997 107.029 cv
250.434 106.466 249.671 106.15 248.876 106.15 cv
248.08 106.15 247.317 106.466 246.754 107.029 cv
246.192 107.591 245.876 108.355 245.876 109.15 cv
245.876 109.946 246.192 110.709 246.754 111.271 cv
247.317 111.834 248.08 112.15 248.876 112.15 cv
cp
@
grestore
gsave
245.376 112.65 mo
252.376 112.65 li
252.376 105.65 li
245.376 105.65 li
cp
clp
0 lc
248.876 112.15 mo
249.671 112.15 250.434 111.834 250.997 111.271 cv
251.56 110.709 251.876 109.946 251.876 109.15 cv
251.876 108.355 251.56 107.591 250.997 107.029 cv
250.434 106.466 249.671 106.15 248.876 106.15 cv
248.08 106.15 247.317 106.466 246.754 107.029 cv
246.192 107.591 245.876 108.355 245.876 109.15 cv
245.876 109.946 246.192 110.709 246.754 111.271 cv
247.317 111.834 248.08 112.15 248.876 112.15 cv
cp
@
grestore
gsave
245.376 112.65 mo
252.376 112.65 li
252.376 105.65 li
245.376 105.65 li
cp
clp
0 lc
248.876 112.15 mo
249.671 112.15 250.434 111.834 250.997 111.271 cv
251.56 110.709 251.876 109.946 251.876 109.15 cv
251.876 108.355 251.56 107.591 250.997 107.029 cv
250.434 106.466 249.671 106.15 248.876 106.15 cv
248.08 106.15 247.317 106.466 246.754 107.029 cv
246.192 107.591 245.876 108.355 245.876 109.15 cv
245.876 109.946 246.192 110.709 246.754 111.271 cv
247.317 111.834 248.08 112.15 248.876 112.15 cv
cp
@
grestore
gsave
245.376 112.65 mo
252.376 112.65 li
252.376 105.65 li
245.376 105.65 li
cp
clp
0 lc
248.876 112.15 mo
249.671 112.15 250.434 111.834 250.997 111.271 cv
251.56 110.709 251.876 109.946 251.876 109.15 cv
251.876 108.355 251.56 107.591 250.997 107.029 cv
250.434 106.466 249.671 106.15 248.876 106.15 cv
248.08 106.15 247.317 106.466 246.754 107.029 cv
246.192 107.591 245.876 108.355 245.876 109.15 cv
245.876 109.946 246.192 110.709 246.754 111.271 cv
247.317 111.834 248.08 112.15 248.876 112.15 cv
cp
@
grestore
gsave
245.376 112.65 mo
252.376 112.65 li
252.376 105.65 li
245.376 105.65 li
cp
clp
0 lc
248.876 112.15 mo
249.671 112.15 250.434 111.834 250.997 111.271 cv
251.56 110.709 251.876 109.946 251.876 109.15 cv
251.876 108.355 251.56 107.591 250.997 107.029 cv
250.434 106.466 249.671 106.15 248.876 106.15 cv
248.08 106.15 247.317 106.466 246.754 107.029 cv
246.192 107.591 245.876 108.355 245.876 109.15 cv
245.876 109.946 246.192 110.709 246.754 111.271 cv
247.317 111.834 248.08 112.15 248.876 112.15 cv
cp
@
grestore
gsave
245.376 112.65 mo
252.376 112.65 li
252.376 105.65 li
245.376 105.65 li
cp
clp
0 lc
248.876 112.15 mo
249.671 112.15 250.434 111.834 250.997 111.271 cv
251.56 110.709 251.876 109.946 251.876 109.15 cv
251.876 108.355 251.56 107.591 250.997 107.029 cv
250.434 106.466 249.671 106.15 248.876 106.15 cv
248.08 106.15 247.317 106.466 246.754 107.029 cv
246.192 107.591 245.876 108.355 245.876 109.15 cv
245.876 109.946 246.192 110.709 246.754 111.271 cv
247.317 111.834 248.08 112.15 248.876 112.15 cv
cp
@
grestore
gsave
245.376 112.65 mo
252.376 112.65 li
252.376 105.65 li
245.376 105.65 li
cp
clp
0 lc
248.876 112.15 mo
249.671 112.15 250.434 111.834 250.997 111.271 cv
251.56 110.709 251.876 109.946 251.876 109.15 cv
251.876 108.355 251.56 107.591 250.997 107.029 cv
250.434 106.466 249.671 106.15 248.876 106.15 cv
248.08 106.15 247.317 106.466 246.754 107.029 cv
246.192 107.591 245.876 108.355 245.876 109.15 cv
245.876 109.946 246.192 110.709 246.754 111.271 cv
247.317 111.834 248.08 112.15 248.876 112.15 cv
cp
@
grestore
gsave
245.376 112.65 mo
252.376 112.65 li
252.376 105.65 li
245.376 105.65 li
cp
clp
0 lc
248.876 112.15 mo
249.671 112.15 250.434 111.834 250.997 111.271 cv
251.56 110.709 251.876 109.946 251.876 109.15 cv
251.876 108.355 251.56 107.591 250.997 107.029 cv
250.434 106.466 249.671 106.15 248.876 106.15 cv
248.08 106.15 247.317 106.466 246.754 107.029 cv
246.192 107.591 245.876 108.355 245.876 109.15 cv
245.876 109.946 246.192 110.709 246.754 111.271 cv
247.317 111.834 248.08 112.15 248.876 112.15 cv
cp
@
grestore
gsave
245.376 112.65 mo
252.376 112.65 li
252.376 105.65 li
245.376 105.65 li
cp
clp
0 lc
248.876 112.15 mo
249.671 112.15 250.434 111.834 250.997 111.271 cv
251.56 110.709 251.876 109.946 251.876 109.15 cv
251.876 108.355 251.56 107.591 250.997 107.029 cv
250.434 106.466 249.671 106.15 248.876 106.15 cv
248.08 106.15 247.317 106.466 246.754 107.029 cv
246.192 107.591 245.876 108.355 245.876 109.15 cv
245.876 109.946 246.192 110.709 246.754 111.271 cv
247.317 111.834 248.08 112.15 248.876 112.15 cv
cp
@
grestore
272.686 262.712 mo
288.559 262.712 li
288.559 123.954 li
272.686 123.954 li
272.686 262.712 li
@
280.622 262.712 mo
280.622 297.105 li
@
280.622 123.954 mo
280.622 112.307 li
@
276.654 297.105 mo
284.591 297.105 li
@
276.654 112.307 mo
284.591 112.307 li
@
304.432 317.505 mo
320.305 317.505 li
320.305 151.155 li
304.432 151.155 li
304.432 317.505 li
@
312.369 317.505 mo
312.369 340.29 li
@
312.369 151.155 mo
312.369 65.0681 li
@
308.4 340.29 mo
316.337 340.29 li
@
308.4 65.0681 mo
316.337 65.0681 li
@
336.179 294.58 mo
352.052 294.58 li
352.052 100.172 li
336.179 100.172 li
336.179 294.58 li
@
344.115 294.58 mo
344.115 343.728 li
@
344.115 100.172 mo
344.115 76.232 li
@
340.147 343.728 mo
348.084 343.728 li
@
340.147 76.232 mo
348.084 76.232 li
@
367.925 353.165 mo
383.798 353.165 li
383.798 261.863 li
367.925 261.863 li
367.925 353.165 li
@
375.862 353.165 mo
375.862 353.165 li
@
375.862 261.863 mo
375.862 228.319 li
@
371.893 353.165 mo
379.83 353.165 li
@
371.893 228.319 mo
379.83 228.319 li
@
gsave
372.362 59.4902 mo
379.362 59.4902 li
379.362 52.4902 li
372.362 52.4902 li
cp
clp
0 lc
375.862 58.9902 mo
376.657 58.9902 377.421 58.6741 377.983 58.1116 cv
378.546 57.549 378.862 56.7858 378.862 55.9902 cv
378.862 55.1946 378.546 54.4315 377.983 53.8689 cv
377.421 53.3063 376.657 52.9902 375.862 52.9902 cv
375.066 52.9902 374.303 53.3063 373.74 53.8689 cv
373.178 54.4315 372.862 55.1946 372.862 55.9902 cv
372.862 56.7858 373.178 57.549 373.74 58.1116 cv
374.303 58.6741 375.066 58.9902 375.862 58.9902 cv
cp
@
grestore
gsave
372.362 59.4902 mo
379.362 59.4902 li
379.362 52.4902 li
372.362 52.4902 li
cp
clp
0 lc
375.862 58.9902 mo
376.657 58.9902 377.421 58.6741 377.983 58.1116 cv
378.546 57.549 378.862 56.7858 378.862 55.9902 cv
378.862 55.1946 378.546 54.4315 377.983 53.8689 cv
377.421 53.3063 376.657 52.9902 375.862 52.9902 cv
375.066 52.9902 374.303 53.3063 373.74 53.8689 cv
373.178 54.4315 372.862 55.1946 372.862 55.9902 cv
372.862 56.7858 373.178 57.549 373.74 58.1116 cv
374.303 58.6741 375.066 58.9902 375.862 58.9902 cv
cp
@
grestore
gsave
372.362 59.4902 mo
379.362 59.4902 li
379.362 52.4902 li
372.362 52.4902 li
cp
clp
0 lc
375.862 58.9902 mo
376.657 58.9902 377.421 58.6741 377.983 58.1116 cv
378.546 57.549 378.862 56.7858 378.862 55.9902 cv
378.862 55.1946 378.546 54.4315 377.983 53.8689 cv
377.421 53.3063 376.657 52.9902 375.862 52.9902 cv
375.066 52.9902 374.303 53.3063 373.74 53.8689 cv
373.178 54.4315 372.862 55.1946 372.862 55.9902 cv
372.862 56.7858 373.178 57.549 373.74 58.1116 cv
374.303 58.6741 375.066 58.9902 375.862 58.9902 cv
cp
@
grestore
gsave
372.362 59.4902 mo
379.362 59.4902 li
379.362 52.4902 li
372.362 52.4902 li
cp
clp
0 lc
375.862 58.9902 mo
376.657 58.9902 377.421 58.6741 377.983 58.1116 cv
378.546 57.549 378.862 56.7858 378.862 55.9902 cv
378.862 55.1946 378.546 54.4315 377.983 53.8689 cv
377.421 53.3063 376.657 52.9902 375.862 52.9902 cv
375.066 52.9902 374.303 53.3063 373.74 53.8689 cv
373.178 54.4315 372.862 55.1946 372.862 55.9902 cv
372.862 56.7858 373.178 57.549 373.74 58.1116 cv
374.303 58.6741 375.066 58.9902 375.862 58.9902 cv
cp
@
grestore
gsave
372.362 59.4902 mo
379.362 59.4902 li
379.362 52.4902 li
372.362 52.4902 li
cp
clp
0 lc
375.862 58.9902 mo
376.657 58.9902 377.421 58.6741 377.983 58.1116 cv
378.546 57.549 378.862 56.7858 378.862 55.9902 cv
378.862 55.1946 378.546 54.4315 377.983 53.8689 cv
377.421 53.3063 376.657 52.9902 375.862 52.9902 cv
375.066 52.9902 374.303 53.3063 373.74 53.8689 cv
373.178 54.4315 372.862 55.1946 372.862 55.9902 cv
372.862 56.7858 373.178 57.549 373.74 58.1116 cv
374.303 58.6741 375.066 58.9902 375.862 58.9902 cv
cp
@
grestore
gsave
372.362 59.4902 mo
379.362 59.4902 li
379.362 52.4902 li
372.362 52.4902 li
cp
clp
0 lc
375.862 58.9902 mo
376.657 58.9902 377.421 58.6741 377.983 58.1116 cv
378.546 57.549 378.862 56.7858 378.862 55.9902 cv
378.862 55.1946 378.546 54.4315 377.983 53.8689 cv
377.421 53.3063 376.657 52.9902 375.862 52.9902 cv
375.066 52.9902 374.303 53.3063 373.74 53.8689 cv
373.178 54.4315 372.862 55.1946 372.862 55.9902 cv
372.862 56.7858 373.178 57.549 373.74 58.1116 cv
374.303 58.6741 375.066 58.9902 375.862 58.9902 cv
cp
@
grestore
gsave
372.362 59.4902 mo
379.362 59.4902 li
379.362 52.4902 li
372.362 52.4902 li
cp
clp
0 lc
375.862 58.9902 mo
376.657 58.9902 377.421 58.6741 377.983 58.1116 cv
378.546 57.549 378.862 56.7858 378.862 55.9902 cv
378.862 55.1946 378.546 54.4315 377.983 53.8689 cv
377.421 53.3063 376.657 52.9902 375.862 52.9902 cv
375.066 52.9902 374.303 53.3063 373.74 53.8689 cv
373.178 54.4315 372.862 55.1946 372.862 55.9902 cv
372.862 56.7858 373.178 57.549 373.74 58.1116 cv
374.303 58.6741 375.066 58.9902 375.862 58.9902 cv
cp
@
grestore
gsave
372.362 59.4902 mo
379.362 59.4902 li
379.362 52.4902 li
372.362 52.4902 li
cp
clp
0 lc
375.862 58.9902 mo
376.657 58.9902 377.421 58.6741 377.983 58.1116 cv
378.546 57.549 378.862 56.7858 378.862 55.9902 cv
378.862 55.1946 378.546 54.4315 377.983 53.8689 cv
377.421 53.3063 376.657 52.9902 375.862 52.9902 cv
375.066 52.9902 374.303 53.3063 373.74 53.8689 cv
373.178 54.4315 372.862 55.1946 372.862 55.9902 cv
372.862 56.7858 373.178 57.549 373.74 58.1116 cv
374.303 58.6741 375.066 58.9902 375.862 58.9902 cv
cp
@
grestore
gsave
372.362 59.4902 mo
379.362 59.4902 li
379.362 52.4902 li
372.362 52.4902 li
cp
clp
0 lc
375.862 58.9902 mo
376.657 58.9902 377.421 58.6741 377.983 58.1116 cv
378.546 57.549 378.862 56.7858 378.862 55.9902 cv
378.862 55.1946 378.546 54.4315 377.983 53.8689 cv
377.421 53.3063 376.657 52.9902 375.862 52.9902 cv
375.066 52.9902 374.303 53.3063 373.74 53.8689 cv
373.178 54.4315 372.862 55.1946 372.862 55.9902 cv
372.862 56.7858 373.178 57.549 373.74 58.1116 cv
374.303 58.6741 375.066 58.9902 375.862 58.9902 cv
cp
@
grestore
gsave
372.362 59.4902 mo
379.362 59.4902 li
379.362 52.4902 li
372.362 52.4902 li
cp
clp
0 lc
375.862 58.9902 mo
376.657 58.9902 377.421 58.6741 377.983 58.1116 cv
378.546 57.549 378.862 56.7858 378.862 55.9902 cv
378.862 55.1946 378.546 54.4315 377.983 53.8689 cv
377.421 53.3063 376.657 52.9902 375.862 52.9902 cv
375.066 52.9902 374.303 53.3063 373.74 53.8689 cv
373.178 54.4315 372.862 55.1946 372.862 55.9902 cv
372.862 56.7858 373.178 57.549 373.74 58.1116 cv
374.303 58.6741 375.066 58.9902 375.862 58.9902 cv
cp
@
grestore
gsave
372.362 59.4902 mo
379.362 59.4902 li
379.362 52.4902 li
372.362 52.4902 li
cp
clp
0 lc
375.862 58.9902 mo
376.657 58.9902 377.421 58.6741 377.983 58.1116 cv
378.546 57.549 378.862 56.7858 378.862 55.9902 cv
378.862 55.1946 378.546 54.4315 377.983 53.8689 cv
377.421 53.3063 376.657 52.9902 375.862 52.9902 cv
375.066 52.9902 374.303 53.3063 373.74 53.8689 cv
373.178 54.4315 372.862 55.1946 372.862 55.9902 cv
372.862 56.7858 373.178 57.549 373.74 58.1116 cv
374.303 58.6741 375.066 58.9902 375.862 58.9902 cv
cp
@
grestore
gsave
372.362 59.4902 mo
379.362 59.4902 li
379.362 52.4902 li
372.362 52.4902 li
cp
clp
0 lc
375.862 58.9902 mo
376.657 58.9902 377.421 58.6741 377.983 58.1116 cv
378.546 57.549 378.862 56.7858 378.862 55.9902 cv
378.862 55.1946 378.546 54.4315 377.983 53.8689 cv
377.421 53.3063 376.657 52.9902 375.862 52.9902 cv
375.066 52.9902 374.303 53.3063 373.74 53.8689 cv
373.178 54.4315 372.862 55.1946 372.862 55.9902 cv
372.862 56.7858 373.178 57.549 373.74 58.1116 cv
374.303 58.6741 375.066 58.9902 375.862 58.9902 cv
cp
@
grestore
gsave
372.362 59.4902 mo
379.362 59.4902 li
379.362 52.4902 li
372.362 52.4902 li
cp
clp
0 lc
375.862 58.9902 mo
376.657 58.9902 377.421 58.6741 377.983 58.1116 cv
378.546 57.549 378.862 56.7858 378.862 55.9902 cv
378.862 55.1946 378.546 54.4315 377.983 53.8689 cv
377.421 53.3063 376.657 52.9902 375.862 52.9902 cv
375.066 52.9902 374.303 53.3063 373.74 53.8689 cv
373.178 54.4315 372.862 55.1946 372.862 55.9902 cv
372.862 56.7858 373.178 57.549 373.74 58.1116 cv
374.303 58.6741 375.066 58.9902 375.862 58.9902 cv
cp
@
grestore
gsave
372.362 59.4902 mo
379.362 59.4902 li
379.362 52.4902 li
372.362 52.4902 li
cp
clp
0 lc
375.862 58.9902 mo
376.657 58.9902 377.421 58.6741 377.983 58.1116 cv
378.546 57.549 378.862 56.7858 378.862 55.9902 cv
378.862 55.1946 378.546 54.4315 377.983 53.8689 cv
377.421 53.3063 376.657 52.9902 375.862 52.9902 cv
375.066 52.9902 374.303 53.3063 373.74 53.8689 cv
373.178 54.4315 372.862 55.1946 372.862 55.9902 cv
372.862 56.7858 373.178 57.549 373.74 58.1116 cv
374.303 58.6741 375.066 58.9902 375.862 58.9902 cv
cp
@
grestore
gsave
372.362 59.4902 mo
379.362 59.4902 li
379.362 52.4902 li
372.362 52.4902 li
cp
clp
0 lc
375.862 58.9902 mo
376.657 58.9902 377.421 58.6741 377.983 58.1116 cv
378.546 57.549 378.862 56.7858 378.862 55.9902 cv
378.862 55.1946 378.546 54.4315 377.983 53.8689 cv
377.421 53.3063 376.657 52.9902 375.862 52.9902 cv
375.066 52.9902 374.303 53.3063 373.74 53.8689 cv
373.178 54.4315 372.862 55.1946 372.862 55.9902 cv
372.862 56.7858 373.178 57.549 373.74 58.1116 cv
374.303 58.6741 375.066 58.9902 375.862 58.9902 cv
cp
@
grestore
399.672 347.761 mo
415.545 347.761 li
415.545 296.938 li
399.672 296.938 li
399.672 347.761 li
@
407.608 347.761 mo
407.608 347.761 li
@
407.608 296.938 mo
407.608 296.938 li
@
403.64 347.761 mo
411.577 347.761 li
@
403.64 296.938 mo
411.577 296.938 li
@
gsave
404.108 198.888 mo
411.108 198.888 li
411.108 191.888 li
404.108 191.888 li
cp
clp
0 lc
407.608 198.388 mo
408.404 198.388 409.167 198.072 409.73 197.509 cv
410.292 196.947 410.608 196.184 410.608 195.388 cv
410.608 194.593 410.292 193.829 409.73 193.267 cv
409.167 192.704 408.404 192.388 407.608 192.388 cv
406.813 192.388 406.049 192.704 405.487 193.267 cv
404.924 193.829 404.608 194.593 404.608 195.388 cv
404.608 196.184 404.924 196.947 405.487 197.509 cv
406.049 198.072 406.813 198.388 407.608 198.388 cv
cp
@
grestore
gsave
404.108 144.293 mo
411.108 144.293 li
411.108 137.293 li
404.108 137.293 li
cp
clp
0 lc
407.608 143.793 mo
408.404 143.793 409.167 143.477 409.73 142.914 cv
410.292 142.351 410.608 141.588 410.608 140.793 cv
410.608 139.997 410.292 139.234 409.73 138.671 cv
409.167 138.109 408.404 137.793 407.608 137.793 cv
406.813 137.793 406.049 138.109 405.487 138.671 cv
404.924 139.234 404.608 139.997 404.608 140.793 cv
404.608 141.588 404.924 142.351 405.487 142.914 cv
406.049 143.477 406.813 143.793 407.608 143.793 cv
cp
@
grestore
gsave
404.108 198.888 mo
411.108 198.888 li
411.108 191.888 li
404.108 191.888 li
cp
clp
0 lc
407.608 198.388 mo
408.404 198.388 409.167 198.072 409.73 197.509 cv
410.292 196.947 410.608 196.184 410.608 195.388 cv
410.608 194.593 410.292 193.829 409.73 193.267 cv
409.167 192.704 408.404 192.388 407.608 192.388 cv
406.813 192.388 406.049 192.704 405.487 193.267 cv
404.924 193.829 404.608 194.593 404.608 195.388 cv
404.608 196.184 404.924 196.947 405.487 197.509 cv
406.049 198.072 406.813 198.388 407.608 198.388 cv
cp
@
grestore
gsave
404.108 198.888 mo
411.108 198.888 li
411.108 191.888 li
404.108 191.888 li
cp
clp
0 lc
407.608 198.388 mo
408.404 198.388 409.167 198.072 409.73 197.509 cv
410.292 196.947 410.608 196.184 410.608 195.388 cv
410.608 194.593 410.292 193.829 409.73 193.267 cv
409.167 192.704 408.404 192.388 407.608 192.388 cv
406.813 192.388 406.049 192.704 405.487 193.267 cv
404.924 193.829 404.608 194.593 404.608 195.388 cv
404.608 196.184 404.924 196.947 405.487 197.509 cv
406.049 198.072 406.813 198.388 407.608 198.388 cv
cp
@
grestore
gsave
404.108 144.293 mo
411.108 144.293 li
411.108 137.293 li
404.108 137.293 li
cp
clp
0 lc
407.608 143.793 mo
408.404 143.793 409.167 143.477 409.73 142.914 cv
410.292 142.351 410.608 141.588 410.608 140.793 cv
410.608 139.997 410.292 139.234 409.73 138.671 cv
409.167 138.109 408.404 137.793 407.608 137.793 cv
406.813 137.793 406.049 138.109 405.487 138.671 cv
404.924 139.234 404.608 139.997 404.608 140.793 cv
404.608 141.588 404.924 142.351 405.487 142.914 cv
406.049 143.477 406.813 143.793 407.608 143.793 cv
cp
@
grestore
gsave
404.108 198.888 mo
411.108 198.888 li
411.108 191.888 li
404.108 191.888 li
cp
clp
0 lc
407.608 198.388 mo
408.404 198.388 409.167 198.072 409.73 197.509 cv
410.292 196.947 410.608 196.184 410.608 195.388 cv
410.608 194.593 410.292 193.829 409.73 193.267 cv
409.167 192.704 408.404 192.388 407.608 192.388 cv
406.813 192.388 406.049 192.704 405.487 193.267 cv
404.924 193.829 404.608 194.593 404.608 195.388 cv
404.608 196.184 404.924 196.947 405.487 197.509 cv
406.049 198.072 406.813 198.388 407.608 198.388 cv
cp
@
grestore
gsave
404.108 144.293 mo
411.108 144.293 li
411.108 137.293 li
404.108 137.293 li
cp
clp
0 lc
407.608 143.793 mo
408.404 143.793 409.167 143.477 409.73 142.914 cv
410.292 142.351 410.608 141.588 410.608 140.793 cv
410.608 139.997 410.292 139.234 409.73 138.671 cv
409.167 138.109 408.404 137.793 407.608 137.793 cv
406.813 137.793 406.049 138.109 405.487 138.671 cv
404.924 139.234 404.608 139.997 404.608 140.793 cv
404.608 141.588 404.924 142.351 405.487 142.914 cv
406.049 143.477 406.813 143.793 407.608 143.793 cv
cp
@
grestore
gsave
404.108 144.293 mo
411.108 144.293 li
411.108 137.293 li
404.108 137.293 li
cp
clp
0 lc
407.608 143.793 mo
408.404 143.793 409.167 143.477 409.73 142.914 cv
410.292 142.351 410.608 141.588 410.608 140.793 cv
410.608 139.997 410.292 139.234 409.73 138.671 cv
409.167 138.109 408.404 137.793 407.608 137.793 cv
406.813 137.793 406.049 138.109 405.487 138.671 cv
404.924 139.234 404.608 139.997 404.608 140.793 cv
404.608 141.588 404.924 142.351 405.487 142.914 cv
406.049 143.477 406.813 143.793 407.608 143.793 cv
cp
@
grestore
gsave
404.108 198.888 mo
411.108 198.888 li
411.108 191.888 li
404.108 191.888 li
cp
clp
0 lc
407.608 198.388 mo
408.404 198.388 409.167 198.072 409.73 197.509 cv
410.292 196.947 410.608 196.184 410.608 195.388 cv
410.608 194.593 410.292 193.829 409.73 193.267 cv
409.167 192.704 408.404 192.388 407.608 192.388 cv
406.813 192.388 406.049 192.704 405.487 193.267 cv
404.924 193.829 404.608 194.593 404.608 195.388 cv
404.608 196.184 404.924 196.947 405.487 197.509 cv
406.049 198.072 406.813 198.388 407.608 198.388 cv
cp
@
grestore
gsave
404.108 198.888 mo
411.108 198.888 li
411.108 191.888 li
404.108 191.888 li
cp
clp
0 lc
407.608 198.388 mo
408.404 198.388 409.167 198.072 409.73 197.509 cv
410.292 196.947 410.608 196.184 410.608 195.388 cv
410.608 194.593 410.292 193.829 409.73 193.267 cv
409.167 192.704 408.404 192.388 407.608 192.388 cv
406.813 192.388 406.049 192.704 405.487 193.267 cv
404.924 193.829 404.608 194.593 404.608 195.388 cv
404.608 196.184 404.924 196.947 405.487 197.509 cv
406.049 198.072 406.813 198.388 407.608 198.388 cv
cp
@
grestore
gsave
404.108 144.293 mo
411.108 144.293 li
411.108 137.293 li
404.108 137.293 li
cp
clp
0 lc
407.608 143.793 mo
408.404 143.793 409.167 143.477 409.73 142.914 cv
410.292 142.351 410.608 141.588 410.608 140.793 cv
410.608 139.997 410.292 139.234 409.73 138.671 cv
409.167 138.109 408.404 137.793 407.608 137.793 cv
406.813 137.793 406.049 138.109 405.487 138.671 cv
404.924 139.234 404.608 139.997 404.608 140.793 cv
404.608 141.588 404.924 142.351 405.487 142.914 cv
406.049 143.477 406.813 143.793 407.608 143.793 cv
cp
@
grestore
gsave
404.108 198.888 mo
411.108 198.888 li
411.108 191.888 li
404.108 191.888 li
cp
clp
0 lc
407.608 198.388 mo
408.404 198.388 409.167 198.072 409.73 197.509 cv
410.292 196.947 410.608 196.184 410.608 195.388 cv
410.608 194.593 410.292 193.829 409.73 193.267 cv
409.167 192.704 408.404 192.388 407.608 192.388 cv
406.813 192.388 406.049 192.704 405.487 193.267 cv
404.924 193.829 404.608 194.593 404.608 195.388 cv
404.608 196.184 404.924 196.947 405.487 197.509 cv
406.049 198.072 406.813 198.388 407.608 198.388 cv
cp
@
grestore
gsave
404.108 198.888 mo
411.108 198.888 li
411.108 191.888 li
404.108 191.888 li
cp
clp
0 lc
407.608 198.388 mo
408.404 198.388 409.167 198.072 409.73 197.509 cv
410.292 196.947 410.608 196.184 410.608 195.388 cv
410.608 194.593 410.292 193.829 409.73 193.267 cv
409.167 192.704 408.404 192.388 407.608 192.388 cv
406.813 192.388 406.049 192.704 405.487 193.267 cv
404.924 193.829 404.608 194.593 404.608 195.388 cv
404.608 196.184 404.924 196.947 405.487 197.509 cv
406.049 198.072 406.813 198.388 407.608 198.388 cv
cp
@
grestore
gsave
404.108 191.408 mo
411.108 191.408 li
411.108 184.408 li
404.108 184.408 li
cp
clp
0 lc
407.608 190.908 mo
408.404 190.908 409.167 190.592 409.73 190.029 cv
410.292 189.467 410.608 188.704 410.608 187.908 cv
410.608 187.112 410.292 186.349 409.73 185.787 cv
409.167 185.224 408.404 184.908 407.608 184.908 cv
406.813 184.908 406.049 185.224 405.487 185.787 cv
404.924 186.349 404.608 187.112 404.608 187.908 cv
404.608 188.704 404.924 189.467 405.487 190.029 cv
406.049 190.592 406.813 190.908 407.608 190.908 cv
cp
@
grestore
gsave
404.108 67.0389 mo
411.108 67.0389 li
411.108 60.0389 li
404.108 60.0389 li
cp
clp
0 lc
407.608 66.5389 mo
408.404 66.5389 409.167 66.2228 409.73 65.6603 cv
410.292 65.0977 410.608 64.3345 410.608 63.5389 cv
410.608 62.7433 410.292 61.9802 409.73 61.4176 cv
409.167 60.855 408.404 60.5389 407.608 60.5389 cv
406.813 60.5389 406.049 60.855 405.487 61.4176 cv
404.924 61.9802 404.608 62.7433 404.608 63.5389 cv
404.608 64.3345 404.924 65.0977 405.487 65.6603 cv
406.049 66.2228 406.813 66.5389 407.608 66.5389 cv
cp
@
grestore
gsave
404.108 191.408 mo
411.108 191.408 li
411.108 184.408 li
404.108 184.408 li
cp
clp
0 lc
407.608 190.908 mo
408.404 190.908 409.167 190.592 409.73 190.029 cv
410.292 189.467 410.608 188.704 410.608 187.908 cv
410.608 187.112 410.292 186.349 409.73 185.787 cv
409.167 185.224 408.404 184.908 407.608 184.908 cv
406.813 184.908 406.049 185.224 405.487 185.787 cv
404.924 186.349 404.608 187.112 404.608 187.908 cv
404.608 188.704 404.924 189.467 405.487 190.029 cv
406.049 190.592 406.813 190.908 407.608 190.908 cv
cp
@
grestore
gsave
404.108 198.888 mo
411.108 198.888 li
411.108 191.888 li
404.108 191.888 li
cp
clp
0 lc
407.608 198.388 mo
408.404 198.388 409.167 198.072 409.73 197.51 cv
410.292 196.947 410.608 196.184 410.608 195.388 cv
410.608 194.593 410.292 193.829 409.73 193.267 cv
409.167 192.704 408.404 192.388 407.608 192.388 cv
406.813 192.388 406.049 192.704 405.487 193.267 cv
404.924 193.829 404.608 194.593 404.608 195.388 cv
404.608 196.184 404.924 196.947 405.487 197.51 cv
406.049 198.072 406.813 198.388 407.608 198.388 cv
cp
@
grestore
gsave
404.108 144.293 mo
411.108 144.293 li
411.108 137.293 li
404.108 137.293 li
cp
clp
0 lc
407.608 143.793 mo
408.404 143.793 409.167 143.477 409.73 142.914 cv
410.292 142.351 410.608 141.588 410.608 140.793 cv
410.608 139.997 410.292 139.234 409.73 138.671 cv
409.167 138.109 408.404 137.793 407.608 137.793 cv
406.813 137.793 406.049 138.109 405.487 138.671 cv
404.924 139.234 404.608 139.997 404.608 140.793 cv
404.608 141.588 404.924 142.351 405.487 142.914 cv
406.049 143.477 406.813 143.793 407.608 143.793 cv
cp
@
grestore
gsave
404.108 144.293 mo
411.108 144.293 li
411.108 137.293 li
404.108 137.293 li
cp
clp
0 lc
407.608 143.793 mo
408.404 143.793 409.167 143.477 409.73 142.914 cv
410.292 142.351 410.608 141.588 410.608 140.793 cv
410.608 139.997 410.292 139.234 409.73 138.671 cv
409.167 138.109 408.404 137.793 407.608 137.793 cv
406.813 137.793 406.049 138.109 405.487 138.671 cv
404.924 139.234 404.608 139.997 404.608 140.793 cv
404.608 141.588 404.924 142.351 405.487 142.914 cv
406.049 143.477 406.813 143.793 407.608 143.793 cv
cp
@
grestore
gsave
404.108 144.293 mo
411.108 144.293 li
411.108 137.293 li
404.108 137.293 li
cp
clp
0 lc
407.608 143.793 mo
408.404 143.793 409.167 143.477 409.73 142.914 cv
410.292 142.351 410.608 141.588 410.608 140.793 cv
410.608 139.997 410.292 139.234 409.73 138.671 cv
409.167 138.109 408.404 137.793 407.608 137.793 cv
406.813 137.793 406.049 138.109 405.487 138.671 cv
404.924 139.234 404.608 139.997 404.608 140.793 cv
404.608 141.588 404.924 142.351 405.487 142.914 cv
406.049 143.477 406.813 143.793 407.608 143.793 cv
cp
@
grestore
gsave
404.108 198.888 mo
411.108 198.888 li
411.108 191.888 li
404.108 191.888 li
cp
clp
0 lc
407.608 198.388 mo
408.404 198.388 409.167 198.072 409.73 197.51 cv
410.292 196.947 410.608 196.184 410.608 195.388 cv
410.608 194.593 410.292 193.829 409.73 193.267 cv
409.167 192.704 408.404 192.388 407.608 192.388 cv
406.813 192.388 406.049 192.704 405.487 193.267 cv
404.924 193.829 404.608 194.593 404.608 195.388 cv
404.608 196.184 404.924 196.947 405.487 197.51 cv
406.049 198.072 406.813 198.388 407.608 198.388 cv
cp
@
grestore
gsave
404.108 198.888 mo
411.108 198.888 li
411.108 191.888 li
404.108 191.888 li
cp
clp
0 lc
407.608 198.388 mo
408.404 198.388 409.167 198.072 409.73 197.51 cv
410.292 196.947 410.608 196.184 410.608 195.388 cv
410.608 194.593 410.292 193.829 409.73 193.267 cv
409.167 192.704 408.404 192.388 407.608 192.388 cv
406.813 192.388 406.049 192.704 405.487 193.267 cv
404.924 193.829 404.608 194.593 404.608 195.388 cv
404.608 196.184 404.924 196.947 405.487 197.51 cv
406.049 198.072 406.813 198.388 407.608 198.388 cv
cp
@
grestore
gsave
404.108 198.888 mo
411.108 198.888 li
411.108 191.888 li
404.108 191.888 li
cp
clp
0 lc
407.608 198.388 mo
408.404 198.388 409.167 198.072 409.73 197.51 cv
410.292 196.947 410.608 196.184 410.608 195.388 cv
410.608 194.593 410.292 193.829 409.73 193.267 cv
409.167 192.704 408.404 192.388 407.608 192.388 cv
406.813 192.388 406.049 192.704 405.487 193.267 cv
404.924 193.829 404.608 194.593 404.608 195.388 cv
404.608 196.184 404.924 196.947 405.487 197.51 cv
406.049 198.072 406.813 198.388 407.608 198.388 cv
cp
@
grestore
gsave
404.108 67.0389 mo
411.108 67.0389 li
411.108 60.0389 li
404.108 60.0389 li
cp
clp
0 lc
407.608 66.5389 mo
408.404 66.5389 409.167 66.2228 409.73 65.6603 cv
410.292 65.0977 410.608 64.3345 410.608 63.5389 cv
410.608 62.7433 410.292 61.9802 409.73 61.4176 cv
409.167 60.855 408.404 60.5389 407.608 60.5389 cv
406.813 60.5389 406.049 60.855 405.487 61.4176 cv
404.924 61.9802 404.608 62.7433 404.608 63.5389 cv
404.608 64.3345 404.924 65.0977 405.487 65.6603 cv
406.049 66.2228 406.813 66.5389 407.608 66.5389 cv
cp
@
grestore
gsave
404.108 198.888 mo
411.108 198.888 li
411.108 191.888 li
404.108 191.888 li
cp
clp
0 lc
407.608 198.388 mo
408.404 198.388 409.167 198.072 409.73 197.51 cv
410.292 196.947 410.608 196.184 410.608 195.388 cv
410.608 194.593 410.292 193.829 409.73 193.267 cv
409.167 192.704 408.404 192.388 407.608 192.388 cv
406.813 192.388 406.049 192.704 405.487 193.267 cv
404.924 193.829 404.608 194.593 404.608 195.388 cv
404.608 196.184 404.924 196.947 405.487 197.51 cv
406.049 198.072 406.813 198.388 407.608 198.388 cv
cp
@
grestore
gsave
404.108 67.0389 mo
411.108 67.0389 li
411.108 60.0389 li
404.108 60.0389 li
cp
clp
0 lc
407.608 66.5389 mo
408.404 66.5389 409.167 66.2228 409.73 65.6603 cv
410.292 65.0977 410.608 64.3345 410.608 63.5389 cv
410.608 62.7433 410.292 61.9802 409.73 61.4176 cv
409.167 60.855 408.404 60.5389 407.608 60.5389 cv
406.813 60.5389 406.049 60.855 405.487 61.4176 cv
404.924 61.9802 404.608 62.7433 404.608 63.5389 cv
404.608 64.3345 404.924 65.0977 405.487 65.6603 cv
406.049 66.2228 406.813 66.5389 407.608 66.5389 cv
cp
@
grestore
gsave
404.108 198.888 mo
411.108 198.888 li
411.108 191.888 li
404.108 191.888 li
cp
clp
0 lc
407.608 198.388 mo
408.404 198.388 409.167 198.072 409.73 197.51 cv
410.292 196.947 410.608 196.184 410.608 195.388 cv
410.608 194.593 410.292 193.829 409.73 193.267 cv
409.167 192.704 408.404 192.388 407.608 192.388 cv
406.813 192.388 406.049 192.704 405.487 193.267 cv
404.924 193.829 404.608 194.593 404.608 195.388 cv
404.608 196.184 404.924 196.947 405.487 197.51 cv
406.049 198.072 406.813 198.388 407.608 198.388 cv
cp
@
grestore
gsave
404.108 198.888 mo
411.108 198.888 li
411.108 191.888 li
404.108 191.888 li
cp
clp
0 lc
407.608 198.388 mo
408.404 198.388 409.167 198.072 409.73 197.51 cv
410.292 196.947 410.608 196.184 410.608 195.388 cv
410.608 194.593 410.292 193.829 409.73 193.267 cv
409.167 192.704 408.404 192.388 407.608 192.388 cv
406.813 192.388 406.049 192.704 405.487 193.267 cv
404.924 193.829 404.608 194.593 404.608 195.388 cv
404.608 196.184 404.924 196.947 405.487 197.51 cv
406.049 198.072 406.813 198.388 407.608 198.388 cv
cp
@
grestore
gsave
404.108 144.293 mo
411.108 144.293 li
411.108 137.293 li
404.108 137.293 li
cp
clp
0 lc
407.608 143.793 mo
408.404 143.793 409.167 143.477 409.73 142.914 cv
410.292 142.351 410.608 141.588 410.608 140.793 cv
410.608 139.997 410.292 139.234 409.73 138.671 cv
409.167 138.109 408.404 137.793 407.608 137.793 cv
406.813 137.793 406.049 138.109 405.487 138.671 cv
404.924 139.234 404.608 139.997 404.608 140.793 cv
404.608 141.588 404.924 142.351 405.487 142.914 cv
406.049 143.477 406.813 143.793 407.608 143.793 cv
cp
@
grestore
gsave
404.108 67.0389 mo
411.108 67.0389 li
411.108 60.0389 li
404.108 60.0389 li
cp
clp
0 lc
407.608 66.5389 mo
408.404 66.5389 409.167 66.2228 409.73 65.6603 cv
410.292 65.0977 410.608 64.3345 410.608 63.5389 cv
410.608 62.7433 410.292 61.9802 409.73 61.4176 cv
409.167 60.855 408.404 60.5389 407.608 60.5389 cv
406.813 60.5389 406.049 60.855 405.487 61.4176 cv
404.924 61.9802 404.608 62.7433 404.608 63.5389 cv
404.608 64.3345 404.924 65.0977 405.487 65.6603 cv
406.049 66.2228 406.813 66.5389 407.608 66.5389 cv
cp
@
grestore
gsave
404.108 144.293 mo
411.108 144.293 li
411.108 137.293 li
404.108 137.293 li
cp
clp
0 lc
407.608 143.793 mo
408.404 143.793 409.167 143.477 409.73 142.914 cv
410.292 142.351 410.608 141.588 410.608 140.793 cv
410.608 139.997 410.292 139.234 409.73 138.671 cv
409.167 138.109 408.404 137.793 407.608 137.793 cv
406.813 137.793 406.049 138.109 405.487 138.671 cv
404.924 139.234 404.608 139.997 404.608 140.793 cv
404.608 141.588 404.924 142.351 405.487 142.914 cv
406.049 143.477 406.813 143.793 407.608 143.793 cv
cp
@
grestore
gsave
404.108 198.888 mo
411.108 198.888 li
411.108 191.888 li
404.108 191.888 li
cp
clp
0 lc
407.608 198.388 mo
408.404 198.388 409.167 198.072 409.73 197.51 cv
410.292 196.947 410.608 196.184 410.608 195.388 cv
410.608 194.593 410.292 193.829 409.73 193.267 cv
409.167 192.704 408.404 192.388 407.608 192.388 cv
406.813 192.388 406.049 192.704 405.487 193.267 cv
404.924 193.829 404.608 194.593 404.608 195.388 cv
404.608 196.184 404.924 196.947 405.487 197.51 cv
406.049 198.072 406.813 198.388 407.608 198.388 cv
cp
@
grestore
gsave
404.108 67.0389 mo
411.108 67.0389 li
411.108 60.0389 li
404.108 60.0389 li
cp
clp
0 lc
407.608 66.5389 mo
408.404 66.5389 409.167 66.2228 409.73 65.6603 cv
410.292 65.0977 410.608 64.3345 410.608 63.5389 cv
410.608 62.7433 410.292 61.9802 409.73 61.4176 cv
409.167 60.855 408.404 60.5389 407.608 60.5389 cv
406.813 60.5389 406.049 60.855 405.487 61.4176 cv
404.924 61.9802 404.608 62.7433 404.608 63.5389 cv
404.608 64.3345 404.924 65.0977 405.487 65.6603 cv
406.049 66.2228 406.813 66.5389 407.608 66.5389 cv
cp
@
grestore
gsave
404.108 198.888 mo
411.108 198.888 li
411.108 191.888 li
404.108 191.888 li
cp
clp
0 lc
407.608 198.388 mo
408.404 198.388 409.167 198.072 409.73 197.51 cv
410.292 196.947 410.608 196.184 410.608 195.388 cv
410.608 194.593 410.292 193.829 409.73 193.267 cv
409.167 192.704 408.404 192.388 407.608 192.388 cv
406.813 192.388 406.049 192.704 405.487 193.267 cv
404.924 193.829 404.608 194.593 404.608 195.388 cv
404.608 196.184 404.924 196.947 405.487 197.51 cv
406.049 198.072 406.813 198.388 407.608 198.388 cv
cp
@
grestore
gsave
404.108 198.888 mo
411.108 198.888 li
411.108 191.888 li
404.108 191.888 li
cp
clp
0 lc
407.608 198.388 mo
408.404 198.388 409.167 198.072 409.73 197.51 cv
410.292 196.947 410.608 196.184 410.608 195.388 cv
410.608 194.593 410.292 193.829 409.73 193.267 cv
409.167 192.704 408.404 192.388 407.608 192.388 cv
406.813 192.388 406.049 192.704 405.487 193.267 cv
404.924 193.829 404.608 194.593 404.608 195.388 cv
404.608 196.184 404.924 196.947 405.487 197.51 cv
406.049 198.072 406.813 198.388 407.608 198.388 cv
cp
@
grestore
gsave
404.108 198.888 mo
411.108 198.888 li
411.108 191.888 li
404.108 191.888 li
cp
clp
0 lc
407.608 198.388 mo
408.404 198.388 409.167 198.072 409.73 197.51 cv
410.292 196.947 410.608 196.184 410.608 195.388 cv
410.608 194.593 410.292 193.829 409.73 193.267 cv
409.167 192.704 408.404 192.388 407.608 192.388 cv
406.813 192.388 406.049 192.704 405.487 193.267 cv
404.924 193.829 404.608 194.593 404.608 195.388 cv
404.608 196.184 404.924 196.947 405.487 197.51 cv
406.049 198.072 406.813 198.388 407.608 198.388 cv
cp
@
grestore
gsave
404.108 198.888 mo
411.108 198.888 li
411.108 191.888 li
404.108 191.888 li
cp
clp
0 lc
407.608 198.388 mo
408.404 198.388 409.167 198.072 409.73 197.51 cv
410.292 196.947 410.608 196.184 410.608 195.388 cv
410.608 194.593 410.292 193.829 409.73 193.267 cv
409.167 192.704 408.404 192.388 407.608 192.388 cv
406.813 192.388 406.049 192.704 405.487 193.267 cv
404.924 193.829 404.608 194.593 404.608 195.388 cv
404.608 196.184 404.924 196.947 405.487 197.51 cv
406.049 198.072 406.813 198.388 407.608 198.388 cv
cp
@
grestore
gsave
404.108 198.888 mo
411.108 198.888 li
411.108 191.888 li
404.108 191.888 li
cp
clp
0 lc
407.608 198.388 mo
408.404 198.388 409.167 198.072 409.73 197.51 cv
410.292 196.947 410.608 196.184 410.608 195.388 cv
410.608 194.593 410.292 193.829 409.73 193.267 cv
409.167 192.704 408.404 192.388 407.608 192.388 cv
406.813 192.388 406.049 192.704 405.487 193.267 cv
404.924 193.829 404.608 194.593 404.608 195.388 cv
404.608 196.184 404.924 196.947 405.487 197.51 cv
406.049 198.072 406.813 198.388 407.608 198.388 cv
cp
@
grestore
gsave
404.108 198.888 mo
411.108 198.888 li
411.108 191.888 li
404.108 191.888 li
cp
clp
0 lc
407.608 198.388 mo
408.404 198.388 409.167 198.072 409.73 197.51 cv
410.292 196.947 410.608 196.184 410.608 195.388 cv
410.608 194.593 410.292 193.829 409.73 193.267 cv
409.167 192.704 408.404 192.388 407.608 192.388 cv
406.813 192.388 406.049 192.704 405.487 193.267 cv
404.924 193.829 404.608 194.593 404.608 195.388 cv
404.608 196.184 404.924 196.947 405.487 197.51 cv
406.049 198.072 406.813 198.388 407.608 198.388 cv
cp
@
grestore
gsave
404.108 198.888 mo
411.108 198.888 li
411.108 191.888 li
404.108 191.888 li
cp
clp
0 lc
407.608 198.388 mo
408.404 198.388 409.167 198.072 409.73 197.51 cv
410.292 196.947 410.608 196.184 410.608 195.388 cv
410.608 194.593 410.292 193.829 409.73 193.267 cv
409.167 192.704 408.404 192.388 407.608 192.388 cv
406.813 192.388 406.049 192.704 405.487 193.267 cv
404.924 193.829 404.608 194.593 404.608 195.388 cv
404.608 196.184 404.924 196.947 405.487 197.51 cv
406.049 198.072 406.813 198.388 407.608 198.388 cv
cp
@
grestore
431.418 126.467 mo
447.291 126.467 li
447.291 62.9251 li
431.418 62.9251 li
431.418 126.467 li
@
439.355 126.467 mo
439.355 149.545 li
@
439.355 62.9251 mo
439.355 62.9251 li
@
435.386 149.545 mo
443.323 149.545 li
@
435.386 62.9251 mo
443.323 62.9251 li
@
463.165 327.952 mo
479.038 327.952 li
479.038 214.476 li
463.165 214.476 li
463.165 327.952 li
@
471.101 327.952 mo
471.101 327.952 li
@
471.101 214.476 mo
471.101 82.9626 li
@
467.133 327.952 mo
475.07 327.952 li
@
467.133 82.9626 mo
475.07 82.9626 li
@
494.911 281.548 mo
510.784 281.548 li
510.784 89.4663 li
494.911 89.4663 li
494.911 281.548 li
@
502.848 281.548 mo
502.848 308.103 li
@
502.848 89.4663 mo
502.848 55.489 li
@
498.879 308.103 mo
506.816 308.103 li
@
498.879 55.489 mo
506.816 55.489 li
@
526.658 271.194 mo
542.531 271.194 li
542.531 102.498 li
526.658 102.498 li
526.658 271.194 li
@
534.594 271.194 mo
534.594 317.411 li
@
534.594 102.498 mo
534.594 79.0403 li
@
530.626 317.411 mo
538.563 317.411 li
@
530.626 79.0403 mo
538.563 79.0403 li
@
558.404 144.999 mo
574.277 144.999 li
574.277 88.0016 li
558.404 88.0016 li
558.404 144.999 li
@
566.341 144.999 mo
566.341 144.999 li
@
566.341 88.0016 mo
566.341 83.5428 li
@
562.372 144.999 mo
570.309 144.999 li
@
562.372 83.5428 mo
570.309 83.5428 li
@
gsave
562.841 238.005 mo
569.841 238.005 li
569.841 231.005 li
562.841 231.005 li
cp
clp
0 lc
566.341 237.505 mo
567.136 237.505 567.899 237.189 568.462 236.626 cv
569.025 236.064 569.341 235.301 569.341 234.505 cv
569.341 233.709 569.025 232.946 568.462 232.384 cv
567.899 231.821 567.136 231.505 566.341 231.505 cv
565.545 231.505 564.782 231.821 564.219 232.384 cv
563.657 232.946 563.341 233.709 563.341 234.505 cv
563.341 235.301 563.657 236.064 564.219 236.626 cv
564.782 237.189 565.545 237.505 566.341 237.505 cv
cp
@
grestore
gsave
562.841 238.005 mo
569.841 238.005 li
569.841 231.005 li
562.841 231.005 li
cp
clp
0 lc
566.341 237.505 mo
567.136 237.505 567.899 237.189 568.462 236.626 cv
569.025 236.064 569.341 235.301 569.341 234.505 cv
569.341 233.709 569.025 232.946 568.462 232.384 cv
567.899 231.821 567.136 231.505 566.341 231.505 cv
565.545 231.505 564.782 231.821 564.219 232.384 cv
563.657 232.946 563.341 233.709 563.341 234.505 cv
563.341 235.301 563.657 236.064 564.219 236.626 cv
564.782 237.189 565.545 237.505 566.341 237.505 cv
cp
@
grestore
gsave
562.841 238.005 mo
569.841 238.005 li
569.841 231.005 li
562.841 231.005 li
cp
clp
0 lc
566.341 237.505 mo
567.136 237.505 567.899 237.189 568.462 236.626 cv
569.025 236.064 569.341 235.301 569.341 234.505 cv
569.341 233.709 569.025 232.946 568.462 232.384 cv
567.899 231.821 567.136 231.505 566.341 231.505 cv
565.545 231.505 564.782 231.821 564.219 232.384 cv
563.657 232.946 563.341 233.709 563.341 234.505 cv
563.341 235.301 563.657 236.064 564.219 236.626 cv
564.782 237.189 565.545 237.505 566.341 237.505 cv
cp
@
grestore
gsave
562.841 238.005 mo
569.841 238.005 li
569.841 231.005 li
562.841 231.005 li
cp
clp
0 lc
566.341 237.505 mo
567.136 237.505 567.899 237.189 568.462 236.626 cv
569.025 236.064 569.341 235.301 569.341 234.505 cv
569.341 233.709 569.025 232.946 568.462 232.384 cv
567.899 231.821 567.136 231.505 566.341 231.505 cv
565.545 231.505 564.782 231.821 564.219 232.384 cv
563.657 232.946 563.341 233.709 563.341 234.505 cv
563.341 235.301 563.657 236.064 564.219 236.626 cv
564.782 237.189 565.545 237.505 566.341 237.505 cv
cp
@
grestore
gsave
562.841 238.005 mo
569.841 238.005 li
569.841 231.005 li
562.841 231.005 li
cp
clp
0 lc
566.341 237.505 mo
567.136 237.505 567.899 237.189 568.462 236.626 cv
569.025 236.064 569.341 235.301 569.341 234.505 cv
569.341 233.709 569.025 232.946 568.462 232.384 cv
567.899 231.821 567.136 231.505 566.341 231.505 cv
565.545 231.505 564.782 231.821 564.219 232.384 cv
563.657 232.946 563.341 233.709 563.341 234.505 cv
563.341 235.301 563.657 236.064 564.219 236.626 cv
564.782 237.189 565.545 237.505 566.341 237.505 cv
cp
@
grestore
gsave
562.841 238.005 mo
569.841 238.005 li
569.841 231.005 li
562.841 231.005 li
cp
clp
0 lc
566.341 237.505 mo
567.136 237.505 567.899 237.189 568.462 236.626 cv
569.025 236.064 569.341 235.301 569.341 234.505 cv
569.341 233.709 569.025 232.946 568.462 232.384 cv
567.899 231.821 567.136 231.505 566.341 231.505 cv
565.545 231.505 564.782 231.821 564.219 232.384 cv
563.657 232.946 563.341 233.709 563.341 234.505 cv
563.341 235.301 563.657 236.064 564.219 236.626 cv
564.782 237.189 565.545 237.505 566.341 237.505 cv
cp
@
grestore
gsave
562.841 238.005 mo
569.841 238.005 li
569.841 231.005 li
562.841 231.005 li
cp
clp
0 lc
566.341 237.505 mo
567.136 237.505 567.899 237.189 568.462 236.626 cv
569.025 236.064 569.341 235.301 569.341 234.505 cv
569.341 233.709 569.025 232.946 568.462 232.384 cv
567.899 231.821 567.136 231.505 566.341 231.505 cv
565.545 231.505 564.782 231.821 564.219 232.384 cv
563.657 232.946 563.341 233.709 563.341 234.505 cv
563.341 235.301 563.657 236.064 564.219 236.626 cv
564.782 237.189 565.545 237.505 566.341 237.505 cv
cp
@
grestore
gsave
562.841 238.005 mo
569.841 238.005 li
569.841 231.005 li
562.841 231.005 li
cp
clp
0 lc
566.341 237.505 mo
567.136 237.505 567.899 237.189 568.462 236.626 cv
569.025 236.064 569.341 235.301 569.341 234.505 cv
569.341 233.709 569.025 232.946 568.462 232.384 cv
567.899 231.821 567.136 231.505 566.341 231.505 cv
565.545 231.505 564.782 231.821 564.219 232.384 cv
563.657 232.946 563.341 233.709 563.341 234.505 cv
563.341 235.301 563.657 236.064 564.219 236.626 cv
564.782 237.189 565.545 237.505 566.341 237.505 cv
cp
@
grestore
gsave
562.841 238.005 mo
569.841 238.005 li
569.841 231.005 li
562.841 231.005 li
cp
clp
0 lc
566.341 237.505 mo
567.136 237.505 567.899 237.189 568.462 236.626 cv
569.025 236.064 569.341 235.301 569.341 234.505 cv
569.341 233.709 569.025 232.946 568.462 232.384 cv
567.899 231.821 567.136 231.505 566.341 231.505 cv
565.545 231.505 564.782 231.821 564.219 232.384 cv
563.657 232.946 563.341 233.709 563.341 234.505 cv
563.341 235.301 563.657 236.064 564.219 236.626 cv
564.782 237.189 565.545 237.505 566.341 237.505 cv
cp
@
grestore
gsave
562.841 276.116 mo
569.841 276.116 li
569.841 269.116 li
562.841 269.116 li
cp
clp
0 lc
566.341 275.616 mo
567.136 275.616 567.899 275.299 568.462 274.737 cv
569.025 274.174 569.341 273.411 569.341 272.616 cv
569.341 271.82 569.025 271.057 568.462 270.494 cv
567.899 269.932 567.136 269.616 566.341 269.616 cv
565.545 269.616 564.782 269.932 564.219 270.494 cv
563.657 271.057 563.341 271.82 563.341 272.616 cv
563.341 273.411 563.657 274.174 564.219 274.737 cv
564.782 275.299 565.545 275.616 566.341 275.616 cv
cp
@
grestore
gsave
562.841 238.005 mo
569.841 238.005 li
569.841 231.005 li
562.841 231.005 li
cp
clp
0 lc
566.341 237.505 mo
567.136 237.505 567.899 237.189 568.462 236.626 cv
569.025 236.064 569.341 235.301 569.341 234.505 cv
569.341 233.709 569.025 232.946 568.462 232.384 cv
567.899 231.821 567.136 231.505 566.341 231.505 cv
565.545 231.505 564.782 231.821 564.219 232.384 cv
563.657 232.946 563.341 233.709 563.341 234.505 cv
563.341 235.301 563.657 236.064 564.219 236.626 cv
564.782 237.189 565.545 237.505 566.341 237.505 cv
cp
@
grestore
gsave
562.841 276.116 mo
569.841 276.116 li
569.841 269.116 li
562.841 269.116 li
cp
clp
0 lc
566.341 275.616 mo
567.136 275.616 567.899 275.299 568.462 274.737 cv
569.025 274.174 569.341 273.411 569.341 272.616 cv
569.341 271.82 569.025 271.057 568.462 270.494 cv
567.899 269.932 567.136 269.616 566.341 269.616 cv
565.545 269.616 564.782 269.932 564.219 270.494 cv
563.657 271.057 563.341 271.82 563.341 272.616 cv
563.341 273.411 563.657 274.174 564.219 274.737 cv
564.782 275.299 565.545 275.616 566.341 275.616 cv
cp
@
grestore
gsave
562.841 276.116 mo
569.841 276.116 li
569.841 269.116 li
562.841 269.116 li
cp
clp
0 lc
566.341 275.616 mo
567.136 275.616 567.899 275.299 568.462 274.737 cv
569.025 274.174 569.341 273.411 569.341 272.616 cv
569.341 271.82 569.025 271.057 568.462 270.494 cv
567.899 269.932 567.136 269.616 566.341 269.616 cv
565.545 269.616 564.782 269.932 564.219 270.494 cv
563.657 271.057 563.341 271.82 563.341 272.616 cv
563.341 273.411 563.657 274.174 564.219 274.737 cv
564.782 275.299 565.545 275.616 566.341 275.616 cv
cp
@
grestore
gsave
562.841 238.005 mo
569.841 238.005 li
569.841 231.005 li
562.841 231.005 li
cp
clp
0 lc
566.341 237.505 mo
567.136 237.505 567.899 237.189 568.462 236.626 cv
569.025 236.064 569.341 235.301 569.341 234.505 cv
569.341 233.709 569.025 232.946 568.462 232.384 cv
567.899 231.821 567.136 231.505 566.341 231.505 cv
565.545 231.505 564.782 231.821 564.219 232.384 cv
563.657 232.946 563.341 233.709 563.341 234.505 cv
563.341 235.301 563.657 236.064 564.219 236.626 cv
564.782 237.189 565.545 237.505 566.341 237.505 cv
cp
@
grestore
gsave
562.841 276.116 mo
569.841 276.116 li
569.841 269.116 li
562.841 269.116 li
cp
clp
0 lc
566.341 275.616 mo
567.136 275.616 567.899 275.299 568.462 274.737 cv
569.025 274.174 569.341 273.411 569.341 272.616 cv
569.341 271.82 569.025 271.057 568.462 270.494 cv
567.899 269.932 567.136 269.616 566.341 269.616 cv
565.545 269.616 564.782 269.932 564.219 270.494 cv
563.657 271.057 563.341 271.82 563.341 272.616 cv
563.341 273.411 563.657 274.174 564.219 274.737 cv
564.782 275.299 565.545 275.616 566.341 275.616 cv
cp
@
grestore
gsave
562.841 238.005 mo
569.841 238.005 li
569.841 231.005 li
562.841 231.005 li
cp
clp
0 lc
566.341 237.505 mo
567.136 237.505 567.899 237.189 568.462 236.626 cv
569.025 236.064 569.341 235.301 569.341 234.505 cv
569.341 233.709 569.025 232.946 568.462 232.384 cv
567.899 231.821 567.136 231.505 566.341 231.505 cv
565.545 231.505 564.782 231.821 564.219 232.384 cv
563.657 232.946 563.341 233.709 563.341 234.505 cv
563.341 235.301 563.657 236.064 564.219 236.626 cv
564.782 237.189 565.545 237.505 566.341 237.505 cv
cp
@
grestore
gsave
562.841 276.116 mo
569.841 276.116 li
569.841 269.116 li
562.841 269.116 li
cp
clp
0 lc
566.341 275.616 mo
567.136 275.616 567.899 275.299 568.462 274.737 cv
569.025 274.174 569.341 273.411 569.341 272.616 cv
569.341 271.82 569.025 271.057 568.462 270.494 cv
567.899 269.932 567.136 269.616 566.341 269.616 cv
565.545 269.616 564.782 269.932 564.219 270.494 cv
563.657 271.057 563.341 271.82 563.341 272.616 cv
563.341 273.411 563.657 274.174 564.219 274.737 cv
564.782 275.299 565.545 275.616 566.341 275.616 cv
cp
@
grestore
gsave
562.841 276.116 mo
569.841 276.116 li
569.841 269.116 li
562.841 269.116 li
cp
clp
0 lc
566.341 275.616 mo
567.136 275.616 567.899 275.299 568.462 274.737 cv
569.025 274.174 569.341 273.411 569.341 272.616 cv
569.341 271.82 569.025 271.057 568.462 270.494 cv
567.899 269.932 567.136 269.616 566.341 269.616 cv
565.545 269.616 564.782 269.932 564.219 270.494 cv
563.657 271.057 563.341 271.82 563.341 272.616 cv
563.341 273.411 563.657 274.174 564.219 274.737 cv
564.782 275.299 565.545 275.616 566.341 275.616 cv
cp
@
grestore
gsave
562.841 238.005 mo
569.841 238.005 li
569.841 231.005 li
562.841 231.005 li
cp
clp
0 lc
566.341 237.505 mo
567.136 237.505 567.899 237.189 568.462 236.626 cv
569.025 236.064 569.341 235.301 569.341 234.505 cv
569.341 233.709 569.025 232.946 568.462 232.384 cv
567.899 231.821 567.136 231.505 566.341 231.505 cv
565.545 231.505 564.782 231.821 564.219 232.384 cv
563.657 232.946 563.341 233.709 563.341 234.505 cv
563.341 235.301 563.657 236.064 564.219 236.626 cv
564.782 237.189 565.545 237.505 566.341 237.505 cv
cp
@
grestore
gsave
562.841 276.116 mo
569.841 276.116 li
569.841 269.116 li
562.841 269.116 li
cp
clp
0 lc
566.341 275.616 mo
567.136 275.616 567.899 275.299 568.462 274.737 cv
569.025 274.174 569.341 273.411 569.341 272.616 cv
569.341 271.82 569.025 271.057 568.462 270.494 cv
567.899 269.932 567.136 269.616 566.341 269.616 cv
565.545 269.616 564.782 269.932 564.219 270.494 cv
563.657 271.057 563.341 271.82 563.341 272.616 cv
563.341 273.411 563.657 274.174 564.219 274.737 cv
564.782 275.299 565.545 275.616 566.341 275.616 cv
cp
@
grestore
gsave
562.841 276.116 mo
569.841 276.116 li
569.841 269.116 li
562.841 269.116 li
cp
clp
0 lc
566.341 275.616 mo
567.136 275.616 567.899 275.299 568.462 274.737 cv
569.025 274.174 569.341 273.411 569.341 272.616 cv
569.341 271.82 569.025 271.057 568.462 270.494 cv
567.899 269.932 567.136 269.616 566.341 269.616 cv
565.545 269.616 564.782 269.932 564.219 270.494 cv
563.657 271.057 563.341 271.82 563.341 272.616 cv
563.341 273.411 563.657 274.174 564.219 274.737 cv
564.782 275.299 565.545 275.616 566.341 275.616 cv
cp
@
grestore
gsave
562.841 238.005 mo
569.841 238.005 li
569.841 231.005 li
562.841 231.005 li
cp
clp
0 lc
566.341 237.505 mo
567.136 237.505 567.899 237.189 568.462 236.626 cv
569.025 236.064 569.341 235.301 569.341 234.505 cv
569.341 233.709 569.025 232.946 568.462 232.384 cv
567.899 231.821 567.136 231.505 566.341 231.505 cv
565.545 231.505 564.782 231.821 564.219 232.384 cv
563.657 232.946 563.341 233.709 563.341 234.505 cv
563.341 235.301 563.657 236.064 564.219 236.626 cv
564.782 237.189 565.545 237.505 566.341 237.505 cv
cp
@
grestore
gsave
562.841 276.116 mo
569.841 276.116 li
569.841 269.116 li
562.841 269.116 li
cp
clp
0 lc
566.341 275.616 mo
567.136 275.616 567.899 275.299 568.462 274.737 cv
569.025 274.174 569.341 273.411 569.341 272.616 cv
569.341 271.82 569.025 271.057 568.462 270.494 cv
567.899 269.932 567.136 269.616 566.341 269.616 cv
565.545 269.616 564.782 269.932 564.219 270.494 cv
563.657 271.057 563.341 271.82 563.341 272.616 cv
563.341 273.411 563.657 274.174 564.219 274.737 cv
564.782 275.299 565.545 275.616 566.341 275.616 cv
cp
@
grestore
gsave
562.841 276.116 mo
569.841 276.116 li
569.841 269.116 li
562.841 269.116 li
cp
clp
0 lc
566.341 275.616 mo
567.136 275.616 567.899 275.299 568.462 274.737 cv
569.025 274.174 569.341 273.411 569.341 272.616 cv
569.341 271.82 569.025 271.057 568.462 270.494 cv
567.899 269.932 567.136 269.616 566.341 269.616 cv
565.545 269.616 564.782 269.932 564.219 270.494 cv
563.657 271.057 563.341 271.82 563.341 272.616 cv
563.341 273.411 563.657 274.174 564.219 274.737 cv
564.782 275.299 565.545 275.616 566.341 275.616 cv
cp
@
grestore
gsave
562.841 276.116 mo
569.841 276.116 li
569.841 269.116 li
562.841 269.116 li
cp
clp
0 lc
566.341 275.616 mo
567.136 275.616 567.899 275.299 568.462 274.737 cv
569.025 274.174 569.341 273.411 569.341 272.616 cv
569.341 271.82 569.025 271.057 568.462 270.494 cv
567.899 269.932 567.136 269.616 566.341 269.616 cv
565.545 269.616 564.782 269.932 564.219 270.494 cv
563.657 271.057 563.341 271.82 563.341 272.616 cv
563.341 273.411 563.657 274.174 564.219 274.737 cv
564.782 275.299 565.545 275.616 566.341 275.616 cv
cp
@
grestore
gsave
562.841 276.116 mo
569.841 276.116 li
569.841 269.116 li
562.841 269.116 li
cp
clp
0 lc
566.341 275.616 mo
567.136 275.616 567.899 275.299 568.462 274.737 cv
569.025 274.174 569.341 273.411 569.341 272.616 cv
569.341 271.82 569.025 271.057 568.462 270.494 cv
567.899 269.932 567.136 269.616 566.341 269.616 cv
565.545 269.616 564.782 269.932 564.219 270.494 cv
563.657 271.057 563.341 271.82 563.341 272.616 cv
563.341 273.411 563.657 274.174 564.219 274.737 cv
564.782 275.299 565.545 275.616 566.341 275.616 cv
cp
@
grestore
gsave
562.841 238.005 mo
569.841 238.005 li
569.841 231.005 li
562.841 231.005 li
cp
clp
0 lc
566.341 237.505 mo
567.136 237.505 567.899 237.189 568.462 236.626 cv
569.025 236.064 569.341 235.301 569.341 234.505 cv
569.341 233.709 569.025 232.946 568.462 232.384 cv
567.899 231.821 567.136 231.505 566.341 231.505 cv
565.545 231.505 564.782 231.821 564.219 232.384 cv
563.657 232.946 563.341 233.709 563.341 234.505 cv
563.341 235.301 563.657 236.064 564.219 236.626 cv
564.782 237.189 565.545 237.505 566.341 237.505 cv
cp
@
grestore
gsave
562.841 276.116 mo
569.841 276.116 li
569.841 269.116 li
562.841 269.116 li
cp
clp
0 lc
566.341 275.616 mo
567.136 275.616 567.899 275.299 568.462 274.737 cv
569.025 274.174 569.341 273.411 569.341 272.616 cv
569.341 271.82 569.025 271.057 568.462 270.494 cv
567.899 269.932 567.136 269.616 566.341 269.616 cv
565.545 269.616 564.782 269.932 564.219 270.494 cv
563.657 271.057 563.341 271.82 563.341 272.616 cv
563.341 273.411 563.657 274.174 564.219 274.737 cv
564.782 275.299 565.545 275.616 566.341 275.616 cv
cp
@
grestore
gsave
562.841 238.005 mo
569.841 238.005 li
569.841 231.005 li
562.841 231.005 li
cp
clp
0 lc
566.341 237.505 mo
567.136 237.505 567.899 237.189 568.462 236.626 cv
569.025 236.064 569.341 235.301 569.341 234.505 cv
569.341 233.709 569.025 232.946 568.462 232.384 cv
567.899 231.821 567.136 231.505 566.341 231.505 cv
565.545 231.505 564.782 231.821 564.219 232.384 cv
563.657 232.946 563.341 233.709 563.341 234.505 cv
563.341 235.301 563.657 236.064 564.219 236.626 cv
564.782 237.189 565.545 237.505 566.341 237.505 cv
cp
@
grestore
gsave
562.841 276.116 mo
569.841 276.116 li
569.841 269.116 li
562.841 269.116 li
cp
clp
0 lc
566.341 275.616 mo
567.136 275.616 567.899 275.299 568.462 274.737 cv
569.025 274.174 569.341 273.411 569.341 272.616 cv
569.341 271.82 569.025 271.057 568.462 270.494 cv
567.899 269.932 567.136 269.616 566.341 269.616 cv
565.545 269.616 564.782 269.932 564.219 270.494 cv
563.657 271.057 563.341 271.82 563.341 272.616 cv
563.341 273.411 563.657 274.174 564.219 274.737 cv
564.782 275.299 565.545 275.616 566.341 275.616 cv
cp
@
grestore
gsave
562.841 238.005 mo
569.841 238.005 li
569.841 231.005 li
562.841 231.005 li
cp
clp
0 lc
566.341 237.505 mo
567.136 237.505 567.899 237.189 568.462 236.626 cv
569.025 236.064 569.341 235.301 569.341 234.505 cv
569.341 233.709 569.025 232.946 568.462 232.384 cv
567.899 231.821 567.136 231.505 566.341 231.505 cv
565.545 231.505 564.782 231.821 564.219 232.384 cv
563.657 232.946 563.341 233.709 563.341 234.505 cv
563.341 235.301 563.657 236.064 564.219 236.626 cv
564.782 237.189 565.545 237.505 566.341 237.505 cv
cp
@
grestore
gsave
562.841 276.116 mo
569.841 276.116 li
569.841 269.116 li
562.841 269.116 li
cp
clp
0 lc
566.341 275.616 mo
567.136 275.616 567.899 275.299 568.462 274.737 cv
569.025 274.174 569.341 273.411 569.341 272.616 cv
569.341 271.82 569.025 271.057 568.462 270.494 cv
567.899 269.932 567.136 269.616 566.341 269.616 cv
565.545 269.616 564.782 269.932 564.219 270.494 cv
563.657 271.057 563.341 271.82 563.341 272.616 cv
563.341 273.411 563.657 274.174 564.219 274.737 cv
564.782 275.299 565.545 275.616 566.341 275.616 cv
cp
@
grestore
gsave
562.841 238.005 mo
569.841 238.005 li
569.841 231.005 li
562.841 231.005 li
cp
clp
0 lc
566.341 237.505 mo
567.136 237.505 567.899 237.189 568.462 236.626 cv
569.025 236.064 569.341 235.301 569.341 234.505 cv
569.341 233.709 569.025 232.946 568.462 232.384 cv
567.899 231.821 567.136 231.505 566.341 231.505 cv
565.545 231.505 564.782 231.821 564.219 232.384 cv
563.657 232.946 563.341 233.709 563.341 234.505 cv
563.341 235.301 563.657 236.064 564.219 236.626 cv
564.782 237.189 565.545 237.505 566.341 237.505 cv
cp
@
grestore
gsave
562.841 238.005 mo
569.841 238.005 li
569.841 231.005 li
562.841 231.005 li
cp
clp
0 lc
566.341 237.505 mo
567.136 237.505 567.899 237.189 568.462 236.626 cv
569.025 236.064 569.341 235.301 569.341 234.505 cv
569.341 233.709 569.025 232.946 568.462 232.384 cv
567.899 231.821 567.136 231.505 566.341 231.505 cv
565.545 231.505 564.782 231.821 564.219 232.384 cv
563.657 232.946 563.341 233.709 563.341 234.505 cv
563.341 235.301 563.657 236.064 564.219 236.626 cv
564.782 237.189 565.545 237.505 566.341 237.505 cv
cp
@
grestore
590.151 137.427 mo
606.024 137.427 li
606.024 115.178 li
590.151 115.178 li
590.151 137.427 li
@
598.087 137.427 mo
598.087 137.427 li
@
598.087 115.178 mo
598.087 115.178 li
@
594.119 137.427 mo
602.056 137.427 li
@
594.119 115.178 mo
602.056 115.178 li
@
gsave
594.587 356.391 mo
601.587 356.391 li
601.587 349.391 li
594.587 349.391 li
cp
clp
0 lc
598.087 355.891 mo
598.883 355.891 599.646 355.575 600.209 355.012 cv
600.771 354.45 601.087 353.686 601.087 352.891 cv
601.087 352.095 600.771 351.332 600.209 350.77 cv
599.646 350.207 598.883 349.891 598.087 349.891 cv
597.292 349.891 596.529 350.207 595.966 350.77 cv
595.403 351.332 595.087 352.095 595.087 352.891 cv
595.087 353.686 595.403 354.45 595.966 355.012 cv
596.529 355.575 597.292 355.891 598.087 355.891 cv
cp
@
grestore
gsave
594.587 196.962 mo
601.587 196.962 li
601.587 189.962 li
594.587 189.962 li
cp
clp
0 lc
598.087 196.462 mo
598.883 196.462 599.646 196.146 600.209 195.583 cv
600.771 195.021 601.087 194.258 601.087 193.462 cv
601.087 192.666 600.771 191.903 600.209 191.341 cv
599.646 190.778 598.883 190.462 598.087 190.462 cv
597.292 190.462 596.529 190.778 595.966 191.341 cv
595.403 191.903 595.087 192.666 595.087 193.462 cv
595.087 194.258 595.403 195.021 595.966 195.583 cv
596.529 196.146 597.292 196.462 598.087 196.462 cv
cp
@
grestore
gsave
594.587 196.962 mo
601.587 196.962 li
601.587 189.962 li
594.587 189.962 li
cp
clp
0 lc
598.087 196.462 mo
598.883 196.462 599.646 196.146 600.209 195.583 cv
600.771 195.021 601.087 194.258 601.087 193.462 cv
601.087 192.666 600.771 191.903 600.209 191.341 cv
599.646 190.778 598.883 190.462 598.087 190.462 cv
597.292 190.462 596.529 190.778 595.966 191.341 cv
595.403 191.903 595.087 192.666 595.087 193.462 cv
595.087 194.258 595.403 195.021 595.966 195.583 cv
596.529 196.146 597.292 196.462 598.087 196.462 cv
cp
@
grestore
gsave
594.587 196.962 mo
601.587 196.962 li
601.587 189.962 li
594.587 189.962 li
cp
clp
0 lc
598.087 196.462 mo
598.883 196.462 599.646 196.146 600.209 195.583 cv
600.771 195.021 601.087 194.258 601.087 193.462 cv
601.087 192.666 600.771 191.903 600.209 191.341 cv
599.646 190.778 598.883 190.462 598.087 190.462 cv
597.292 190.462 596.529 190.778 595.966 191.341 cv
595.403 191.903 595.087 192.666 595.087 193.462 cv
595.087 194.258 595.403 195.021 595.966 195.583 cv
596.529 196.146 597.292 196.462 598.087 196.462 cv
cp
@
grestore
gsave
594.587 196.962 mo
601.587 196.962 li
601.587 189.962 li
594.587 189.962 li
cp
clp
0 lc
598.087 196.462 mo
598.883 196.462 599.646 196.146 600.209 195.583 cv
600.771 195.021 601.087 194.258 601.087 193.462 cv
601.087 192.666 600.771 191.903 600.209 191.341 cv
599.646 190.778 598.883 190.462 598.087 190.462 cv
597.292 190.462 596.529 190.778 595.966 191.341 cv
595.403 191.903 595.087 192.666 595.087 193.462 cv
595.087 194.258 595.403 195.021 595.966 195.583 cv
596.529 196.146 597.292 196.462 598.087 196.462 cv
cp
@
grestore
gsave
594.587 196.962 mo
601.587 196.962 li
601.587 189.962 li
594.587 189.962 li
cp
clp
0 lc
598.087 196.462 mo
598.883 196.462 599.646 196.146 600.209 195.583 cv
600.771 195.021 601.087 194.258 601.087 193.462 cv
601.087 192.666 600.771 191.903 600.209 191.341 cv
599.646 190.778 598.883 190.462 598.087 190.462 cv
597.292 190.462 596.529 190.778 595.966 191.341 cv
595.403 191.903 595.087 192.666 595.087 193.462 cv
595.087 194.258 595.403 195.021 595.966 195.583 cv
596.529 196.146 597.292 196.462 598.087 196.462 cv
cp
@
grestore
gsave
594.587 356.391 mo
601.587 356.391 li
601.587 349.391 li
594.587 349.391 li
cp
clp
0 lc
598.087 355.891 mo
598.883 355.891 599.646 355.575 600.209 355.012 cv
600.771 354.45 601.087 353.686 601.087 352.891 cv
601.087 352.095 600.771 351.332 600.209 350.77 cv
599.646 350.207 598.883 349.891 598.087 349.891 cv
597.292 349.891 596.529 350.207 595.966 350.77 cv
595.403 351.332 595.087 352.095 595.087 352.891 cv
595.087 353.686 595.403 354.45 595.966 355.012 cv
596.529 355.575 597.292 355.891 598.087 355.891 cv
cp
@
grestore
gsave
594.587 356.391 mo
601.587 356.391 li
601.587 349.391 li
594.587 349.391 li
cp
clp
0 lc
598.087 355.891 mo
598.883 355.891 599.646 355.575 600.209 355.012 cv
600.771 354.45 601.087 353.686 601.087 352.891 cv
601.087 352.095 600.771 351.332 600.209 350.77 cv
599.646 350.207 598.883 349.891 598.087 349.891 cv
597.292 349.891 596.529 350.207 595.966 350.77 cv
595.403 351.332 595.087 352.095 595.087 352.891 cv
595.087 353.686 595.403 354.45 595.966 355.012 cv
596.529 355.575 597.292 355.891 598.087 355.891 cv
cp
@
grestore
gsave
594.587 356.391 mo
601.587 356.391 li
601.587 349.391 li
594.587 349.391 li
cp
clp
0 lc
598.087 355.891 mo
598.883 355.891 599.646 355.575 600.209 355.012 cv
600.771 354.45 601.087 353.686 601.087 352.891 cv
601.087 352.095 600.771 351.332 600.209 350.77 cv
599.646 350.207 598.883 349.891 598.087 349.891 cv
597.292 349.891 596.529 350.207 595.966 350.77 cv
595.403 351.332 595.087 352.095 595.087 352.891 cv
595.087 353.686 595.403 354.45 595.966 355.012 cv
596.529 355.575 597.292 355.891 598.087 355.891 cv
cp
@
grestore
gsave
594.587 196.962 mo
601.587 196.962 li
601.587 189.962 li
594.587 189.962 li
cp
clp
0 lc
598.087 196.462 mo
598.883 196.462 599.646 196.146 600.209 195.583 cv
600.771 195.021 601.087 194.258 601.087 193.462 cv
601.087 192.666 600.771 191.903 600.209 191.341 cv
599.646 190.778 598.883 190.462 598.087 190.462 cv
597.292 190.462 596.529 190.778 595.966 191.341 cv
595.403 191.903 595.087 192.666 595.087 193.462 cv
595.087 194.258 595.403 195.021 595.966 195.583 cv
596.529 196.146 597.292 196.462 598.087 196.462 cv
cp
@
grestore
gsave
594.587 196.962 mo
601.587 196.962 li
601.587 189.962 li
594.587 189.962 li
cp
clp
0 lc
598.087 196.462 mo
598.883 196.462 599.646 196.146 600.209 195.583 cv
600.771 195.021 601.087 194.258 601.087 193.462 cv
601.087 192.666 600.771 191.903 600.209 191.341 cv
599.646 190.778 598.883 190.462 598.087 190.462 cv
597.292 190.462 596.529 190.778 595.966 191.341 cv
595.403 191.903 595.087 192.666 595.087 193.462 cv
595.087 194.258 595.403 195.021 595.966 195.583 cv
596.529 196.146 597.292 196.462 598.087 196.462 cv
cp
@
grestore
gsave
594.587 356.391 mo
601.587 356.391 li
601.587 349.391 li
594.587 349.391 li
cp
clp
0 lc
598.087 355.891 mo
598.883 355.891 599.646 355.575 600.209 355.012 cv
600.771 354.45 601.087 353.686 601.087 352.891 cv
601.087 352.095 600.771 351.332 600.209 350.77 cv
599.646 350.207 598.883 349.891 598.087 349.891 cv
597.292 349.891 596.529 350.207 595.966 350.77 cv
595.403 351.332 595.087 352.095 595.087 352.891 cv
595.087 353.686 595.403 354.45 595.966 355.012 cv
596.529 355.575 597.292 355.891 598.087 355.891 cv
cp
@
grestore
gsave
594.587 196.962 mo
601.587 196.962 li
601.587 189.962 li
594.587 189.962 li
cp
clp
0 lc
598.087 196.462 mo
598.883 196.462 599.646 196.146 600.209 195.583 cv
600.771 195.021 601.087 194.258 601.087 193.462 cv
601.087 192.666 600.771 191.903 600.209 191.341 cv
599.646 190.778 598.883 190.462 598.087 190.462 cv
597.292 190.462 596.529 190.778 595.966 191.341 cv
595.403 191.903 595.087 192.666 595.087 193.462 cv
595.087 194.258 595.403 195.021 595.966 195.583 cv
596.529 196.146 597.292 196.462 598.087 196.462 cv
cp
@
grestore
gsave
594.587 356.391 mo
601.587 356.391 li
601.587 349.391 li
594.587 349.391 li
cp
clp
0 lc
598.087 355.891 mo
598.883 355.891 599.646 355.575 600.209 355.012 cv
600.771 354.45 601.087 353.686 601.087 352.891 cv
601.087 352.095 600.771 351.332 600.209 350.77 cv
599.646 350.207 598.883 349.891 598.087 349.891 cv
597.292 349.891 596.529 350.207 595.966 350.77 cv
595.403 351.332 595.087 352.095 595.087 352.891 cv
595.087 353.686 595.403 354.45 595.966 355.012 cv
596.529 355.575 597.292 355.891 598.087 355.891 cv
cp
@
grestore
gsave
594.587 356.391 mo
601.587 356.391 li
601.587 349.391 li
594.587 349.391 li
cp
clp
0 lc
598.087 355.891 mo
598.883 355.891 599.646 355.575 600.209 355.012 cv
600.771 354.45 601.087 353.686 601.087 352.891 cv
601.087 352.095 600.771 351.332 600.209 350.77 cv
599.646 350.207 598.883 349.891 598.087 349.891 cv
597.292 349.891 596.529 350.207 595.966 350.77 cv
595.403 351.332 595.087 352.095 595.087 352.891 cv
595.087 353.686 595.403 354.45 595.966 355.012 cv
596.529 355.575 597.292 355.891 598.087 355.891 cv
cp
@
grestore
gsave
594.587 196.962 mo
601.587 196.962 li
601.587 189.962 li
594.587 189.962 li
cp
clp
0 lc
598.087 196.462 mo
598.883 196.462 599.646 196.146 600.209 195.583 cv
600.771 195.021 601.087 194.258 601.087 193.462 cv
601.087 192.666 600.771 191.903 600.209 191.341 cv
599.646 190.778 598.883 190.462 598.087 190.462 cv
597.292 190.462 596.529 190.778 595.966 191.341 cv
595.403 191.903 595.087 192.666 595.087 193.462 cv
595.087 194.258 595.403 195.021 595.966 195.583 cv
596.529 196.146 597.292 196.462 598.087 196.462 cv
cp
@
grestore
gsave
594.587 356.391 mo
601.587 356.391 li
601.587 349.391 li
594.587 349.391 li
cp
clp
0 lc
598.087 355.891 mo
598.883 355.891 599.646 355.575 600.209 355.012 cv
600.771 354.45 601.087 353.686 601.087 352.891 cv
601.087 352.095 600.771 351.332 600.209 350.77 cv
599.646 350.207 598.883 349.891 598.087 349.891 cv
597.292 349.891 596.529 350.207 595.966 350.77 cv
595.403 351.332 595.087 352.095 595.087 352.891 cv
595.087 353.686 595.403 354.45 595.966 355.012 cv
596.529 355.575 597.292 355.891 598.087 355.891 cv
cp
@
grestore
gsave
594.587 356.391 mo
601.587 356.391 li
601.587 349.391 li
594.587 349.391 li
cp
clp
0 lc
598.087 355.891 mo
598.883 355.891 599.646 355.575 600.209 355.012 cv
600.771 354.45 601.087 353.686 601.087 352.891 cv
601.087 352.095 600.771 351.332 600.209 350.77 cv
599.646 350.207 598.883 349.891 598.087 349.891 cv
597.292 349.891 596.529 350.207 595.966 350.77 cv
595.403 351.332 595.087 352.095 595.087 352.891 cv
595.087 353.686 595.403 354.45 595.966 355.012 cv
596.529 355.575 597.292 355.891 598.087 355.891 cv
cp
@
grestore
gsave
594.587 356.391 mo
601.587 356.391 li
601.587 349.391 li
594.587 349.391 li
cp
clp
0 lc
598.087 355.891 mo
598.883 355.891 599.646 355.575 600.209 355.012 cv
600.771 354.45 601.087 353.686 601.087 352.891 cv
601.087 352.095 600.771 351.332 600.209 350.77 cv
599.646 350.207 598.883 349.891 598.087 349.891 cv
597.292 349.891 596.529 350.207 595.966 350.77 cv
595.403 351.332 595.087 352.095 595.087 352.891 cv
595.087 353.686 595.403 354.45 595.966 355.012 cv
596.529 355.575 597.292 355.891 598.087 355.891 cv
cp
@
grestore
gsave
594.587 356.391 mo
601.587 356.391 li
601.587 349.391 li
594.587 349.391 li
cp
clp
0 lc
598.087 355.891 mo
598.883 355.891 599.646 355.575 600.209 355.012 cv
600.771 354.45 601.087 353.686 601.087 352.891 cv
601.087 352.095 600.771 351.332 600.209 350.77 cv
599.646 350.207 598.883 349.891 598.087 349.891 cv
597.292 349.891 596.529 350.207 595.966 350.77 cv
595.403 351.332 595.087 352.095 595.087 352.891 cv
595.087 353.686 595.403 354.45 595.966 355.012 cv
596.529 355.575 597.292 355.891 598.087 355.891 cv
cp
@
grestore
gsave
594.587 196.962 mo
601.587 196.962 li
601.587 189.962 li
594.587 189.962 li
cp
clp
0 lc
598.087 196.462 mo
598.883 196.462 599.646 196.146 600.209 195.583 cv
600.771 195.021 601.087 194.258 601.087 193.462 cv
601.087 192.666 600.771 191.903 600.209 191.341 cv
599.646 190.778 598.883 190.462 598.087 190.462 cv
597.292 190.462 596.529 190.778 595.966 191.341 cv
595.403 191.903 595.087 192.666 595.087 193.462 cv
595.087 194.258 595.403 195.021 595.966 195.583 cv
596.529 196.146 597.292 196.462 598.087 196.462 cv
cp
@
grestore
gsave
594.587 196.962 mo
601.587 196.962 li
601.587 189.962 li
594.587 189.962 li
cp
clp
0 lc
598.087 196.462 mo
598.883 196.462 599.646 196.146 600.209 195.583 cv
600.771 195.021 601.087 194.258 601.087 193.462 cv
601.087 192.666 600.771 191.903 600.209 191.341 cv
599.646 190.778 598.883 190.462 598.087 190.462 cv
597.292 190.462 596.529 190.778 595.966 191.341 cv
595.403 191.903 595.087 192.666 595.087 193.462 cv
595.087 194.258 595.403 195.021 595.966 195.583 cv
596.529 196.146 597.292 196.462 598.087 196.462 cv
cp
@
grestore
gsave
594.587 356.391 mo
601.587 356.391 li
601.587 349.391 li
594.587 349.391 li
cp
clp
0 lc
598.087 355.891 mo
598.883 355.891 599.646 355.575 600.209 355.012 cv
600.771 354.45 601.087 353.686 601.087 352.891 cv
601.087 352.095 600.771 351.332 600.209 350.77 cv
599.646 350.207 598.883 349.891 598.087 349.891 cv
597.292 349.891 596.529 350.207 595.966 350.77 cv
595.403 351.332 595.087 352.095 595.087 352.891 cv
595.087 353.686 595.403 354.45 595.966 355.012 cv
596.529 355.575 597.292 355.891 598.087 355.891 cv
cp
@
grestore
gsave
594.587 196.962 mo
601.587 196.962 li
601.587 189.962 li
594.587 189.962 li
cp
clp
0 lc
598.087 196.462 mo
598.883 196.462 599.646 196.146 600.209 195.583 cv
600.771 195.021 601.087 194.258 601.087 193.462 cv
601.087 192.666 600.771 191.903 600.209 191.341 cv
599.646 190.778 598.883 190.462 598.087 190.462 cv
597.292 190.462 596.529 190.778 595.966 191.341 cv
595.403 191.903 595.087 192.666 595.087 193.462 cv
595.087 194.258 595.403 195.021 595.966 195.583 cv
596.529 196.146 597.292 196.462 598.087 196.462 cv
cp
@
grestore
gsave
594.587 356.391 mo
601.587 356.391 li
601.587 349.391 li
594.587 349.391 li
cp
clp
0 lc
598.087 355.891 mo
598.883 355.891 599.646 355.575 600.209 355.012 cv
600.771 354.45 601.087 353.686 601.087 352.891 cv
601.087 352.095 600.771 351.332 600.209 350.77 cv
599.646 350.207 598.883 349.891 598.087 349.891 cv
597.292 349.891 596.529 350.207 595.966 350.77 cv
595.403 351.332 595.087 352.095 595.087 352.891 cv
595.087 353.686 595.403 354.45 595.966 355.012 cv
596.529 355.575 597.292 355.891 598.087 355.891 cv
cp
@
grestore
gsave
594.587 356.391 mo
601.587 356.391 li
601.587 349.391 li
594.587 349.391 li
cp
clp
0 lc
598.087 355.891 mo
598.883 355.891 599.646 355.575 600.209 355.012 cv
600.771 354.45 601.087 353.686 601.087 352.891 cv
601.087 352.095 600.771 351.332 600.209 350.77 cv
599.646 350.207 598.883 349.891 598.087 349.891 cv
597.292 349.891 596.529 350.207 595.966 350.77 cv
595.403 351.332 595.087 352.095 595.087 352.891 cv
595.087 353.686 595.403 354.45 595.966 355.012 cv
596.529 355.575 597.292 355.891 598.087 355.891 cv
cp
@
grestore
gsave
594.587 356.391 mo
601.587 356.391 li
601.587 349.391 li
594.587 349.391 li
cp
clp
0 lc
598.087 355.891 mo
598.883 355.891 599.646 355.575 600.209 355.012 cv
600.771 354.45 601.087 353.686 601.087 352.891 cv
601.087 352.095 600.771 351.332 600.209 350.77 cv
599.646 350.207 598.883 349.891 598.087 349.891 cv
597.292 349.891 596.529 350.207 595.966 350.77 cv
595.403 351.332 595.087 352.095 595.087 352.891 cv
595.087 353.686 595.403 354.45 595.966 355.012 cv
596.529 355.575 597.292 355.891 598.087 355.891 cv
cp
@
grestore
gsave
594.587 196.962 mo
601.587 196.962 li
601.587 189.962 li
594.587 189.962 li
cp
clp
0 lc
598.087 196.462 mo
598.883 196.462 599.646 196.146 600.209 195.583 cv
600.771 195.021 601.087 194.258 601.087 193.462 cv
601.087 192.666 600.771 191.903 600.209 191.341 cv
599.646 190.778 598.883 190.462 598.087 190.462 cv
597.292 190.462 596.529 190.778 595.966 191.341 cv
595.403 191.903 595.087 192.666 595.087 193.462 cv
595.087 194.258 595.403 195.021 595.966 195.583 cv
596.529 196.146 597.292 196.462 598.087 196.462 cv
cp
@
grestore
gsave
594.587 356.391 mo
601.587 356.391 li
601.587 349.391 li
594.587 349.391 li
cp
clp
0 lc
598.087 355.891 mo
598.883 355.891 599.646 355.575 600.209 355.012 cv
600.771 354.45 601.087 353.686 601.087 352.891 cv
601.087 352.095 600.771 351.332 600.209 350.77 cv
599.646 350.207 598.883 349.891 598.087 349.891 cv
597.292 349.891 596.529 350.207 595.966 350.77 cv
595.403 351.332 595.087 352.095 595.087 352.891 cv
595.087 353.686 595.403 354.45 595.966 355.012 cv
596.529 355.575 597.292 355.891 598.087 355.891 cv
cp
@
grestore
gsave
594.587 196.962 mo
601.587 196.962 li
601.587 189.962 li
594.587 189.962 li
cp
clp
0 lc
598.087 196.462 mo
598.883 196.462 599.646 196.146 600.209 195.583 cv
600.771 195.021 601.087 194.258 601.087 193.462 cv
601.087 192.666 600.771 191.903 600.209 191.341 cv
599.646 190.778 598.883 190.462 598.087 190.462 cv
597.292 190.462 596.529 190.778 595.966 191.341 cv
595.403 191.903 595.087 192.666 595.087 193.462 cv
595.087 194.258 595.403 195.021 595.966 195.583 cv
596.529 196.146 597.292 196.462 598.087 196.462 cv
cp
@
grestore
gsave
594.587 196.962 mo
601.587 196.962 li
601.587 189.962 li
594.587 189.962 li
cp
clp
0 lc
598.087 196.462 mo
598.883 196.462 599.646 196.146 600.209 195.583 cv
600.771 195.021 601.087 194.258 601.087 193.462 cv
601.087 192.666 600.771 191.903 600.209 191.341 cv
599.646 190.778 598.883 190.462 598.087 190.462 cv
597.292 190.462 596.529 190.778 595.966 191.341 cv
595.403 191.903 595.087 192.666 595.087 193.462 cv
595.087 194.258 595.403 195.021 595.966 195.583 cv
596.529 196.146 597.292 196.462 598.087 196.462 cv
cp
@
grestore
gsave
594.587 196.962 mo
601.587 196.962 li
601.587 189.962 li
594.587 189.962 li
cp
clp
0 lc
598.087 196.462 mo
598.883 196.462 599.646 196.146 600.209 195.583 cv
600.771 195.021 601.087 194.258 601.087 193.462 cv
601.087 192.666 600.771 191.903 600.209 191.341 cv
599.646 190.778 598.883 190.462 598.087 190.462 cv
597.292 190.462 596.529 190.778 595.966 191.341 cv
595.403 191.903 595.087 192.666 595.087 193.462 cv
595.087 194.258 595.403 195.021 595.966 195.583 cv
596.529 196.146 597.292 196.462 598.087 196.462 cv
cp
@
grestore
gsave
594.587 196.962 mo
601.587 196.962 li
601.587 189.962 li
594.587 189.962 li
cp
clp
0 lc
598.087 196.462 mo
598.883 196.462 599.646 196.146 600.209 195.583 cv
600.771 195.021 601.087 194.258 601.087 193.462 cv
601.087 192.666 600.771 191.903 600.209 191.341 cv
599.646 190.778 598.883 190.462 598.087 190.462 cv
597.292 190.462 596.529 190.778 595.966 191.341 cv
595.403 191.903 595.087 192.666 595.087 193.462 cv
595.087 194.258 595.403 195.021 595.966 195.583 cv
596.529 196.146 597.292 196.462 598.087 196.462 cv
cp
@
grestore
gsave
594.587 196.962 mo
601.587 196.962 li
601.587 189.962 li
594.587 189.962 li
cp
clp
0 lc
598.087 196.462 mo
598.883 196.462 599.646 196.146 600.209 195.583 cv
600.771 195.021 601.087 194.258 601.087 193.462 cv
601.087 192.666 600.771 191.903 600.209 191.341 cv
599.646 190.778 598.883 190.462 598.087 190.462 cv
597.292 190.462 596.529 190.778 595.966 191.341 cv
595.403 191.903 595.087 192.666 595.087 193.462 cv
595.087 194.258 595.403 195.021 595.966 195.583 cv
596.529 196.146 597.292 196.462 598.087 196.462 cv
cp
@
grestore
gsave
594.587 196.962 mo
601.587 196.962 li
601.587 189.962 li
594.587 189.962 li
cp
clp
0 lc
598.087 196.462 mo
598.883 196.462 599.646 196.146 600.209 195.583 cv
600.771 195.021 601.087 194.258 601.087 193.462 cv
601.087 192.666 600.771 191.903 600.209 191.341 cv
599.646 190.778 598.883 190.462 598.087 190.462 cv
597.292 190.462 596.529 190.778 595.966 191.341 cv
595.403 191.903 595.087 192.666 595.087 193.462 cv
595.087 194.258 595.403 195.021 595.966 195.583 cv
596.529 196.146 597.292 196.462 598.087 196.462 cv
cp
@
grestore
gsave
594.587 42.0119 mo
601.587 42.0119 li
601.587 35.0119 li
594.587 35.0119 li
cp
clp
0 lc
598.087 41.5119 mo
598.883 41.5119 599.646 41.1958 600.209 40.6332 cv
600.771 40.0706 601.087 39.3075 601.087 38.5119 cv
601.087 37.7163 600.771 36.9532 600.209 36.3906 cv
599.646 35.828 598.883 35.5119 598.087 35.5119 cv
597.292 35.5119 596.529 35.828 595.966 36.3906 cv
595.403 36.9532 595.087 37.7163 595.087 38.5119 cv
595.087 39.3075 595.403 40.0706 595.966 40.6332 cv
596.529 41.1958 597.292 41.5119 598.087 41.5119 cv
cp
@
grestore
gsave
594.587 42.0119 mo
601.587 42.0119 li
601.587 35.0119 li
594.587 35.0119 li
cp
clp
0 lc
598.087 41.5119 mo
598.883 41.5119 599.646 41.1958 600.209 40.6332 cv
600.771 40.0706 601.087 39.3075 601.087 38.5119 cv
601.087 37.7163 600.771 36.9532 600.209 36.3906 cv
599.646 35.828 598.883 35.5119 598.087 35.5119 cv
597.292 35.5119 596.529 35.828 595.966 36.3906 cv
595.403 36.9532 595.087 37.7163 595.087 38.5119 cv
595.087 39.3075 595.403 40.0706 595.966 40.6332 cv
596.529 41.1958 597.292 41.5119 598.087 41.5119 cv
cp
@
grestore
gsave
594.587 42.0119 mo
601.587 42.0119 li
601.587 35.0119 li
594.587 35.0119 li
cp
clp
0 lc
598.087 41.5119 mo
598.883 41.5119 599.646 41.1958 600.209 40.6332 cv
600.771 40.0706 601.087 39.3075 601.087 38.5119 cv
601.087 37.7163 600.771 36.9532 600.209 36.3906 cv
599.646 35.828 598.883 35.5119 598.087 35.5119 cv
597.292 35.5119 596.529 35.828 595.966 36.3906 cv
595.403 36.9532 595.087 37.7163 595.087 38.5119 cv
595.087 39.3075 595.403 40.0706 595.966 40.6332 cv
596.529 41.1958 597.292 41.5119 598.087 41.5119 cv
cp
@
grestore
gsave
594.587 42.0119 mo
601.587 42.0119 li
601.587 35.0119 li
594.587 35.0119 li
cp
clp
0 lc
598.087 41.5119 mo
598.883 41.5119 599.646 41.1958 600.209 40.6332 cv
600.771 40.0706 601.087 39.3075 601.087 38.5119 cv
601.087 37.7163 600.771 36.9532 600.209 36.3906 cv
599.646 35.828 598.883 35.5119 598.087 35.5119 cv
597.292 35.5119 596.529 35.828 595.966 36.3906 cv
595.403 36.9532 595.087 37.7163 595.087 38.5119 cv
595.087 39.3075 595.403 40.0706 595.966 40.6332 cv
596.529 41.1958 597.292 41.5119 598.087 41.5119 cv
cp
@
grestore
gsave
594.587 42.0119 mo
601.587 42.0119 li
601.587 35.0119 li
594.587 35.0119 li
cp
clp
0 lc
598.087 41.5119 mo
598.883 41.5119 599.646 41.1958 600.209 40.6332 cv
600.771 40.0706 601.087 39.3075 601.087 38.5119 cv
601.087 37.7163 600.771 36.9532 600.209 36.3906 cv
599.646 35.828 598.883 35.5119 598.087 35.5119 cv
597.292 35.5119 596.529 35.828 595.966 36.3906 cv
595.403 36.9532 595.087 37.7163 595.087 38.5119 cv
595.087 39.3075 595.403 40.0706 595.966 40.6332 cv
596.529 41.1958 597.292 41.5119 598.087 41.5119 cv
cp
@
grestore
gsave
594.587 42.0119 mo
601.587 42.0119 li
601.587 35.0119 li
594.587 35.0119 li
cp
clp
0 lc
598.087 41.5119 mo
598.883 41.5119 599.646 41.1958 600.209 40.6332 cv
600.771 40.0706 601.087 39.3075 601.087 38.5119 cv
601.087 37.7163 600.771 36.9532 600.209 36.3906 cv
599.646 35.828 598.883 35.5119 598.087 35.5119 cv
597.292 35.5119 596.529 35.828 595.966 36.3906 cv
595.403 36.9532 595.087 37.7163 595.087 38.5119 cv
595.087 39.3075 595.403 40.0706 595.966 40.6332 cv
596.529 41.1958 597.292 41.5119 598.087 41.5119 cv
cp
@
grestore
gsave
594.587 42.0119 mo
601.587 42.0119 li
601.587 35.0119 li
594.587 35.0119 li
cp
clp
0 lc
598.087 41.5119 mo
598.883 41.5119 599.646 41.1958 600.209 40.6332 cv
600.771 40.0706 601.087 39.3075 601.087 38.5119 cv
601.087 37.7163 600.771 36.9532 600.209 36.3906 cv
599.646 35.828 598.883 35.5119 598.087 35.5119 cv
597.292 35.5119 596.529 35.828 595.966 36.3906 cv
595.403 36.9532 595.087 37.7163 595.087 38.5119 cv
595.087 39.3075 595.403 40.0706 595.966 40.6332 cv
596.529 41.1958 597.292 41.5119 598.087 41.5119 cv
cp
@
grestore
gsave
594.587 42.0119 mo
601.587 42.0119 li
601.587 35.0119 li
594.587 35.0119 li
cp
clp
0 lc
598.087 41.5119 mo
598.883 41.5119 599.646 41.1958 600.209 40.6332 cv
600.771 40.0706 601.087 39.3075 601.087 38.5119 cv
601.087 37.7163 600.771 36.9532 600.209 36.3906 cv
599.646 35.828 598.883 35.5119 598.087 35.5119 cv
597.292 35.5119 596.529 35.828 595.966 36.3906 cv
595.403 36.9532 595.087 37.7163 595.087 38.5119 cv
595.087 39.3075 595.403 40.0706 595.966 40.6332 cv
596.529 41.1958 597.292 41.5119 598.087 41.5119 cv
cp
@
grestore
gsave
594.587 42.0119 mo
601.587 42.0119 li
601.587 35.0119 li
594.587 35.0119 li
cp
clp
0 lc
598.087 41.5119 mo
598.883 41.5119 599.646 41.1958 600.209 40.6332 cv
600.771 40.0706 601.087 39.3075 601.087 38.5119 cv
601.087 37.7163 600.771 36.9532 600.209 36.3906 cv
599.646 35.828 598.883 35.5119 598.087 35.5119 cv
597.292 35.5119 596.529 35.828 595.966 36.3906 cv
595.403 36.9532 595.087 37.7163 595.087 38.5119 cv
595.087 39.3075 595.403 40.0706 595.966 40.6332 cv
596.529 41.1958 597.292 41.5119 598.087 41.5119 cv
cp
@
grestore
gsave
594.587 42.0119 mo
601.587 42.0119 li
601.587 35.0119 li
594.587 35.0119 li
cp
clp
0 lc
598.087 41.5119 mo
598.883 41.5119 599.646 41.1958 600.209 40.6332 cv
600.771 40.0706 601.087 39.3075 601.087 38.5119 cv
601.087 37.7163 600.771 36.9532 600.209 36.3906 cv
599.646 35.828 598.883 35.5119 598.087 35.5119 cv
597.292 35.5119 596.529 35.828 595.966 36.3906 cv
595.403 36.9532 595.087 37.7163 595.087 38.5119 cv
595.087 39.3075 595.403 40.0706 595.966 40.6332 cv
596.529 41.1958 597.292 41.5119 598.087 41.5119 cv
cp
@
grestore
gsave
594.587 42.0119 mo
601.587 42.0119 li
601.587 35.0119 li
594.587 35.0119 li
cp
clp
0 lc
598.087 41.5119 mo
598.883 41.5119 599.646 41.1958 600.209 40.6332 cv
600.771 40.0706 601.087 39.3075 601.087 38.5119 cv
601.087 37.7163 600.771 36.9532 600.209 36.3906 cv
599.646 35.828 598.883 35.5119 598.087 35.5119 cv
597.292 35.5119 596.529 35.828 595.966 36.3906 cv
595.403 36.9532 595.087 37.7163 595.087 38.5119 cv
595.087 39.3075 595.403 40.0706 595.966 40.6332 cv
596.529 41.1958 597.292 41.5119 598.087 41.5119 cv
cp
@
grestore
gsave
594.587 42.0119 mo
601.587 42.0119 li
601.587 35.0119 li
594.587 35.0119 li
cp
clp
0 lc
598.087 41.5119 mo
598.883 41.5119 599.646 41.1958 600.209 40.6332 cv
600.771 40.0706 601.087 39.3075 601.087 38.5119 cv
601.087 37.7163 600.771 36.9532 600.209 36.3906 cv
599.646 35.828 598.883 35.5119 598.087 35.5119 cv
597.292 35.5119 596.529 35.828 595.966 36.3906 cv
595.403 36.9532 595.087 37.7163 595.087 38.5119 cv
595.087 39.3075 595.403 40.0706 595.966 40.6332 cv
596.529 41.1958 597.292 41.5119 598.087 41.5119 cv
cp
@
grestore
gsave
594.587 42.0119 mo
601.587 42.0119 li
601.587 35.0119 li
594.587 35.0119 li
cp
clp
0 lc
598.087 41.5119 mo
598.883 41.5119 599.646 41.1958 600.209 40.6332 cv
600.771 40.0706 601.087 39.3075 601.087 38.5119 cv
601.087 37.7163 600.771 36.9532 600.209 36.3906 cv
599.646 35.828 598.883 35.5119 598.087 35.5119 cv
597.292 35.5119 596.529 35.828 595.966 36.3906 cv
595.403 36.9532 595.087 37.7163 595.087 38.5119 cv
595.087 39.3075 595.403 40.0706 595.966 40.6332 cv
596.529 41.1958 597.292 41.5119 598.087 41.5119 cv
cp
@
grestore
gsave
594.587 42.0119 mo
601.587 42.0119 li
601.587 35.0119 li
594.587 35.0119 li
cp
clp
0 lc
598.087 41.5119 mo
598.883 41.5119 599.646 41.1958 600.209 40.6332 cv
600.771 40.0706 601.087 39.3075 601.087 38.5119 cv
601.087 37.7163 600.771 36.9532 600.209 36.3906 cv
599.646 35.828 598.883 35.5119 598.087 35.5119 cv
597.292 35.5119 596.529 35.828 595.966 36.3906 cv
595.403 36.9532 595.087 37.7163 595.087 38.5119 cv
595.087 39.3075 595.403 40.0706 595.966 40.6332 cv
596.529 41.1958 597.292 41.5119 598.087 41.5119 cv
cp
@
grestore
621.897 279.286 mo
637.77 279.286 li
637.77 138.971 li
621.897 138.971 li
621.897 279.286 li
@
629.834 279.286 mo
629.834 326.773 li
@
629.834 138.971 mo
629.834 88.846 li
@
625.865 326.773 mo
633.802 326.773 li
@
625.865 88.846 mo
633.802 88.846 li
@
653.644 178.234 mo
669.517 178.234 li
669.517 79.2875 li
653.644 79.2875 li
653.644 178.234 li
@
661.58 178.234 mo
661.58 279.903 li
@
661.58 79.2875 mo
661.58 54.6312 li
@
657.612 279.903 mo
665.549 279.903 li
@
657.612 54.6312 mo
665.549 54.6312 li
@
gsave
658.08 351.605 mo
665.08 351.605 li
665.08 344.605 li
658.08 344.605 li
cp
clp
0 lc
661.58 351.105 mo
662.376 351.105 663.139 350.789 663.702 350.226 cv
664.264 349.664 664.58 348.9 664.58 348.105 cv
664.58 347.309 664.264 346.546 663.702 345.983 cv
663.139 345.421 662.376 345.105 661.58 345.105 cv
660.785 345.105 660.022 345.421 659.459 345.983 cv
658.896 346.546 658.58 347.309 658.58 348.105 cv
658.58 348.9 658.896 349.664 659.459 350.226 cv
660.022 350.789 660.785 351.105 661.58 351.105 cv
cp
@
grestore
gsave
658.08 351.605 mo
665.08 351.605 li
665.08 344.605 li
658.08 344.605 li
cp
clp
0 lc
661.58 351.105 mo
662.376 351.105 663.139 350.789 663.702 350.226 cv
664.264 349.664 664.58 348.9 664.58 348.105 cv
664.58 347.309 664.264 346.546 663.702 345.983 cv
663.139 345.421 662.376 345.105 661.58 345.105 cv
660.785 345.105 660.022 345.421 659.459 345.983 cv
658.896 346.546 658.58 347.309 658.58 348.105 cv
658.58 348.9 658.896 349.664 659.459 350.226 cv
660.022 350.789 660.785 351.105 661.58 351.105 cv
cp
@
grestore
gsave
658.08 351.605 mo
665.08 351.605 li
665.08 344.605 li
658.08 344.605 li
cp
clp
0 lc
661.58 351.105 mo
662.376 351.105 663.139 350.789 663.702 350.226 cv
664.264 349.664 664.58 348.9 664.58 348.105 cv
664.58 347.309 664.264 346.546 663.702 345.983 cv
663.139 345.421 662.376 345.105 661.58 345.105 cv
660.785 345.105 660.022 345.421 659.459 345.983 cv
658.896 346.546 658.58 347.309 658.58 348.105 cv
658.58 348.9 658.896 349.664 659.459 350.226 cv
660.022 350.789 660.785 351.105 661.58 351.105 cv
cp
@
grestore
gsave
658.08 351.605 mo
665.08 351.605 li
665.08 344.605 li
658.08 344.605 li
cp
clp
0 lc
661.58 351.105 mo
662.376 351.105 663.139 350.789 663.702 350.226 cv
664.264 349.664 664.58 348.9 664.58 348.105 cv
664.58 347.309 664.264 346.546 663.702 345.983 cv
663.139 345.421 662.376 345.105 661.58 345.105 cv
660.785 345.105 660.022 345.421 659.459 345.983 cv
658.896 346.546 658.58 347.309 658.58 348.105 cv
658.58 348.9 658.896 349.664 659.459 350.226 cv
660.022 350.789 660.785 351.105 661.58 351.105 cv
cp
@
grestore
gsave
658.08 351.605 mo
665.08 351.605 li
665.08 344.605 li
658.08 344.605 li
cp
clp
0 lc
661.58 351.105 mo
662.376 351.105 663.139 350.789 663.702 350.226 cv
664.264 349.664 664.58 348.9 664.58 348.105 cv
664.58 347.309 664.264 346.546 663.702 345.983 cv
663.139 345.421 662.376 345.105 661.58 345.105 cv
660.785 345.105 660.022 345.421 659.459 345.983 cv
658.896 346.546 658.58 347.309 658.58 348.105 cv
658.58 348.9 658.896 349.664 659.459 350.226 cv
660.022 350.789 660.785 351.105 661.58 351.105 cv
cp
@
grestore
gsave
658.08 351.605 mo
665.08 351.605 li
665.08 344.605 li
658.08 344.605 li
cp
clp
0 lc
661.58 351.105 mo
662.376 351.105 663.139 350.789 663.702 350.226 cv
664.264 349.664 664.58 348.9 664.58 348.105 cv
664.58 347.309 664.264 346.546 663.702 345.983 cv
663.139 345.421 662.376 345.105 661.58 345.105 cv
660.785 345.105 660.022 345.421 659.459 345.983 cv
658.896 346.546 658.58 347.309 658.58 348.105 cv
658.58 348.9 658.896 349.664 659.459 350.226 cv
660.022 350.789 660.785 351.105 661.58 351.105 cv
cp
@
grestore
gsave
658.08 351.605 mo
665.08 351.605 li
665.08 344.605 li
658.08 344.605 li
cp
clp
0 lc
661.58 351.105 mo
662.376 351.105 663.139 350.789 663.702 350.226 cv
664.264 349.664 664.58 348.9 664.58 348.105 cv
664.58 347.309 664.264 346.546 663.702 345.983 cv
663.139 345.421 662.376 345.105 661.58 345.105 cv
660.785 345.105 660.022 345.421 659.459 345.983 cv
658.896 346.546 658.58 347.309 658.58 348.105 cv
658.58 348.9 658.896 349.664 659.459 350.226 cv
660.022 350.789 660.785 351.105 661.58 351.105 cv
cp
@
grestore
gsave
658.08 351.605 mo
665.08 351.605 li
665.08 344.605 li
658.08 344.605 li
cp
clp
0 lc
661.58 351.105 mo
662.376 351.105 663.139 350.789 663.702 350.226 cv
664.264 349.664 664.58 348.9 664.58 348.105 cv
664.58 347.309 664.264 346.546 663.702 345.983 cv
663.139 345.421 662.376 345.105 661.58 345.105 cv
660.785 345.105 660.022 345.421 659.459 345.983 cv
658.896 346.546 658.58 347.309 658.58 348.105 cv
658.58 348.9 658.896 349.664 659.459 350.226 cv
660.022 350.789 660.785 351.105 661.58 351.105 cv
cp
@
grestore
gsave
658.08 351.605 mo
665.08 351.605 li
665.08 344.605 li
658.08 344.605 li
cp
clp
0 lc
661.58 351.105 mo
662.376 351.105 663.139 350.789 663.702 350.226 cv
664.264 349.664 664.58 348.9 664.58 348.105 cv
664.58 347.309 664.264 346.546 663.702 345.983 cv
663.139 345.421 662.376 345.105 661.58 345.105 cv
660.785 345.105 660.022 345.421 659.459 345.983 cv
658.896 346.546 658.58 347.309 658.58 348.105 cv
658.58 348.9 658.896 349.664 659.459 350.226 cv
660.022 350.789 660.785 351.105 661.58 351.105 cv
cp
@
grestore
gsave
658.08 351.605 mo
665.08 351.605 li
665.08 344.605 li
658.08 344.605 li
cp
clp
0 lc
661.58 351.105 mo
662.376 351.105 663.139 350.789 663.702 350.226 cv
664.264 349.664 664.58 348.9 664.58 348.105 cv
664.58 347.309 664.264 346.546 663.702 345.983 cv
663.139 345.421 662.376 345.105 661.58 345.105 cv
660.785 345.105 660.022 345.421 659.459 345.983 cv
658.896 346.546 658.58 347.309 658.58 348.105 cv
658.58 348.9 658.896 349.664 659.459 350.226 cv
660.022 350.789 660.785 351.105 661.58 351.105 cv
cp
@
grestore
gsave
658.08 351.605 mo
665.08 351.605 li
665.08 344.605 li
658.08 344.605 li
cp
clp
0 lc
661.58 351.105 mo
662.376 351.105 663.139 350.789 663.702 350.226 cv
664.264 349.664 664.58 348.9 664.58 348.105 cv
664.58 347.309 664.264 346.546 663.702 345.983 cv
663.139 345.421 662.376 345.105 661.58 345.105 cv
660.785 345.105 660.022 345.421 659.459 345.983 cv
658.896 346.546 658.58 347.309 658.58 348.105 cv
658.58 348.9 658.896 349.664 659.459 350.226 cv
660.022 350.789 660.785 351.105 661.58 351.105 cv
cp
@
grestore
gsave
658.08 351.605 mo
665.08 351.605 li
665.08 344.605 li
658.08 344.605 li
cp
clp
0 lc
661.58 351.105 mo
662.376 351.105 663.139 350.789 663.702 350.226 cv
664.264 349.664 664.58 348.9 664.58 348.105 cv
664.58 347.309 664.264 346.546 663.702 345.983 cv
663.139 345.421 662.376 345.105 661.58 345.105 cv
660.785 345.105 660.022 345.421 659.459 345.983 cv
658.896 346.546 658.58 347.309 658.58 348.105 cv
658.58 348.9 658.896 349.664 659.459 350.226 cv
660.022 350.789 660.785 351.105 661.58 351.105 cv
cp
@
grestore
685.39 183.091 mo
701.263 183.091 li
701.263 92.0393 li
685.39 92.0393 li
685.39 183.091 li
@
693.327 183.091 mo
693.327 216.755 li
@
693.327 92.0393 mo
693.327 33.2691 li
@
689.358 216.755 mo
697.295 216.755 li
@
689.358 33.2691 mo
697.295 33.2691 li
@
gsave
689.827 333.573 mo
696.827 333.573 li
696.827 326.573 li
689.827 326.573 li
cp
clp
0 lc
693.327 333.073 mo
694.122 333.073 694.885 332.756 695.448 332.194 cv
696.011 331.631 696.327 330.868 696.327 330.073 cv
696.327 329.277 696.011 328.514 695.448 327.951 cv
694.885 327.389 694.122 327.073 693.327 327.073 cv
692.531 327.073 691.768 327.389 691.205 327.951 cv
690.643 328.514 690.327 329.277 690.327 330.073 cv
690.327 330.868 690.643 331.631 691.205 332.194 cv
691.768 332.756 692.531 333.073 693.327 333.073 cv
cp
@
grestore
gsave
689.827 333.573 mo
696.827 333.573 li
696.827 326.573 li
689.827 326.573 li
cp
clp
0 lc
693.327 333.073 mo
694.122 333.073 694.885 332.756 695.448 332.194 cv
696.011 331.631 696.327 330.868 696.327 330.073 cv
696.327 329.277 696.011 328.514 695.448 327.951 cv
694.885 327.389 694.122 327.073 693.327 327.073 cv
692.531 327.073 691.768 327.389 691.205 327.951 cv
690.643 328.514 690.327 329.277 690.327 330.073 cv
690.327 330.868 690.643 331.631 691.205 332.194 cv
691.768 332.756 692.531 333.073 693.327 333.073 cv
cp
@
grestore
gsave
689.827 333.573 mo
696.827 333.573 li
696.827 326.573 li
689.827 326.573 li
cp
clp
0 lc
693.327 333.073 mo
694.122 333.073 694.885 332.756 695.448 332.194 cv
696.011 331.631 696.327 330.868 696.327 330.073 cv
696.327 329.277 696.011 328.514 695.448 327.951 cv
694.885 327.389 694.122 327.073 693.327 327.073 cv
692.531 327.073 691.768 327.389 691.205 327.951 cv
690.643 328.514 690.327 329.277 690.327 330.073 cv
690.327 330.868 690.643 331.631 691.205 332.194 cv
691.768 332.756 692.531 333.073 693.327 333.073 cv
cp
@
grestore
gsave
689.827 333.573 mo
696.827 333.573 li
696.827 326.573 li
689.827 326.573 li
cp
clp
0 lc
693.327 333.073 mo
694.122 333.073 694.885 332.756 695.448 332.194 cv
696.011 331.631 696.327 330.868 696.327 330.073 cv
696.327 329.277 696.011 328.514 695.448 327.951 cv
694.885 327.389 694.122 327.073 693.327 327.073 cv
692.531 327.073 691.768 327.389 691.205 327.951 cv
690.643 328.514 690.327 329.277 690.327 330.073 cv
690.327 330.868 690.643 331.631 691.205 332.194 cv
691.768 332.756 692.531 333.073 693.327 333.073 cv
cp
@
grestore
gsave
689.827 333.573 mo
696.827 333.573 li
696.827 326.573 li
689.827 326.573 li
cp
clp
0 lc
693.327 333.073 mo
694.122 333.073 694.885 332.756 695.448 332.194 cv
696.011 331.631 696.327 330.868 696.327 330.073 cv
696.327 329.277 696.011 328.514 695.448 327.951 cv
694.885 327.389 694.122 327.073 693.327 327.073 cv
692.531 327.073 691.768 327.389 691.205 327.951 cv
690.643 328.514 690.327 329.277 690.327 330.073 cv
690.327 330.868 690.643 331.631 691.205 332.194 cv
691.768 332.756 692.531 333.073 693.327 333.073 cv
cp
@
grestore
gsave
689.827 333.573 mo
696.827 333.573 li
696.827 326.573 li
689.827 326.573 li
cp
clp
0 lc
693.327 333.073 mo
694.122 333.073 694.885 332.756 695.448 332.194 cv
696.011 331.631 696.327 330.868 696.327 330.073 cv
696.327 329.277 696.011 328.514 695.448 327.951 cv
694.885 327.389 694.122 327.073 693.327 327.073 cv
692.531 327.073 691.768 327.389 691.205 327.951 cv
690.643 328.514 690.327 329.277 690.327 330.073 cv
690.327 330.868 690.643 331.631 691.205 332.194 cv
691.768 332.756 692.531 333.073 693.327 333.073 cv
cp
@
grestore
82.2066 129.856 mo
98.0799 129.856 li
/1 
[/DeviceCMYK] /CSA add_res
0 1 1 0 cmyk
@
113.953 173.257 mo
129.826 173.257 li
@
145.7 173.501 mo
161.573 173.501 li
@
177.446 190.401 mo
193.319 190.401 li
@
209.193 133.2 mo
225.066 133.2 li
@
240.939 351.392 mo
256.812 351.392 li
@
272.686 174.91 mo
288.559 174.91 li
@
304.432 166.884 mo
320.305 166.884 li
@
336.179 245.96 mo
352.052 245.96 li
@
367.925 318.269 mo
383.798 318.269 li
@
399.672 347.761 mo
415.545 347.761 li
@
431.418 86.4047 mo
447.291 86.4047 li
@
463.165 309.916 mo
479.038 309.916 li
@
494.911 218.726 mo
510.784 218.726 li
@
526.658 247.979 mo
542.531 247.979 li
@
558.404 125.241 mo
574.277 125.241 li
@
590.151 126.167 mo
606.024 126.167 li
@
621.897 194.167 mo
637.77 194.167 li
@
653.644 166.983 mo
669.517 166.983 li
@
685.39 98.7408 mo
701.263 98.7408 li
@
.8 lw
0 lj
74.27 369.16 mo
74.27 17.2743 li
1 /0 /CSD get_res sepcs
1 sep
@
709.2 369.16 mo
709.2 17.2743 li
@
74.27 369.16 mo
709.2 369.16 li
@
74.27 17.2743 mo
709.2 17.2743 li
@
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
