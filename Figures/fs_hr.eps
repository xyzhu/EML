%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: fs_hr.pdf
%%Creator: Adobe Acrobat 15.7.0
%%For: yingchenzhen
%%CreationDate: 2019/3/12, 0:15:55
%%BoundingBox: 0 0 1135 347
%%HiResBoundingBox: 0 0 1134.9961 346.2801
%%CropBox: 0 0 1134.9961 346.2801
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 848 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 81.157285, 2014/12/12-00:43:15        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreateDate="2019-03-12T00:02:36+08:00"
   xmp:CreatorTool="matplotlib 3.0.2, http://matplotlib.org"
   xmp:ModifyDate="2019-03-12T00:13:37+08:00"
   xmp:MetadataDate="2019-03-12T00:13:37+08:00"
   pdf:Producer="matplotlib pdf backend 3.0.2"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:95572f51-62f2-47c7-8a76-5a50773b365e"
   xmpMM:InstanceID="uuid:376dc995-aba7-44ea-b602-109649578d4c"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -346.28 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
3.05176e-5 0 mo
3.05176e-5 346.28 li
1135 346.28 li
1135 0 li
cp
clp
gsave
-.503935 346.784 mo
1135.5 346.784 li
1135.5 -.216005 li
-.503935 -.216005 li
-.503935 346.784 li
clp
-8.50391 354.784 mo
1143.5 354.784 li
1143.5 -34.016 li
-8.50391 -34.016 li
-8.50391 354.784 li
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
f
31.6161 263.286 mo
330.52 263.286 li
330.52 59.5968 li
31.6161 59.5968 li
cp
f
gsave
31.6162 263.286 mo
330.52 263.286 li
330.52 59.5969 li
31.6162 59.5969 li
31.6162 263.286 li
clp
44.3785 388.634 mo
52.7278 388.634 li
52.7278 80.4797 li
44.3785 80.4797 li
cp
f
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
44.3785 388.634 mo
52.7278 388.634 li
52.7278 80.4797 li
44.3785 80.4797 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
31.6162 263.286 mo
330.52 263.286 li
330.52 59.5969 li
31.6162 59.5969 li
31.6162 263.286 li
clp
92.0887 388.634 mo
100.438 388.634 li
100.438 86.114 li
92.0887 86.114 li
cp
f
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
92.0887 388.634 mo
100.438 388.634 li
100.438 86.114 li
92.0887 86.114 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
31.6162 263.286 mo
330.52 263.286 li
330.52 59.5969 li
31.6162 59.5969 li
31.6162 263.286 li
clp
139.799 388.634 mo
148.148 388.634 li
148.148 79.6461 li
139.799 79.6461 li
cp
f
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
139.799 388.634 mo
148.148 388.634 li
148.148 79.6461 li
139.799 79.6461 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
31.6162 263.286 mo
330.52 263.286 li
330.52 59.5969 li
31.6162 59.5969 li
31.6162 263.286 li
clp
187.509 388.634 mo
195.858 388.634 li
195.858 80.0629 li
187.509 80.0629 li
cp
f
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
187.509 388.634 mo
195.858 388.634 li
195.858 80.0629 li
187.509 80.0629 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
31.6162 263.286 mo
330.52 263.286 li
330.52 59.5969 li
31.6162 59.5969 li
31.6162 263.286 li
clp
235.219 388.634 mo
243.568 388.634 li
243.568 82.7767 li
235.219 82.7767 li
cp
f
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
235.219 388.634 mo
243.568 388.634 li
243.568 82.7767 li
235.219 82.7767 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
31.6162 263.286 mo
330.52 263.286 li
330.52 59.5969 li
31.6162 59.5969 li
31.6162 263.286 li
clp
282.929 388.634 mo
291.278 388.634 li
291.278 81.3164 li
282.929 81.3164 li
cp
f
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
282.929 388.634 mo
291.278 388.634 li
291.278 81.3164 li
282.929 81.3164 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
31.6162 263.286 mo
330.52 263.286 li
330.52 59.5969 li
31.6162 59.5969 li
31.6162 263.286 li
clp
52.7278 388.634 mo
61.0771 388.634 li
61.0771 81.1064 li
52.7278 81.1064 li
cp
1 /0 /CSD get_res sepcs
.588235 sep
f
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
52.7278 388.634 mo
61.0771 388.634 li
61.0771 81.1064 li
52.7278 81.1064 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
31.6162 263.286 mo
330.52 263.286 li
330.52 59.5969 li
31.6162 59.5969 li
31.6162 263.286 li
clp
100.438 388.634 mo
108.787 388.634 li
108.787 84.8637 li
100.438 84.8637 li
cp
1 /0 /CSD get_res sepcs
.588235 sep
f
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
100.438 388.634 mo
108.787 388.634 li
108.787 84.8637 li
100.438 84.8637 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
31.6162 263.286 mo
330.52 263.286 li
330.52 59.5969 li
31.6162 59.5969 li
31.6162 263.286 li
clp
148.148 388.634 mo
156.497 388.634 li
156.497 80.8996 li
148.148 80.8996 li
cp
1 /0 /CSD get_res sepcs
.588235 sep
f
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
148.148 388.634 mo
156.497 388.634 li
156.497 80.8996 li
148.148 80.8996 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
31.6162 263.286 mo
330.52 263.286 li
330.52 59.5969 li
31.6162 59.5969 li
31.6162 263.286 li
clp
195.858 388.634 mo
204.207 388.634 li
204.207 79.4393 li
195.858 79.4393 li
cp
1 /0 /CSD get_res sepcs
.588235 sep
f
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
195.858 388.634 mo
204.207 388.634 li
204.207 79.4393 li
195.858 79.4393 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
31.6162 263.286 mo
330.52 263.286 li
330.52 59.5969 li
31.6162 59.5969 li
31.6162 263.286 li
clp
243.568 388.634 mo
251.918 388.634 li
251.918 85.0705 li
243.568 85.0705 li
cp
1 /0 /CSD get_res sepcs
.588235 sep
f
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
243.568 388.634 mo
251.918 388.634 li
251.918 85.0705 li
243.568 85.0705 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
31.6162 263.286 mo
330.52 263.286 li
330.52 59.5969 li
31.6162 59.5969 li
31.6162 263.286 li
clp
291.278 388.634 mo
299.628 388.634 li
299.628 81.3164 li
291.278 81.3164 li
cp
1 /0 /CSD get_res sepcs
.588235 sep
f
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
291.278 388.634 mo
299.628 388.634 li
299.628 81.3164 li
291.278 81.3164 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
91.9694 263.286 mo
91.9694 266.786 li
1 /0 /CSD get_res sepcs
1 sep
f
.8 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
91.9694 263.286 mo
91.9694 266.786 li
@
33.1248 273.111 mo
32.7391 274.298 li
32.3416 273.923 31.9611 273.621 31.5893 273.377 cv
31.201 273.142 30.8255 272.952 30.4546 272.831 cv
29.7869 272.614 29.2235 272.581 28.7846 272.712 cv
28.3417 272.855 28.048 273.17 27.8954 273.64 cv
27.7668 274.035 27.7777 274.381 27.9607 274.659 cv
28.1273 274.945 28.5325 275.255 29.16 275.595 cv
29.8536 275.985 li
30.6999 276.451 31.2671 276.977 31.5593 277.55 cv
31.8474 278.136 31.8811 278.789 31.6441 279.519 cv
31.3589 280.397 30.8492 280.956 30.1235 281.212 cv
29.3854 281.464 28.46 281.41 27.3349 281.044 cv
26.9022 280.903 26.4608 280.705 26.0068 280.462 cv
25.5527 280.219 25.1023 279.922 24.6597 279.56 cv
25.0694 278.299 li
25.4716 278.744 25.8855 279.11 26.3111 279.399 cv
26.7327 279.7 27.1825 279.915 27.6523 280.067 cv
28.3447 280.292 28.9205 280.329 29.3922 280.181 cv
29.8514 280.03 30.1738 279.711 30.3425 279.192 cv
30.4871 278.747 30.4636 278.356 30.272 278.021 cv
30.0803 277.685 29.6955 277.355 29.1175 277.03 cv
28.4238 276.641 li
27.5652 276.171 27.0023 275.673 26.7228 275.145 cv
26.4394 274.629 26.4143 274.033 26.6392 273.341 cv
26.8963 272.55 27.3732 272.008 28.0906 271.735 cv
28.7956 271.458 29.6508 271.476 30.6399 271.798 cv
31.0603 271.934 31.4686 272.108 31.8896 272.327 cv
32.2982 272.542 32.7032 272.81 33.1248 273.111 cv
f
36.6116 274.285 mo
35.9889 276.201 li
38.2762 276.944 li
37.995 277.81 li
35.7077 277.067 li
34.5146 280.739 li
34.3338 281.295 34.2915 281.678 34.3917 281.874 cv
34.4878 282.083 34.7728 282.258 35.2426 282.41 cv
36.3801 282.78 li
36.0788 283.707 li
34.9413 283.338 li
34.0759 283.057 33.5346 282.703 33.3176 282.277 cv
33.1006 281.851 33.1287 281.218 33.4019 280.377 cv
34.595 276.705 li
33.779 276.44 li
34.0602 275.574 li
34.8762 275.84 li
35.4989 273.923 li
36.6116 274.285 li
f
41.721 281.782 mo
40.8185 281.488 40.1641 281.399 39.7537 281.484 cv
39.3392 281.582 39.0536 281.872 38.8929 282.366 cv
38.7644 282.762 38.7835 283.124 38.9709 283.43 cv
39.1542 283.75 39.4766 283.978 39.9217 284.122 cv
40.5399 284.323 41.1027 284.274 41.6182 283.949 cv
42.1298 283.637 42.504 283.116 42.741 282.386 cv
42.8214 282.139 li
41.721 281.782 li
44.0827 282.043 mo
42.8294 285.901 li
41.7166 285.539 li
42.0501 284.513 li
41.6538 284.849 41.236 285.041 40.8048 285.106 cv
40.3736 285.171 39.8717 285.117 39.3277 284.941 cv
38.6353 284.716 38.1392 284.349 37.8557 283.834 cv
37.5723 283.318 37.5432 282.734 37.7561 282.079 cv
38.0011 281.325 38.4332 280.836 39.081 280.609 cv
39.7125 280.391 40.5309 280.438 41.5448 280.768 cv
43.1026 281.274 li
43.1387 281.162 li
43.3034 280.656 43.2589 280.204 43.0175 279.811 cv
42.772 279.43 42.3504 279.129 41.7446 278.932 cv
41.349 278.804 40.962 278.733 40.5589 278.711 cv
40.1559 278.69 39.7655 278.713 39.3754 278.778 cv
39.7089 277.752 li
40.1527 277.732 40.5885 277.737 40.9959 277.787 cv
41.4033 277.837 41.7903 277.908 42.1612 278.029 cv
43.1379 278.346 43.783 278.843 44.1005 279.507 cv
44.418 280.17 44.4162 281.017 44.0827 282.043 cv
f
49.0372 278.322 mo
48.4145 280.239 li
50.7018 280.982 li
50.4206 281.847 li
48.1333 281.104 li
46.9402 284.776 li
46.7594 285.332 46.7171 285.715 46.8173 285.912 cv
46.9134 286.121 47.1984 286.295 47.6682 286.448 cv
48.8057 286.817 li
48.5044 287.745 li
47.367 287.375 li
46.5015 287.094 45.9603 286.74 45.7432 286.314 cv
45.5262 285.889 45.5543 285.255 45.8275 284.414 cv
47.0206 280.742 li
46.2046 280.477 li
46.4858 279.612 li
47.3018 279.877 li
47.9245 277.961 li
49.0372 278.322 li
f
52.1607 281.456 mo
53.2735 281.817 li
51.076 288.58 li
49.9633 288.219 li
52.1607 281.456 li
53.0164 278.822 mo
54.1291 279.184 li
53.6712 280.593 li
52.5584 280.232 li
53.0164 278.822 li
f
59.8485 284.172 mo
59.507 285.223 li
59.2338 284.97 58.9525 284.742 58.6468 284.547 cv
58.3247 284.361 57.9946 284.199 57.6361 284.082 cv
57.0797 283.901 56.6312 283.851 56.303 283.936 cv
55.9747 284.021 55.7584 284.224 55.6499 284.558 cv
55.5656 284.817 55.6002 285.047 55.7498 285.26 cv
55.8994 285.473 56.2468 285.75 56.8001 286.066 cv
57.1553 286.277 li
57.8903 286.707 58.3664 287.135 58.6038 287.541 cv
58.8248 287.954 58.8573 288.443 58.6805 288.987 cv
58.4756 289.618 58.0677 290.032 57.4566 290.23 cv
56.8416 290.44 56.0929 290.388 55.2275 290.107 cv
54.8566 289.986 54.4977 289.829 54.1222 289.638 cv
53.7466 289.448 53.3707 289.216 52.9862 288.928 cv
53.3598 287.778 li
53.6955 288.133 54.0513 288.426 54.4148 288.654 cv
54.7743 288.893 55.1539 289.071 55.5495 289.2 cv
56.0688 289.369 56.5049 289.415 56.8455 289.334 cv
57.1737 289.249 57.4065 289.038 57.5149 288.704 cv
57.6114 288.407 57.5764 288.136 57.4308 287.911 cv
57.2852 287.686 56.8923 287.381 56.2482 287.008 cv
55.893 286.796 li
55.2489 286.423 54.8143 286.036 54.6139 285.643 cv
54.4013 285.246 54.3855 284.789 54.5582 284.258 cv
54.7631 283.627 55.1463 283.205 55.7039 283.003 cv
56.2615 282.802 56.9606 282.838 57.8014 283.111 cv
58.2094 283.243 58.5806 283.405 58.9314 283.587 cv
59.2699 283.766 59.5756 283.961 59.8485 284.172 cv
f
63.7623 283.107 mo
63.1397 285.023 li
65.427 285.766 li
65.1458 286.632 li
62.8585 285.888 li
61.6654 289.56 li
61.4846 290.117 61.4423 290.5 61.5424 290.696 cv
61.6386 290.905 61.9236 291.08 62.3934 291.232 cv
63.5308 291.602 li
63.2296 292.529 li
62.0921 292.16 li
61.2266 291.878 60.6854 291.525 60.4684 291.099 cv
60.2514 290.673 60.2794 290.04 60.5526 289.199 cv
61.7457 285.527 li
60.9297 285.262 li
61.2109 284.396 li
62.0269 284.661 li
62.6496 282.745 li
63.7623 283.107 li
f
66.8859 286.24 mo
67.9986 286.602 li
65.8012 293.365 li
64.6885 293.003 li
66.8859 286.24 li
67.7415 283.607 mo
68.8543 283.968 li
68.3963 285.378 li
67.2836 285.016 li
67.7415 283.607 li
f
75.1099 289.199 mo
74.7725 290.238 li
74.5073 289.96 74.2384 289.736 73.945 289.545 cv
73.6517 289.354 73.3587 289.204 73.0372 289.1 cv
72.3201 288.867 71.675 288.917 71.1308 289.246 cv
70.5865 289.575 70.1798 290.154 69.9146 290.97 cv
69.6455 291.798 69.6344 292.505 69.8814 293.091 cv
70.1284 293.677 70.6248 294.085 71.3419 294.318 cv
71.6634 294.422 71.9845 294.485 72.3341 294.503 cv
72.6837 294.521 73.037 294.486 73.4147 294.417 cv
73.0812 295.443 li
72.7116 295.487 72.354 295.494 72.0124 295.451 cv
71.6585 295.405 71.2879 295.325 70.917 295.205 cv
69.9032 294.875 69.1876 294.301 68.803 293.465 cv
68.4021 292.638 68.3866 291.676 68.7401 290.588 cv
69.0976 289.488 69.6756 288.719 70.4863 288.285 cv
71.297 287.851 72.2298 287.799 73.2931 288.144 cv
73.6392 288.257 73.961 288.402 74.2584 288.581 cv
74.5557 288.76 74.845 288.963 75.1099 289.199 cv
f
79.109 293.93 mo
78.2064 293.636 77.5521 293.547 77.1416 293.632 cv
76.7271 293.73 76.4416 294.02 76.2809 294.514 cv
76.1523 294.91 76.1715 295.272 76.3588 295.579 cv
76.5421 295.898 76.8645 296.126 77.3096 296.27 cv
77.9278 296.471 78.4907 296.422 79.0062 296.097 cv
79.5177 295.785 79.892 295.264 80.129 294.534 cv
80.2093 294.287 li
79.109 293.93 li
81.4707 294.191 mo
80.2173 298.049 li
79.1046 297.687 li
79.438 296.661 li
79.0418 296.997 78.6239 297.189 78.1928 297.254 cv
77.7616 297.319 77.2596 297.265 76.7156 297.089 cv
76.0233 296.864 75.5272 296.498 75.2437 295.982 cv
74.9602 295.466 74.9311 294.882 75.144 294.227 cv
75.3891 293.473 75.8211 292.984 76.469 292.758 cv
77.1004 292.539 77.9189 292.586 78.9327 292.916 cv
80.4905 293.422 li
80.5267 293.31 li
80.6914 292.804 80.6469 292.352 80.4054 291.959 cv
80.16 291.578 79.7384 291.277 79.1326 291.081 cv
78.7369 290.952 78.3499 290.881 77.9469 290.859 cv
77.5438 290.838 77.1535 290.861 76.7634 290.926 cv
77.0968 289.9 li
77.5407 289.88 77.9765 289.885 78.3839 289.935 cv
78.7912 289.985 79.1782 290.057 79.5491 290.177 cv
80.5259 290.494 81.171 290.991 81.4884 291.655 cv
81.8059 292.318 81.8041 293.165 81.4707 294.191 cv
f
85.5578 289.396 mo
86.6705 289.757 li
83.6174 299.154 li
82.5047 298.792 li
85.5578 289.396 li
f
89.3588 295.661 mo
88.8834 295.862 88.5153 296.111 88.2378 296.376 cv
87.9602 296.642 87.7612 296.96 87.6487 297.306 cv
87.4559 297.899 87.5094 298.45 87.8136 298.986 cv
88.1054 299.518 88.5891 299.88 89.2321 300.089 cv
89.603 300.21 89.9816 300.265 90.3556 300.249 cv
90.7296 300.234 91.1153 300.141 91.4964 299.978 cv
89.3588 295.661 li
90.4328 295.258 mo
92.4786 299.395 li
92.826 299.125 93.136 298.802 93.4046 298.438 cv
93.6608 298.07 93.888 297.665 94.0653 297.204 cv
95.1904 297.569 li
94.9682 298.085 94.6635 298.56 94.2846 299.011 cv
93.9057 299.462 93.4526 299.889 92.917 300.275 cv
94.0401 302.54 li
92.5193 302.046 li
91.9431 300.875 li
91.4022 301.109 90.8728 301.224 90.3591 301.248 cv
89.8494 301.26 89.3267 301.186 88.8074 301.018 cv
87.8307 300.7 87.1278 300.171 86.6864 299.426 cv
86.2449 298.681 86.1812 297.868 86.4624 297.002 cv
86.6311 296.483 86.9115 296.041 87.3281 295.684 cv
87.7447 295.328 88.2933 295.028 88.9699 294.796 cv
88.8524 294.485 88.7884 294.177 88.7698 293.897 cv
88.7513 293.618 88.7822 293.355 88.8625 293.107 cv
89.0714 292.465 89.4667 292.005 90.0403 291.754 cv
90.614 291.503 91.2717 291.498 92.0135 291.739 cv
92.3474 291.848 92.6691 291.993 92.9788 292.176 cv
93.2762 292.355 93.5902 292.566 93.8882 292.827 cv
93.5307 293.927 li
93.2324 293.625 92.9468 293.368 92.6575 293.165 cv
92.3681 292.962 92.0998 292.82 91.8279 292.731 cv
91.4075 292.595 91.0251 292.594 90.6932 292.732 cv
90.3489 292.866 90.1288 293.123 90.0163 293.469 cv
89.9481 293.679 89.9292 293.905 89.9886 294.143 cv
90.0439 294.393 90.1824 294.767 90.4328 295.258 cv
f
98.5635 294.045 mo
99.7875 294.443 li
96.859 303.456 li
95.635 303.058 li
98.5635 294.045 li
f
106.184 301.975 mo
104.858 306.055 li
103.746 305.694 li
105.059 301.651 li
105.268 301.008 105.285 300.494 105.142 300.092 cv
104.999 299.69 104.68 299.409 104.186 299.248 cv
103.58 299.051 103.046 299.097 102.575 299.367 cv
102.104 299.638 101.763 300.101 101.55 300.756 cv
100.308 304.577 li
99.1957 304.215 li
101.393 297.452 li
102.506 297.814 li
102.164 298.865 li
102.553 298.553 102.962 298.345 103.397 298.268 cv
103.82 298.186 104.277 298.212 104.746 298.364 cv
105.513 298.613 106.026 299.053 106.265 299.664 cv
106.504 300.275 106.485 301.048 106.184 301.975 cv
f
113.549 298.491 mo
113.248 299.418 li
112.185 299.072 li
111.789 298.944 111.477 298.938 111.276 299.05 cv
111.063 299.159 110.896 299.419 110.76 299.84 cv
110.567 300.433 li
112.397 301.028 li
112.116 301.893 li
110.286 301.299 li
108.37 307.196 li
107.257 306.834 li
109.173 300.937 li
108.11 300.591 li
108.391 299.726 li
109.454 300.072 li
109.607 299.602 li
109.848 298.86 110.202 298.36 110.661 298.126 cv
111.119 297.892 111.732 297.9 112.498 298.149 cv
113.549 298.491 li
f
115.989 303.056 mo
115.396 302.863 114.849 302.945 114.351 303.303 cv
113.852 303.66 113.474 304.234 113.213 305.038 cv
112.947 305.854 112.903 306.537 113.097 307.119 cv
113.29 307.701 113.688 308.077 114.294 308.273 cv
114.887 308.466 115.429 308.396 115.928 308.039 cv
116.427 307.682 116.805 307.107 117.07 306.291 cv
117.327 305.5 117.363 304.801 117.169 304.219 cv
116.976 303.636 116.582 303.249 115.989 303.056 cv
116.294 302.116 mo
117.259 302.43 117.908 302.996 118.264 303.795 cv
118.603 304.602 118.606 305.56 118.245 306.673 cv
117.883 307.786 117.318 308.559 116.573 309 cv
115.811 309.45 114.957 309.514 113.992 309.201 cv
113.016 308.883 112.35 308.325 112.01 307.518 cv
111.667 306.723 111.677 305.769 112.038 304.656 cv
112.4 303.544 112.953 302.767 113.702 302.313 cv
114.447 301.871 115.318 301.799 116.294 302.116 cv
f
122.911 302.325 mo
122.288 304.241 li
124.575 304.985 li
124.294 305.85 li
122.007 305.107 li
120.814 308.779 li
120.633 309.335 120.591 309.718 120.691 309.914 cv
120.787 310.123 121.072 310.298 121.542 310.451 cv
122.679 310.82 li
122.378 311.748 li
121.24 311.378 li
120.375 311.097 119.834 310.743 119.617 310.317 cv
119.4 309.891 119.428 309.258 119.701 308.417 cv
120.894 304.745 li
120.078 304.48 li
120.359 303.615 li
121.175 303.88 li
121.798 301.964 li
122.911 302.325 li
f
130.788 309.969 mo
129.462 314.049 li
128.349 313.688 li
129.663 309.645 li
129.872 309.002 129.889 308.488 129.746 308.086 cv
129.603 307.684 129.284 307.403 128.79 307.242 cv
128.184 307.046 127.65 307.091 127.179 307.362 cv
126.708 307.632 126.367 308.095 126.154 308.751 cv
124.912 312.571 li
123.8 312.21 li
126.853 302.813 li
127.965 303.175 li
126.768 306.859 li
127.156 306.548 127.566 306.339 128.001 306.262 cv
128.424 306.181 128.881 306.206 129.35 306.358 cv
130.117 306.608 130.63 307.048 130.869 307.658 cv
131.108 308.269 131.089 309.042 130.788 309.969 cv
f
138.651 312.989 mo
138.474 313.533 li
133.368 311.874 li
133.168 312.656 133.198 313.322 133.49 313.854 cv
133.769 314.383 134.274 314.765 135.015 315.006 cv
135.436 315.143 135.872 315.23 136.3 315.26 cv
136.728 315.289 137.188 315.261 137.656 315.167 cv
137.314 316.218 li
136.863 316.263 136.41 316.266 135.966 316.204 cv
135.521 316.141 135.073 316.05 134.652 315.913 cv
133.564 315.56 132.812 314.974 132.382 314.151 cv
131.952 313.328 131.92 312.374 132.27 311.298 cv
132.627 310.198 133.209 309.417 134.016 308.954 cv
134.818 308.504 135.742 308.435 136.756 308.765 cv
137.671 309.062 138.292 309.592 138.635 310.346 cv
138.961 311.108 138.976 311.987 138.651 312.989 cv
137.642 312.306 mo
137.827 311.696 137.81 311.158 137.609 310.682 cv
137.392 310.215 137.007 309.885 136.463 309.708 cv
135.845 309.508 135.29 309.532 134.807 309.758 cv
134.324 309.984 133.94 310.406 133.686 311.02 cv
137.642 312.306 li
f
143.845 312.107 mo
143.251 311.914 142.705 311.996 142.206 312.354 cv
141.707 312.711 141.329 313.285 141.068 314.089 cv
140.803 314.905 140.759 315.588 140.952 316.17 cv
141.146 316.752 141.543 317.127 142.149 317.324 cv
142.743 317.517 143.285 317.447 143.784 317.09 cv
144.283 316.732 144.661 316.158 144.926 315.342 cv
145.183 314.551 145.219 313.852 145.025 313.269 cv
144.832 312.687 144.438 312.3 143.845 312.107 cv
144.15 311.167 mo
145.114 311.48 145.764 312.047 146.119 312.846 cv
146.459 313.653 146.462 314.611 146.1 315.724 cv
145.739 316.837 145.173 317.61 144.428 318.051 cv
143.667 318.501 142.812 318.565 141.848 318.251 cv
140.871 317.934 140.205 317.376 139.866 316.569 cv
139.523 315.774 139.532 314.82 139.894 313.707 cv
140.255 312.594 140.808 311.817 141.557 311.364 cv
142.302 310.922 143.173 310.85 144.15 311.167 cv
f
152.625 315.247 mo
152.525 315.132 152.406 315.039 152.269 314.953 cv
152.129 314.88 151.976 314.804 151.803 314.747 cv
151.173 314.542 150.622 314.596 150.156 314.895 cv
149.677 315.191 149.327 315.72 149.078 316.486 cv
147.921 320.047 li
146.809 319.686 li
149.006 312.923 li
150.119 313.284 li
149.777 314.335 li
150.132 313.999 150.542 313.791 150.977 313.713 cv
151.412 313.636 151.902 313.686 152.446 313.863 cv
152.52 313.887 152.603 313.927 152.702 313.959 cv
152.784 314 152.879 314.044 152.995 314.109 cv
152.625 315.247 li
f
154.545 322.883 mo
153.967 323.57 153.485 324.001 153.108 324.152 cv
152.731 324.303 152.295 324.298 151.8 324.137 cv
150.91 323.848 li
151.211 322.921 li
151.867 323.133 li
152.163 323.23 152.422 323.232 152.644 323.14 cv
152.865 323.048 153.159 322.774 153.546 322.298 cv
153.904 321.868 li
153.333 314.329 li
154.508 314.71 li
154.903 320.689 li
158.736 316.084 li
159.911 316.466 li
154.545 322.883 li
f
139.679 263.286 mo
139.679 266.786 li
f
139.679 263.286 mo
139.679 266.786 li
@
93.2938 271.059 mo
95.1113 271.649 li
95.4184 278.529 li
99.7229 273.148 li
101.54 273.738 li
98.6118 282.751 li
97.4249 282.366 li
99.9959 274.453 li
95.663 279.879 li
94.4389 279.482 li
94.1232 272.545 li
91.5522 280.457 li
90.3652 280.072 li
93.2938 271.059 li
f
105.551 278.39 mo
104.958 278.197 104.412 278.28 103.913 278.637 cv
103.414 278.994 103.036 279.569 102.775 280.372 cv
102.51 281.188 102.466 281.871 102.659 282.453 cv
102.853 283.036 103.25 283.411 103.856 283.608 cv
104.449 283.801 104.992 283.731 105.49 283.373 cv
105.989 283.016 106.367 282.442 106.632 281.626 cv
106.889 280.834 106.925 280.135 106.732 279.553 cv
106.538 278.971 106.145 278.583 105.551 278.39 cv
105.857 277.451 mo
106.821 277.764 107.471 278.33 107.826 279.129 cv
108.165 279.937 108.168 280.895 107.807 282.007 cv
107.445 283.12 106.88 283.893 106.135 284.334 cv
105.374 284.784 104.519 284.848 103.555 284.535 cv
102.578 284.218 101.912 283.659 101.573 282.852 cv
101.23 282.057 101.239 281.103 101.6 279.991 cv
101.962 278.878 102.515 278.101 103.264 277.647 cv
104.009 277.206 104.88 277.133 105.857 277.451 cv
f
114.867 281.691 mo
116.056 278.031 li
117.169 278.392 li
114.116 287.789 li
113.003 287.427 li
113.333 286.414 li
112.965 286.745 112.572 286.945 112.153 287.014 cv
111.734 287.083 111.282 287.046 110.787 286.885 cv
109.971 286.62 109.408 286.082 109.098 285.27 cv
108.787 284.458 108.821 283.512 109.167 282.449 cv
109.512 281.386 110.037 280.613 110.769 280.127 cv
111.497 279.652 112.273 279.535 113.089 279.801 cv
113.584 279.961 113.972 280.197 114.266 280.511 cv
114.561 280.825 114.761 281.219 114.867 281.691 cv
110.317 282.823 mo
110.052 283.639 110.003 284.334 110.185 284.912 cv
110.366 285.49 110.763 285.866 111.357 286.059 cv
111.938 286.247 112.468 286.173 112.966 285.816 cv
113.453 285.455 113.835 284.868 114.1 284.052 cv
114.365 283.236 114.397 282.549 114.216 281.971 cv
114.022 281.389 113.641 281.005 113.06 280.816 cv
112.467 280.623 111.92 280.706 111.434 281.067 cv
110.947 281.428 110.582 282.007 110.317 282.823 cv
f
123.379 286.752 mo
123.202 287.296 li
118.096 285.637 li
117.896 286.42 117.926 287.086 118.218 287.618 cv
118.497 288.146 119.001 288.529 119.743 288.77 cv
120.164 288.906 120.6 288.993 121.028 289.023 cv
121.456 289.053 121.916 289.025 122.384 288.931 cv
122.042 289.982 li
121.59 290.026 121.138 290.03 120.694 289.967 cv
120.249 289.905 119.801 289.814 119.38 289.677 cv
118.292 289.323 117.539 288.737 117.11 287.914 cv
116.68 287.091 116.648 286.138 116.998 285.062 cv
117.355 283.962 117.937 283.18 118.744 282.718 cv
119.546 282.268 120.47 282.199 121.484 282.528 cv
122.399 282.826 123.02 283.355 123.363 284.109 cv
123.689 284.871 123.704 285.751 123.379 286.752 cv
122.37 286.069 mo
122.555 285.46 122.538 284.921 122.337 284.446 cv
122.12 283.979 121.735 283.649 121.191 283.472 cv
120.573 283.271 120.018 283.296 119.535 283.522 cv
119.051 283.747 118.668 284.169 118.414 284.784 cv
122.37 286.069 li
f
127.06 281.606 mo
128.173 281.968 li
125.12 291.364 li
124.007 291.003 li
127.06 281.606 li
f
139.66 286.452 mo
139.275 287.639 li
138.877 287.264 138.497 286.962 138.125 286.719 cv
137.737 286.483 137.361 286.293 136.99 286.172 cv
136.322 285.955 135.759 285.923 135.32 286.053 cv
134.877 286.196 134.584 286.511 134.431 286.981 cv
134.302 287.377 134.313 287.722 134.496 288 cv
134.663 288.287 135.068 288.596 135.696 288.936 cv
136.389 289.326 li
137.235 289.792 137.803 290.318 138.095 290.892 cv
138.383 291.477 138.417 292.131 138.18 292.86 cv
137.894 293.738 137.385 294.297 136.659 294.553 cv
135.921 294.805 134.996 294.751 133.87 294.385 cv
133.438 294.245 132.996 294.046 132.542 293.803 cv
132.088 293.56 131.638 293.263 131.195 292.901 cv
131.605 291.64 li
132.007 292.085 132.421 292.452 132.847 292.74 cv
133.268 293.041 133.718 293.256 134.188 293.408 cv
134.88 293.633 135.456 293.67 135.928 293.523 cv
136.387 293.371 136.709 293.052 136.878 292.533 cv
137.023 292.088 136.999 291.697 136.807 291.362 cv
136.616 291.026 136.231 290.696 135.653 290.372 cv
134.959 289.982 li
134.101 289.512 133.538 289.014 133.258 288.486 cv
132.975 287.97 132.95 287.375 133.175 286.682 cv
133.432 285.891 133.909 285.349 134.626 285.076 cv
135.331 284.799 136.186 284.818 137.175 285.139 cv
137.596 285.275 138.004 285.449 138.425 285.668 cv
138.834 285.883 139.239 286.151 139.66 286.452 cv
f
143.147 287.626 mo
142.524 289.542 li
144.812 290.286 li
144.531 291.151 li
142.243 290.408 li
141.05 294.08 li
140.869 294.636 140.827 295.019 140.927 295.215 cv
141.023 295.424 141.308 295.599 141.778 295.752 cv
142.916 296.121 li
142.614 297.049 li
141.477 296.679 li
140.611 296.398 140.07 296.044 139.853 295.618 cv
139.636 295.192 139.664 294.559 139.937 293.718 cv
141.13 290.046 li
140.314 289.781 li
140.596 288.916 li
141.412 289.181 li
142.034 287.264 li
143.147 287.626 li
f
149.852 293.072 mo
149.753 292.957 149.633 292.864 149.497 292.778 cv
149.356 292.705 149.204 292.628 149.031 292.572 cv
148.4 292.367 147.85 292.421 147.383 292.72 cv
146.904 293.016 146.555 293.545 146.306 294.311 cv
145.149 297.872 li
144.036 297.51 li
146.234 290.748 li
147.346 291.109 li
147.005 292.16 li
147.36 291.824 147.769 291.616 148.205 291.538 cv
148.64 291.461 149.129 291.511 149.673 291.688 cv
149.748 291.712 149.83 291.752 149.929 291.784 cv
150.012 291.825 150.106 291.869 150.222 291.934 cv
149.852 293.072 li
f
149.911 296.467 mo
151.241 292.374 li
152.354 292.736 li
151.036 296.791 li
150.827 297.434 150.798 297.944 150.941 298.346 cv
151.084 298.748 151.402 299.029 151.909 299.194 cv
152.503 299.387 153.045 299.358 153.516 299.087 cv
153.987 298.816 154.328 298.353 154.545 297.686 cv
155.791 293.853 li
156.903 294.214 li
154.706 300.977 li
153.593 300.616 li
153.931 299.577 li
153.522 299.909 153.104 300.102 152.694 300.187 cv
152.275 300.256 151.835 300.222 151.365 300.069 cv
150.586 299.816 150.069 299.389 149.83 298.778 cv
149.575 298.176 149.606 297.407 149.911 296.467 cv
154.087 293.122 mo
154.087 293.122 li
f
163.978 296.8 mo
163.64 297.839 li
163.375 297.561 163.106 297.337 162.813 297.146 cv
162.519 296.955 162.226 296.805 161.905 296.701 cv
161.188 296.468 160.543 296.518 159.998 296.847 cv
159.454 297.176 159.047 297.754 158.782 298.57 cv
158.513 299.399 158.502 300.106 158.749 300.692 cv
158.996 301.278 159.493 301.685 160.21 301.918 cv
160.531 302.023 160.852 302.086 161.202 302.104 cv
161.551 302.122 161.905 302.086 162.282 302.017 cv
161.949 303.044 li
161.579 303.088 161.222 303.094 160.88 303.052 cv
160.526 303.005 160.156 302.926 159.785 302.805 cv
158.771 302.476 158.055 301.902 157.671 301.066 cv
157.27 300.238 157.254 299.277 157.608 298.189 cv
157.965 297.088 158.543 296.319 159.354 295.885 cv
160.165 295.452 161.097 295.399 162.161 295.745 cv
162.507 295.857 162.829 296.003 163.126 296.182 cv
163.423 296.36 163.713 296.564 163.978 296.8 cv
f
167.714 295.608 mo
167.091 297.525 li
169.378 298.268 li
169.097 299.133 li
166.81 298.39 li
165.617 302.062 li
165.436 302.618 165.394 303.001 165.494 303.198 cv
165.59 303.407 165.875 303.581 166.345 303.734 cv
167.482 304.103 li
167.181 305.031 li
166.044 304.661 li
165.178 304.38 164.637 304.026 164.42 303.6 cv
164.203 303.175 164.231 302.541 164.504 301.701 cv
165.697 298.029 li
164.881 297.763 li
165.162 296.898 li
165.978 297.163 li
166.601 295.247 li
167.714 295.608 li
f
169.396 302.798 mo
170.726 298.706 li
171.839 299.067 li
170.521 303.122 li
170.312 303.765 170.283 304.275 170.426 304.677 cv
170.569 305.079 170.888 305.36 171.395 305.525 cv
171.988 305.718 172.53 305.689 173.001 305.418 cv
173.472 305.147 173.814 304.684 174.031 304.017 cv
175.276 300.184 li
176.389 300.546 li
174.191 307.309 li
173.079 306.947 li
173.416 305.908 li
173.007 306.24 172.59 306.433 172.179 306.518 cv
171.76 306.587 171.32 306.553 170.85 306.401 cv
170.071 306.148 169.554 305.72 169.315 305.109 cv
169.06 304.507 169.091 303.738 169.396 302.798 cv
173.573 299.453 mo
173.573 299.453 li
f
182.258 303.601 mo
182.158 303.486 182.038 303.393 181.902 303.307 cv
181.762 303.234 181.609 303.158 181.436 303.101 cv
180.805 302.896 180.255 302.95 179.789 303.249 cv
179.31 303.545 178.96 304.074 178.711 304.84 cv
177.554 308.401 li
176.441 308.04 li
178.639 301.277 li
179.752 301.638 li
179.41 302.689 li
179.765 302.353 180.175 302.145 180.61 302.067 cv
181.045 301.99 181.535 302.04 182.079 302.217 cv
182.153 302.241 182.235 302.281 182.334 302.313 cv
182.417 302.354 182.512 302.398 182.627 302.463 cv
182.258 303.601 li
f
188.535 307.923 mo
188.359 308.467 li
183.252 306.808 li
183.053 307.591 183.082 308.256 183.374 308.789 cv
183.654 309.317 184.158 309.699 184.9 309.941 cv
185.32 310.077 185.757 310.164 186.185 310.194 cv
186.612 310.224 187.073 310.195 187.541 310.101 cv
187.199 311.152 li
186.747 311.197 186.295 311.2 185.851 311.138 cv
185.406 311.075 184.957 310.984 184.537 310.848 cv
183.449 310.494 182.696 309.908 182.267 309.085 cv
181.837 308.262 181.805 307.308 182.154 306.233 cv
182.512 305.132 183.094 304.351 183.9 303.888 cv
184.703 303.438 185.627 303.37 186.641 303.699 cv
187.556 303.996 188.177 304.526 188.519 305.28 cv
188.846 306.042 188.861 306.922 188.535 307.923 cv
187.527 307.24 mo
187.712 306.63 187.695 306.092 187.494 305.617 cv
187.277 305.15 186.892 304.819 186.348 304.643 cv
185.73 304.442 185.175 304.467 184.692 304.692 cv
184.208 304.918 183.825 305.34 183.571 305.955 cv
187.527 307.24 li
f
187.39 263.286 mo
187.39 266.786 li
f
187.39 263.286 mo
187.39 266.786 li
@
148.315 271.059 mo
149.539 271.456 li
146.944 279.443 li
151.333 280.869 li
151 281.896 li
145.387 280.072 li
148.315 271.059 li
f
156.407 279.894 mo
155.505 279.6 154.85 279.511 154.44 279.596 cv
154.025 279.694 153.74 279.984 153.579 280.478 cv
153.45 280.874 153.47 281.236 153.657 281.542 cv
153.84 281.862 154.163 282.09 154.608 282.234 cv
155.226 282.435 155.789 282.385 156.304 282.061 cv
156.816 281.749 157.19 281.228 157.427 280.498 cv
157.508 280.251 li
156.407 279.894 li
158.769 280.155 mo
157.516 284.013 li
156.403 283.651 li
156.736 282.625 li
156.34 282.961 155.922 283.153 155.491 283.218 cv
155.06 283.283 154.558 283.229 154.014 283.053 cv
153.321 282.828 152.825 282.461 152.542 281.946 cv
152.258 281.43 152.229 280.846 152.442 280.191 cv
152.687 279.437 153.119 278.948 153.767 278.721 cv
154.399 278.503 155.217 278.55 156.231 278.879 cv
157.789 279.386 li
157.825 279.274 li
157.99 278.767 157.945 278.316 157.704 277.923 cv
157.458 277.542 157.037 277.241 156.431 277.044 cv
156.035 276.916 155.648 276.845 155.245 276.823 cv
154.842 276.802 154.452 276.825 154.062 276.89 cv
154.395 275.864 li
154.839 275.844 155.275 275.849 155.682 275.899 cv
156.089 275.949 156.476 276.02 156.847 276.141 cv
157.824 276.458 158.469 276.955 158.787 277.619 cv
159.104 278.282 159.102 279.129 158.769 280.155 cv
f
166.754 282.504 mo
165.428 286.584 li
164.316 286.222 li
165.629 282.179 li
165.838 281.536 165.855 281.022 165.712 280.621 cv
165.569 280.219 165.25 279.938 164.756 279.777 cv
164.15 279.58 163.616 279.625 163.145 279.896 cv
162.675 280.167 162.333 280.63 162.12 281.285 cv
160.879 285.105 li
159.766 284.744 li
161.963 277.981 li
163.076 278.342 li
162.734 279.393 li
163.123 279.082 163.532 278.873 163.967 278.796 cv
164.39 278.715 164.847 278.74 165.317 278.893 cv
166.083 279.142 166.596 279.582 166.835 280.193 cv
167.074 280.803 167.055 281.576 166.754 282.504 cv
f
173.956 283.012 mo
175.146 279.353 li
176.258 279.714 li
173.205 289.111 li
172.092 288.749 li
172.422 287.735 li
172.054 288.067 171.661 288.267 171.242 288.336 cv
170.824 288.405 170.371 288.367 169.877 288.207 cv
169.061 287.942 168.497 287.403 168.187 286.592 cv
167.877 285.78 167.911 284.834 168.256 283.771 cv
168.602 282.708 169.126 281.935 169.858 281.448 cv
170.586 280.974 171.362 280.857 172.178 281.122 cv
172.673 281.283 173.061 281.518 173.355 281.833 cv
173.65 282.147 173.85 282.54 173.956 283.012 cv
169.406 284.144 mo
169.141 284.96 169.093 285.656 169.274 286.234 cv
169.455 286.812 169.852 287.187 170.446 287.38 cv
171.027 287.569 171.557 287.495 172.056 287.138 cv
172.542 286.776 172.924 286.19 173.189 285.374 cv
173.454 284.558 173.486 283.871 173.305 283.293 cv
173.111 282.71 172.73 282.327 172.149 282.138 cv
171.556 281.945 171.01 282.027 170.523 282.389 cv
170.037 282.75 169.671 283.328 169.406 284.144 cv
f
176.197 285.791 mo
179.449 286.847 li
179.128 287.836 li
175.876 286.78 li
176.197 285.791 li
f
182.934 282.307 mo
184.751 282.897 li
185.058 289.777 li
189.363 284.396 li
191.18 284.986 li
188.252 293.999 li
187.065 293.614 li
189.636 285.701 li
185.303 291.128 li
184.079 290.73 li
183.763 283.793 li
181.192 291.706 li
180.005 291.32 li
182.934 282.307 li
f
194.809 292.371 mo
193.906 292.078 193.252 291.988 192.842 292.074 cv
192.427 292.171 192.142 292.461 191.981 292.956 cv
191.852 293.351 191.871 293.713 192.059 294.02 cv
192.242 294.339 192.564 294.567 193.01 294.712 cv
193.628 294.912 194.191 294.863 194.706 294.538 cv
195.218 294.226 195.592 293.705 195.829 292.976 cv
195.909 292.729 li
194.809 292.371 li
197.171 292.633 mo
195.917 296.49 li
194.805 296.129 li
195.138 295.102 li
194.742 295.438 194.324 295.631 193.893 295.696 cv
193.462 295.761 192.96 295.707 192.416 295.53 cv
191.723 295.305 191.227 294.939 190.944 294.423 cv
190.66 293.907 190.631 293.324 190.844 292.668 cv
191.089 291.914 191.521 291.426 192.169 291.199 cv
192.8 290.98 193.619 291.028 194.633 291.357 cv
196.191 291.863 li
196.227 291.752 li
196.391 291.245 196.347 290.793 196.105 290.4 cv
195.86 290.02 195.438 289.719 194.833 289.522 cv
194.437 289.393 194.05 289.322 193.647 289.301 cv
193.244 289.279 192.853 289.303 192.463 289.367 cv
192.797 288.341 li
193.241 288.321 193.676 288.326 194.084 288.376 cv
194.491 288.427 194.878 288.498 195.249 288.618 cv
196.226 288.936 196.871 289.432 197.188 290.096 cv
197.506 290.76 197.504 291.607 197.171 292.633 cv
f
203.984 292.782 mo
203.884 292.668 203.764 292.574 203.628 292.489 cv
203.488 292.416 203.335 292.339 203.162 292.283 cv
202.532 292.078 201.981 292.132 201.515 292.431 cv
201.036 292.727 200.686 293.256 200.437 294.022 cv
199.28 297.583 li
198.168 297.221 li
200.365 290.458 li
201.478 290.82 li
201.136 291.871 li
201.491 291.535 201.901 291.326 202.336 291.249 cv
202.771 291.172 203.261 291.222 203.805 291.398 cv
203.879 291.422 203.962 291.463 204.061 291.495 cv
204.143 291.536 204.238 291.58 204.354 291.645 cv
203.984 292.782 li
f
206.302 289.476 mo
207.415 289.838 li
205.611 295.389 li
209.873 293.548 li
211.294 294.01 li
206.681 296.01 li
209.245 300.821 li
207.799 300.351 li
205.434 295.933 li
204.362 299.234 li
203.249 298.872 li
206.302 289.476 li
f
212.642 294.447 mo
213.755 294.809 li
211.557 301.572 li
210.445 301.21 li
212.642 294.447 li
213.498 291.814 mo
214.61 292.176 li
214.152 293.585 li
213.04 293.223 li
213.498 291.814 li
f
220.833 300.075 mo
219.507 304.155 li
218.395 303.793 li
219.708 299.751 li
219.917 299.108 219.934 298.594 219.791 298.192 cv
219.648 297.79 219.329 297.509 218.835 297.348 cv
218.229 297.151 217.695 297.196 217.224 297.467 cv
216.753 297.738 216.412 298.201 216.199 298.856 cv
214.957 302.677 li
213.845 302.315 li
216.042 295.552 li
217.155 295.914 li
216.813 296.965 li
217.202 296.653 217.611 296.445 218.046 296.367 cv
218.469 296.286 218.926 296.311 219.395 296.464 cv
220.162 296.713 220.675 297.153 220.914 297.764 cv
221.153 298.375 221.134 299.148 220.833 300.075 cv
f
227.296 302.858 mo
227.553 302.067 227.585 301.38 227.408 300.831 cv
227.219 300.277 226.822 299.902 226.228 299.709 cv
225.635 299.516 225.092 299.586 224.614 299.923 cv
224.136 300.26 223.77 300.838 223.513 301.629 cv
223.252 302.433 223.212 303.103 223.401 303.657 cv
223.59 304.21 223.988 304.586 224.581 304.778 cv
225.174 304.971 225.717 304.901 226.195 304.565 cv
226.661 304.224 227.035 303.662 227.296 302.858 cv
227.557 305.841 mo
227.188 306.979 226.651 307.747 225.959 308.151 cv
225.259 308.539 224.388 308.57 223.337 308.229 cv
222.941 308.1 222.595 307.947 222.265 307.785 cv
221.939 307.61 221.62 307.411 221.339 307.183 cv
221.689 306.108 li
221.954 306.385 222.235 306.613 222.528 306.804 cv
222.822 306.995 223.127 307.149 223.461 307.258 cv
224.178 307.491 224.786 307.47 225.278 307.219 cv
225.761 306.952 226.131 306.444 226.38 305.677 cv
226.557 305.133 li
226.194 305.453 225.8 305.653 225.378 305.734 cv
224.955 305.816 224.502 305.778 224.008 305.617 cv
223.167 305.344 222.6 304.818 222.298 304.023 cv
221.996 303.228 222.022 302.307 222.363 301.256 cv
222.7 300.217 223.221 299.457 223.933 298.991 cv
224.645 298.525 225.417 298.42 226.257 298.694 cv
226.752 298.854 227.14 299.09 227.434 299.404 cv
227.729 299.718 227.929 300.112 228.035 300.584 cv
228.369 299.557 li
229.482 299.919 li
227.557 305.841 li
f
235.1 263.286 mo
235.1 266.786 li
f
235.1 263.286 mo
235.1 266.786 li
@
186.284 272.458 mo
185.183 275.845 li
186.716 276.344 li
187.285 276.528 187.762 276.533 188.167 276.337 cv
188.573 276.14 188.87 275.772 189.047 275.228 cv
189.224 274.684 189.196 274.224 188.983 273.827 cv
188.77 273.43 188.386 273.141 187.817 272.956 cv
186.284 272.458 li
185.385 271.059 mo
188.142 271.954 li
189.144 272.28 189.834 272.764 190.205 273.39 cv
190.575 274.016 190.618 274.768 190.333 275.646 cv
190.044 276.536 189.563 277.132 188.899 277.408 cv
188.231 277.697 187.392 277.67 186.391 277.345 cv
184.858 276.847 li
183.681 280.469 li
182.457 280.072 li
185.385 271.059 li
f
195.642 278.027 mo
195.542 277.913 195.422 277.819 195.286 277.734 cv
195.146 277.661 194.993 277.584 194.82 277.528 cv
194.189 277.323 193.639 277.376 193.173 277.676 cv
192.694 277.971 192.344 278.5 192.095 279.267 cv
190.938 282.828 li
189.826 282.466 li
192.023 275.703 li
193.136 276.065 li
192.794 277.116 li
193.149 276.78 193.559 276.571 193.994 276.494 cv
194.429 276.417 194.919 276.466 195.463 276.643 cv
195.537 276.667 195.62 276.708 195.718 276.74 cv
195.801 276.78 195.896 276.825 196.011 276.89 cv
195.642 278.027 li
f
199.509 278.997 mo
198.916 278.804 198.37 278.886 197.871 279.244 cv
197.372 279.601 196.994 280.175 196.733 280.979 cv
196.468 281.795 196.424 282.478 196.617 283.06 cv
196.811 283.642 197.208 284.017 197.814 284.214 cv
198.408 284.407 198.95 284.337 199.449 283.98 cv
199.947 283.622 200.325 283.048 200.591 282.232 cv
200.848 281.441 200.883 280.742 200.69 280.159 cv
200.496 279.577 200.103 279.19 199.509 278.997 cv
199.815 278.057 mo
200.779 278.37 201.429 278.937 201.784 279.736 cv
202.124 280.543 202.127 281.501 201.765 282.614 cv
201.404 283.727 200.838 284.5 200.093 284.941 cv
199.332 285.391 198.477 285.455 197.513 285.142 cv
196.536 284.824 195.87 284.266 195.531 283.459 cv
195.188 282.664 195.197 281.71 195.559 280.597 cv
195.92 279.484 196.473 278.707 197.222 278.254 cv
197.967 277.812 198.838 277.74 199.815 278.057 cv
f
208.466 284.791 mo
208.731 283.975 208.763 283.288 208.582 282.71 cv
208.389 282.128 208.007 281.744 207.426 281.555 cv
206.833 281.363 206.299 281.449 205.813 281.81 cv
205.314 282.168 204.948 282.746 204.683 283.562 cv
204.418 284.378 204.37 285.073 204.563 285.655 cv
204.744 286.234 205.13 286.605 205.723 286.798 cv
206.304 286.986 206.834 286.913 207.333 286.555 cv
207.819 286.194 208.201 285.607 208.466 284.791 cv
205.45 281.2 mo
205.801 280.877 206.195 280.677 206.617 280.595 cv
207.04 280.514 207.505 280.556 208 280.716 cv
208.816 280.982 209.375 281.532 209.685 282.344 cv
209.979 283.164 209.962 284.101 209.616 285.165 cv
209.271 286.228 208.73 287.009 208.014 287.487 cv
207.286 287.962 206.514 288.066 205.698 287.801 cv
205.203 287.64 204.803 287.401 204.504 287.099 cv
204.206 286.797 204.006 286.404 203.916 285.923 cv
203.586 286.937 li
202.474 286.576 li
205.527 277.179 li
206.639 277.541 li
205.45 281.2 li
f
213.415 279.742 mo
214.527 280.104 li
211.474 289.5 li
210.362 289.139 li
213.415 279.742 li
f
220.774 288.476 mo
220.597 289.02 li
215.491 287.361 li
215.291 288.143 215.321 288.809 215.613 289.341 cv
215.892 289.869 216.397 290.252 217.139 290.493 cv
217.559 290.63 217.995 290.717 218.423 290.746 cv
218.851 290.776 219.311 290.748 219.779 290.654 cv
219.438 291.705 li
218.986 291.749 218.534 291.753 218.089 291.69 cv
217.645 291.628 217.196 291.537 216.776 291.4 cv
215.688 291.047 214.935 290.461 214.505 289.637 cv
214.075 288.814 214.044 287.861 214.393 286.785 cv
214.751 285.685 215.333 284.903 216.139 284.441 cv
216.941 283.991 217.866 283.922 218.88 284.252 cv
219.795 284.549 220.415 285.079 220.758 285.832 cv
221.084 286.595 221.099 287.474 220.774 288.476 cv
219.766 287.793 mo
219.95 287.183 219.934 286.644 219.733 286.169 cv
219.515 285.702 219.131 285.372 218.587 285.195 cv
217.968 284.994 217.414 285.019 216.93 285.245 cv
216.447 285.471 216.064 285.893 215.809 286.507 cv
219.766 287.793 li
f
228.445 288.973 mo
228.878 288.566 229.328 288.316 229.792 288.194 cv
230.251 288.083 230.749 288.108 231.28 288.281 cv
231.973 288.506 232.437 288.93 232.659 289.549 cv
232.882 290.168 232.851 290.937 232.557 291.84 cv
231.232 295.92 li
230.119 295.558 li
231.432 291.515 li
231.641 290.872 231.674 290.35 231.556 289.956 cv
231.422 289.571 231.128 289.298 230.658 289.145 cv
230.077 288.956 229.555 289.005 229.097 289.28 cv
228.639 289.555 228.309 290.022 228.096 290.677 cv
226.855 294.498 li
225.742 294.136 li
227.056 290.093 li
227.265 289.45 227.298 288.928 227.18 288.534 cv
227.045 288.149 226.739 287.871 226.269 287.719 cv
225.7 287.534 225.178 287.583 224.72 287.858 cv
224.262 288.133 223.932 288.6 223.719 289.255 cv
222.478 293.075 li
221.365 292.714 li
223.563 285.951 li
224.675 286.313 li
224.334 287.363 li
224.714 287.036 225.123 286.827 225.546 286.746 cv
225.957 286.66 226.409 286.698 226.904 286.859 cv
227.398 287.02 227.766 287.276 228.032 287.635 cv
228.298 287.995 228.425 288.446 228.445 288.973 cv
f
242.948 290.527 mo
242.531 291.813 li
242.231 291.306 241.89 290.881 241.485 290.53 cv
241.075 290.192 240.625 289.937 240.106 289.768 cv
239.067 289.43 238.172 289.495 237.423 289.949 cv
236.674 290.402 236.109 291.217 235.723 292.404 cv
235.337 293.59 235.312 294.594 235.651 295.401 cv
235.99 296.208 236.681 296.775 237.72 297.112 cv
238.239 297.281 238.749 297.351 239.283 297.306 cv
239.813 297.273 240.339 297.129 240.883 296.882 cv
240.47 298.156 li
239.941 298.312 239.415 298.374 238.901 298.357 cv
238.387 298.34 237.856 298.25 237.324 298.077 cv
235.964 297.635 235.021 296.878 234.499 295.792 cv
233.977 294.707 233.963 293.445 234.437 291.986 cv
234.907 290.539 235.66 289.526 236.724 288.943 cv
237.785 288.371 238.997 288.3 240.357 288.742 cv
240.901 288.919 241.384 289.158 241.81 289.447 cv
242.231 289.748 242.62 290.106 242.948 290.527 cv
f
246.64 294.31 mo
246.047 294.118 245.5 294.2 245.002 294.557 cv
244.503 294.914 244.125 295.489 243.864 296.292 cv
243.598 297.108 243.554 297.791 243.748 298.374 cv
243.941 298.956 244.339 299.331 244.945 299.528 cv
245.538 299.721 246.08 299.651 246.579 299.293 cv
247.078 298.936 247.456 298.362 247.721 297.546 cv
247.978 296.755 248.014 296.055 247.82 295.473 cv
247.627 294.891 247.233 294.503 246.64 294.31 cv
246.945 293.371 mo
247.91 293.684 248.559 294.251 248.915 295.049 cv
249.254 295.857 249.257 296.815 248.896 297.927 cv
248.534 299.04 247.969 299.813 247.224 300.255 cv
246.462 300.704 245.608 300.768 244.643 300.455 cv
243.667 300.138 243.001 299.58 242.661 298.772 cv
242.318 297.977 242.328 297.023 242.689 295.911 cv
243.051 294.798 243.604 294.021 244.353 293.567 cv
245.098 293.126 245.969 293.053 246.945 293.371 cv
f
256.684 298.148 mo
257.116 297.742 257.567 297.492 258.03 297.369 cv
258.49 297.258 258.988 297.284 259.519 297.456 cv
260.212 297.681 260.675 298.105 260.898 298.724 cv
261.12 299.343 261.089 300.112 260.796 301.015 cv
259.47 305.095 li
258.358 304.733 li
259.671 300.69 li
259.88 300.048 259.913 299.525 259.795 299.131 cv
259.661 298.746 259.367 298.473 258.897 298.32 cv
258.316 298.131 257.794 298.181 257.336 298.455 cv
256.877 298.73 256.548 299.197 256.335 299.853 cv
255.094 303.673 li
253.981 303.311 li
255.294 299.268 li
255.503 298.625 255.536 298.103 255.418 297.709 cv
255.284 297.324 254.977 297.047 254.508 296.894 cv
253.939 296.709 253.417 296.758 252.959 297.033 cv
252.5 297.308 252.171 297.775 251.958 298.43 cv
250.717 302.251 li
249.604 301.889 li
251.801 295.126 li
252.914 295.488 li
252.573 296.539 li
252.953 296.211 253.362 296.002 253.785 295.921 cv
254.195 295.836 254.648 295.873 255.142 296.034 cv
255.637 296.195 256.005 296.451 256.271 296.811 cv
256.536 297.171 256.663 297.622 256.684 298.148 cv
f
263.088 305.15 mo
261.927 308.723 li
260.815 308.361 li
263.844 299.039 li
264.956 299.401 li
264.623 300.427 li
264.974 300.103 265.367 299.903 265.79 299.822 cv
266.213 299.741 266.678 299.782 267.172 299.943 cv
267.988 300.208 268.548 300.759 268.858 301.57 cv
269.152 302.39 269.134 303.328 268.789 304.391 cv
268.443 305.454 267.903 306.236 267.187 306.714 cv
266.459 307.188 265.686 307.292 264.87 307.027 cv
264.376 306.867 263.975 306.627 263.677 306.325 cv
263.379 306.023 263.178 305.63 263.088 305.15 cv
267.639 304.018 mo
267.904 303.202 267.936 302.515 267.755 301.936 cv
267.561 301.354 267.18 300.971 266.599 300.782 cv
266.006 300.589 265.472 300.675 264.985 301.037 cv
264.486 301.394 264.121 301.972 263.856 302.788 cv
263.591 303.604 263.542 304.299 263.736 304.882 cv
263.917 305.46 264.302 305.831 264.896 306.024 cv
265.477 306.213 266.007 306.139 266.505 305.782 cv
266.992 305.42 267.374 304.834 267.639 304.018 cv
f
272.587 298.969 mo
273.7 299.33 li
270.647 308.727 li
269.534 308.365 li
272.587 298.969 li
f
279.947 307.702 mo
279.77 308.246 li
274.664 306.587 li
274.464 307.37 274.494 308.035 274.786 308.568 cv
275.065 309.096 275.57 309.478 276.311 309.72 cv
276.732 309.856 277.168 309.943 277.596 309.973 cv
278.024 310.003 278.484 309.974 278.952 309.88 cv
278.611 310.931 li
278.159 310.976 277.706 310.979 277.262 310.917 cv
276.817 310.854 276.369 310.763 275.948 310.627 cv
274.86 310.273 274.108 309.687 273.678 308.864 cv
273.248 308.041 273.216 307.087 273.566 306.012 cv
273.923 304.911 274.505 304.13 275.312 303.667 cv
276.114 303.217 277.039 303.149 278.052 303.478 cv
278.967 303.775 279.588 304.305 279.931 305.059 cv
280.257 305.821 280.272 306.701 279.947 307.702 cv
278.938 307.019 mo
279.123 306.409 279.107 305.871 278.906 305.396 cv
278.688 304.929 278.303 304.598 277.759 304.422 cv
277.141 304.221 276.586 304.246 276.103 304.471 cv
275.62 304.697 275.236 305.119 274.982 305.734 cv
278.938 307.019 li
f
288.398 307.017 mo
284.882 309.511 li
286.324 313.82 li
285.014 313.395 li
283.912 310.098 li
281.082 312.117 li
279.772 311.691 li
283.542 309.007 li
282.191 305.001 li
283.502 305.426 li
284.511 308.42 li
287.088 306.591 li
288.398 307.017 li
f
282.81 263.286 mo
282.81 266.786 li
f
282.81 263.286 mo
282.81 266.786 li
@
250.565 273.111 mo
250.179 274.298 li
249.782 273.923 249.401 273.621 249.03 273.377 cv
248.641 273.142 248.266 272.952 247.895 272.831 cv
247.227 272.614 246.664 272.581 246.225 272.712 cv
245.782 272.855 245.488 273.17 245.336 273.64 cv
245.207 274.035 245.218 274.381 245.401 274.659 cv
245.568 274.945 245.973 275.255 246.6 275.595 cv
247.294 275.985 li
248.14 276.451 248.707 276.977 249 277.55 cv
249.288 278.136 249.321 278.789 249.084 279.519 cv
248.799 280.397 248.29 280.956 247.564 281.212 cv
246.826 281.464 245.9 281.41 244.775 281.044 cv
244.342 280.903 243.901 280.705 243.447 280.462 cv
242.993 280.219 242.543 279.922 242.1 279.56 cv
242.51 278.299 li
242.912 278.744 243.326 279.11 243.751 279.399 cv
244.173 279.7 244.623 279.915 245.093 280.067 cv
245.785 280.292 246.361 280.329 246.832 280.181 cv
247.292 280.03 247.614 279.711 247.783 279.192 cv
247.927 278.747 247.904 278.356 247.712 278.021 cv
247.521 277.685 247.136 277.355 246.558 277.03 cv
245.864 276.641 li
245.005 276.171 244.443 275.673 244.163 275.145 cv
243.88 274.629 243.855 274.033 244.08 273.341 cv
244.337 272.55 244.814 272.008 245.531 271.735 cv
246.236 271.458 247.091 271.476 248.08 271.798 cv
248.501 271.934 248.909 272.108 249.33 272.327 cv
249.739 272.542 250.143 272.81 250.565 273.111 cv
f
254.052 274.285 mo
253.429 276.201 li
255.717 276.944 li
255.435 277.81 li
253.148 277.067 li
251.955 280.739 li
251.774 281.295 251.732 281.678 251.832 281.874 cv
251.928 282.083 252.213 282.258 252.683 282.41 cv
253.82 282.78 li
253.519 283.707 li
252.382 283.338 li
251.516 283.057 250.975 282.703 250.758 282.277 cv
250.541 281.851 250.569 281.218 250.842 280.377 cv
252.035 276.705 li
251.219 276.44 li
251.5 275.574 li
252.316 275.84 li
252.939 273.923 li
254.052 274.285 li
f
260.757 279.73 mo
260.658 279.616 260.538 279.522 260.401 279.437 cv
260.261 279.364 260.108 279.287 259.935 279.231 cv
259.305 279.026 258.754 279.08 258.288 279.379 cv
257.809 279.675 257.46 280.204 257.211 280.97 cv
256.054 284.531 li
254.941 284.169 li
257.138 277.406 li
258.251 277.768 li
257.91 278.819 li
258.265 278.483 258.674 278.274 259.109 278.197 cv
259.545 278.12 260.034 278.17 260.578 278.346 cv
260.652 278.37 260.735 278.411 260.834 278.443 cv
260.916 278.484 261.011 278.528 261.127 278.593 cv
260.757 279.73 li
f
260.816 283.126 mo
262.146 279.033 li
263.258 279.395 li
261.941 283.45 li
261.732 284.093 261.703 284.603 261.846 285.005 cv
261.988 285.407 262.307 285.688 262.814 285.853 cv
263.407 286.045 263.95 286.017 264.421 285.746 cv
264.891 285.475 265.233 285.012 265.45 284.344 cv
266.695 280.512 li
267.808 280.873 li
265.611 287.636 li
264.498 287.275 li
264.835 286.236 li
264.427 286.568 264.009 286.76 263.599 286.846 cv
263.18 286.915 262.74 286.881 262.27 286.728 cv
261.491 286.475 260.974 286.047 260.735 285.437 cv
260.479 284.834 260.511 284.065 260.816 283.126 cv
264.992 279.78 mo
264.992 279.78 li
f
274.882 283.459 mo
274.545 284.497 li
274.28 284.22 274.011 283.996 273.717 283.805 cv
273.424 283.614 273.131 283.464 272.81 283.359 cv
272.093 283.126 271.448 283.177 270.903 283.505 cv
270.359 283.834 269.952 284.413 269.687 285.229 cv
269.418 286.057 269.407 286.765 269.654 287.351 cv
269.901 287.937 270.397 288.344 271.114 288.577 cv
271.436 288.681 271.757 288.745 272.107 288.763 cv
272.456 288.78 272.809 288.745 273.187 288.676 cv
272.854 289.702 li
272.484 289.746 272.126 289.753 271.785 289.711 cv
271.431 289.664 271.06 289.585 270.689 289.464 cv
269.676 289.135 268.96 288.56 268.576 287.725 cv
268.175 286.897 268.159 285.935 268.513 284.847 cv
268.87 283.747 269.448 282.978 270.259 282.544 cv
271.069 282.111 272.002 282.058 273.066 282.404 cv
273.412 282.516 273.733 282.662 274.031 282.84 cv
274.328 283.019 274.618 283.222 274.882 283.459 cv
f
278.619 282.267 mo
277.996 284.183 li
280.283 284.927 li
280.002 285.792 li
277.715 285.049 li
276.522 288.721 li
276.341 289.277 276.299 289.66 276.399 289.856 cv
276.495 290.065 276.78 290.24 277.25 290.393 cv
278.387 290.762 li
278.086 291.69 li
276.948 291.32 li
276.083 291.039 275.542 290.685 275.325 290.259 cv
275.108 289.833 275.136 289.2 275.409 288.359 cv
276.602 284.687 li
275.786 284.422 li
276.067 283.557 li
276.883 283.822 li
277.506 281.905 li
278.619 282.267 li
f
280.301 289.457 mo
281.631 285.364 li
282.744 285.726 li
281.426 289.781 li
281.217 290.424 281.188 290.934 281.331 291.336 cv
281.474 291.738 281.792 292.019 282.299 292.184 cv
282.893 292.377 283.435 292.348 283.906 292.077 cv
284.377 291.806 284.718 291.343 284.935 290.676 cv
286.181 286.843 li
287.293 287.204 li
285.096 293.967 li
283.983 293.606 li
284.321 292.567 li
283.912 292.899 283.494 293.091 283.084 293.177 cv
282.665 293.246 282.225 293.212 281.755 293.059 cv
280.976 292.806 280.459 292.379 280.22 291.768 cv
279.965 291.165 279.996 290.396 280.301 289.457 cv
284.477 286.112 mo
284.477 286.112 li
f
293.163 290.26 mo
293.063 290.145 292.943 290.052 292.807 289.966 cv
292.667 289.893 292.514 289.816 292.341 289.76 cv
291.71 289.555 291.16 289.609 290.693 289.908 cv
290.215 290.204 289.865 290.733 289.616 291.499 cv
288.459 295.06 li
287.346 294.698 li
289.544 287.935 li
290.656 288.297 li
290.315 289.348 li
290.67 289.012 291.08 288.804 291.515 288.726 cv
291.95 288.649 292.44 288.699 292.984 288.875 cv
293.058 288.9 293.14 288.94 293.239 288.972 cv
293.322 289.013 293.417 289.057 293.532 289.122 cv
293.163 290.26 li
f
299.44 294.582 mo
299.263 295.126 li
294.157 293.467 li
293.958 294.249 293.987 294.915 294.279 295.447 cv
294.559 295.976 295.063 296.358 295.805 296.599 cv
296.225 296.736 296.662 296.823 297.089 296.853 cv
297.517 296.882 297.977 296.854 298.445 296.76 cv
298.104 297.811 li
297.652 297.856 297.2 297.859 296.755 297.797 cv
296.311 297.734 295.862 297.643 295.442 297.507 cv
294.354 297.153 293.601 296.567 293.171 295.744 cv
292.742 294.921 292.71 293.967 293.059 292.891 cv
293.417 291.791 293.999 291.01 294.805 290.547 cv
295.607 290.097 296.532 290.028 297.546 290.358 cv
298.461 290.655 299.081 291.185 299.424 291.939 cv
299.751 292.701 299.766 293.581 299.44 294.582 cv
298.432 293.899 mo
298.616 293.289 298.6 292.751 298.399 292.275 cv
298.182 291.808 297.797 291.478 297.253 291.301 cv
296.635 291.101 296.08 291.125 295.596 291.351 cv
295.113 291.577 294.73 291.999 294.475 292.613 cv
298.432 293.899 li
f
303.047 289.835 mo
304.271 290.233 li
301.342 299.246 li
300.118 298.848 li
303.047 289.835 li
f
310.667 297.765 mo
309.341 301.845 li
308.229 301.484 li
309.542 297.441 li
309.751 296.798 309.768 296.284 309.625 295.882 cv
309.482 295.48 309.163 295.199 308.669 295.038 cv
308.063 294.841 307.529 294.886 307.058 295.157 cv
306.588 295.428 306.246 295.891 306.033 296.546 cv
304.791 300.367 li
303.679 300.005 li
305.876 293.242 li
306.989 293.604 li
306.647 294.655 li
307.036 294.343 307.445 294.135 307.88 294.057 cv
308.303 293.976 308.76 294.001 309.23 294.154 cv
309.996 294.403 310.509 294.843 310.748 295.454 cv
310.987 296.065 310.968 296.838 310.667 297.765 cv
f
318.032 294.281 mo
317.731 295.208 li
316.668 294.862 li
316.272 294.734 315.96 294.728 315.759 294.84 cv
315.546 294.949 315.38 295.209 315.243 295.63 cv
315.05 296.223 li
316.88 296.818 li
316.599 297.683 li
314.769 297.088 li
312.853 302.986 li
311.74 302.624 li
313.656 296.727 li
312.593 296.381 li
312.874 295.516 li
313.937 295.861 li
314.09 295.392 li
314.331 294.65 314.685 294.15 315.144 293.916 cv
315.602 293.682 316.215 293.69 316.981 293.939 cv
318.032 294.281 li
f
320.472 298.846 mo
319.879 298.653 319.332 298.735 318.834 299.093 cv
318.335 299.45 317.957 300.024 317.696 300.828 cv
317.431 301.644 317.386 302.327 317.58 302.909 cv
317.773 303.491 318.171 303.867 318.777 304.063 cv
319.37 304.256 319.912 304.186 320.411 303.829 cv
320.91 303.472 321.288 302.897 321.553 302.081 cv
321.81 301.29 321.846 300.591 321.652 300.009 cv
321.459 299.426 321.065 299.039 320.472 298.846 cv
320.777 297.906 mo
321.742 298.22 322.391 298.786 322.747 299.585 cv
323.086 300.392 323.089 301.35 322.728 302.463 cv
322.366 303.576 321.801 304.349 321.056 304.79 cv
320.294 305.24 319.44 305.304 318.475 304.991 cv
317.499 304.673 316.833 304.115 316.493 303.308 cv
316.15 302.513 316.16 301.559 316.521 300.446 cv
316.883 299.334 317.436 298.556 318.185 298.103 cv
318.93 297.661 319.801 297.589 320.777 297.906 cv
f
330.52 263.286 mo
330.52 266.786 li
f
330.52 263.286 mo
330.52 266.786 li
@
300.772 273.944 mo
300.354 275.23 li
300.055 274.723 299.714 274.298 299.309 273.947 cv
298.899 273.609 298.449 273.354 297.93 273.185 cv
296.891 272.847 295.996 272.912 295.247 273.366 cv
294.498 273.819 293.933 274.634 293.547 275.82 cv
293.161 277.007 293.136 278.011 293.475 278.818 cv
293.814 279.625 294.505 280.191 295.544 280.529 cv
296.063 280.698 296.573 280.768 297.107 280.723 cv
297.637 280.69 298.163 280.546 298.707 280.299 cv
298.294 281.573 li
297.764 281.729 297.239 281.79 296.725 281.774 cv
296.211 281.757 295.68 281.667 295.148 281.494 cv
293.788 281.052 292.845 280.294 292.323 279.209 cv
291.801 278.124 291.787 276.862 292.261 275.403 cv
292.731 273.956 293.484 272.943 294.548 272.36 cv
295.609 271.788 296.821 271.717 298.181 272.159 cv
298.725 272.336 299.208 272.575 299.633 272.864 cv
300.055 273.165 300.444 273.523 300.772 273.944 cv
f
304.464 277.727 mo
303.87 277.534 303.324 277.617 302.825 277.974 cv
302.327 278.331 301.949 278.906 301.688 279.709 cv
301.422 280.525 301.378 281.208 301.572 281.79 cv
301.765 282.373 302.163 282.748 302.769 282.945 cv
303.362 283.138 303.904 283.068 304.403 282.71 cv
304.902 282.353 305.28 281.779 305.545 280.963 cv
305.802 280.171 305.838 279.472 305.644 278.89 cv
305.451 278.308 305.057 277.92 304.464 277.727 cv
304.769 276.788 mo
305.734 277.101 306.383 277.668 306.739 278.466 cv
307.078 279.274 307.081 280.232 306.72 281.344 cv
306.358 282.457 305.792 283.23 305.048 283.672 cv
304.286 284.121 303.432 284.185 302.467 283.872 cv
301.491 283.555 300.824 282.997 300.485 282.189 cv
300.142 281.394 300.151 280.44 300.513 279.328 cv
300.875 278.215 301.428 277.438 302.177 276.984 cv
302.921 276.543 303.792 276.47 304.769 276.788 cv
f
314.508 281.565 mo
314.94 281.159 315.391 280.909 315.854 280.786 cv
316.314 280.675 316.811 280.7 317.343 280.873 cv
318.036 281.098 318.499 281.522 318.722 282.141 cv
318.944 282.76 318.913 283.529 318.62 284.432 cv
317.294 288.512 li
316.182 288.15 li
317.495 284.107 li
317.704 283.465 317.737 282.942 317.619 282.548 cv
317.484 282.163 317.191 281.89 316.721 281.737 cv
316.14 281.548 315.618 281.597 315.16 281.872 cv
314.701 282.147 314.372 282.614 314.159 283.269 cv
312.917 287.09 li
311.805 286.728 li
313.118 282.685 li
313.327 282.042 313.36 281.52 313.242 281.126 cv
313.108 280.741 312.801 280.464 312.332 280.311 cv
311.763 280.126 311.241 280.175 310.783 280.45 cv
310.324 280.725 309.995 281.192 309.782 281.847 cv
308.541 285.668 li
307.428 285.306 li
309.625 278.543 li
310.738 278.905 li
310.397 279.956 li
310.777 279.628 311.186 279.419 311.609 279.338 cv
312.019 279.253 312.472 279.29 312.966 279.451 cv
313.461 279.612 313.829 279.868 314.095 280.228 cv
314.36 280.587 314.487 281.039 314.508 281.565 cv
f
325.463 287.434 mo
325.728 286.618 325.76 285.932 325.579 285.353 cv
325.385 284.771 325.004 284.388 324.423 284.199 cv
323.83 284.006 323.296 284.092 322.809 284.454 cv
322.31 284.811 321.945 285.389 321.68 286.205 cv
321.415 287.021 321.366 287.716 321.56 288.299 cv
321.741 288.877 322.126 289.248 322.72 289.441 cv
323.301 289.63 323.831 289.556 324.329 289.199 cv
324.816 288.837 325.198 288.25 325.463 287.434 cv
322.447 283.844 mo
322.798 283.52 323.191 283.32 323.614 283.239 cv
324.037 283.157 324.502 283.199 324.996 283.36 cv
325.812 283.625 326.371 284.176 326.682 284.987 cv
326.976 285.807 326.958 286.745 326.613 287.808 cv
326.267 288.871 325.727 289.652 325.011 290.131 cv
324.283 290.605 323.51 290.709 322.694 290.444 cv
322.2 290.284 321.799 290.044 321.501 289.742 cv
321.203 289.44 321.002 289.047 320.912 288.567 cv
320.583 289.581 li
319.47 289.219 li
322.523 279.823 li
323.636 280.184 li
322.447 283.844 li
f
329.556 285.019 mo
330.668 285.38 li
328.471 292.143 li
327.358 291.782 li
329.556 285.019 li
330.411 282.385 mo
331.524 282.747 li
331.066 284.156 li
329.953 283.795 li
330.411 282.385 li
f
337.747 290.647 mo
336.421 294.727 li
335.308 294.365 li
336.622 290.322 li
336.831 289.679 336.847 289.165 336.704 288.763 cv
336.562 288.362 336.243 288.08 335.748 287.92 cv
335.143 287.723 334.608 287.768 334.138 288.039 cv
333.667 288.31 333.325 288.773 333.112 289.428 cv
331.871 293.248 li
330.758 292.887 li
332.956 286.124 li
334.068 286.485 li
333.727 287.536 li
334.115 287.225 334.525 287.016 334.96 286.939 cv
335.383 286.858 335.839 286.883 336.309 287.036 cv
337.076 287.285 337.589 287.725 337.828 288.335 cv
338.067 288.946 338.048 289.719 337.747 290.647 cv
f
342.817 293.046 mo
341.915 292.753 341.26 292.663 340.85 292.748 cv
340.435 292.846 340.15 293.136 339.989 293.631 cv
339.861 294.026 339.88 294.388 340.067 294.695 cv
340.25 295.014 340.573 295.242 341.018 295.386 cv
341.636 295.587 342.199 295.538 342.715 295.213 cv
343.226 294.901 343.6 294.38 343.837 293.651 cv
343.918 293.403 li
342.817 293.046 li
345.179 293.308 mo
343.926 297.165 li
342.813 296.803 li
343.146 295.777 li
342.75 296.113 342.332 296.306 341.901 296.371 cv
341.47 296.435 340.968 296.382 340.424 296.205 cv
339.732 295.98 339.235 295.614 338.952 295.098 cv
338.669 294.582 338.639 293.999 338.852 293.343 cv
339.097 292.589 339.529 292.101 340.177 291.874 cv
340.809 291.655 341.627 291.702 342.641 292.032 cv
344.199 292.538 li
344.235 292.427 li
344.4 291.92 344.355 291.468 344.114 291.075 cv
343.868 290.695 343.447 290.394 342.841 290.197 cv
342.445 290.068 342.058 289.997 341.655 289.976 cv
341.252 289.954 340.862 289.977 340.472 290.042 cv
340.805 289.016 li
341.249 288.996 341.685 289.001 342.092 289.051 cv
342.5 289.102 342.887 289.173 343.257 289.293 cv
344.234 289.611 344.879 290.107 345.197 290.771 cv
345.514 291.434 345.512 292.281 345.179 293.308 cv
f
350.133 289.586 mo
349.511 291.503 li
351.798 292.246 li
351.517 293.111 li
349.23 292.368 li
348.036 296.04 li
347.856 296.597 347.813 296.979 347.914 297.176 cv
348.01 297.385 348.295 297.559 348.765 297.712 cv
349.902 298.082 li
349.601 299.009 li
348.463 298.639 li
347.598 298.358 347.057 298.005 346.84 297.579 cv
346.623 297.153 346.651 296.519 346.924 295.679 cv
348.117 292.007 li
347.301 291.742 li
347.582 290.876 li
348.398 291.141 li
349.021 289.225 li
350.133 289.586 li
f
353.257 292.72 mo
354.37 293.082 li
352.172 299.845 li
351.06 299.483 li
353.257 292.72 li
354.113 290.087 mo
355.225 290.448 li
354.767 291.858 li
353.655 291.496 li
354.113 290.087 li
f
359.062 295.467 mo
358.469 295.275 357.923 295.357 357.424 295.714 cv
356.925 296.071 356.547 296.646 356.286 297.449 cv
356.021 298.265 355.977 298.948 356.17 299.531 cv
356.364 300.113 356.761 300.488 357.367 300.685 cv
357.96 300.878 358.503 300.808 359.001 300.45 cv
359.5 300.093 359.878 299.519 360.143 298.703 cv
360.4 297.912 360.436 297.212 360.243 296.63 cv
360.049 296.048 359.656 295.66 359.062 295.467 cv
359.367 294.528 mo
360.332 294.841 360.982 295.408 361.337 296.207 cv
361.676 297.014 361.679 297.972 361.318 299.084 cv
360.956 300.197 360.391 300.97 359.646 301.412 cv
358.885 301.861 358.03 301.925 357.066 301.612 cv
356.089 301.295 355.423 300.737 355.084 299.929 cv
354.74 299.134 354.75 298.181 355.111 297.068 cv
355.473 295.955 356.026 295.178 356.775 294.724 cv
357.52 294.283 358.391 294.21 359.367 294.528 cv
f
369.014 300.806 mo
367.689 304.886 li
366.576 304.525 li
367.89 300.482 li
368.099 299.839 368.115 299.325 367.972 298.923 cv
367.83 298.521 367.511 298.24 367.016 298.079 cv
366.411 297.882 365.876 297.927 365.406 298.198 cv
364.935 298.469 364.593 298.932 364.38 299.587 cv
363.139 303.408 li
362.026 303.046 li
364.224 296.283 li
365.336 296.645 li
364.995 297.696 li
365.383 297.384 365.793 297.176 366.228 297.098 cv
366.651 297.017 367.107 297.042 367.577 297.195 cv
368.344 297.444 368.857 297.884 369.096 298.495 cv
369.335 299.106 369.316 299.879 369.014 300.806 cv
f
161.08 329.922 mo
160.464 330.986 160.016 332.022 159.722 333.044 cv
159.414 334.066 159.274 335.102 159.274 336.152 cv
159.274 337.216 159.414 338.252 159.722 339.274 cv
160.016 340.31 160.464 341.332 161.08 342.382 cv
159.988 342.382 li
159.302 341.304 158.784 340.268 158.448 339.232 cv
158.112 338.196 157.944 337.174 157.944 336.152 cv
157.944 335.144 158.112 334.122 158.448 333.086 cv
158.784 332.05 159.288 331 159.988 329.922 cv
161.08 329.922 li
f
167.002 336.698 mo
165.98 336.698 165.28 336.824 164.888 337.048 cv
164.496 337.286 164.3 337.678 164.3 338.238 cv
164.3 338.686 164.44 339.05 164.734 339.302 cv
165.028 339.568 165.434 339.694 165.938 339.694 cv
166.638 339.694 167.198 339.456 167.618 338.952 cv
168.038 338.462 168.248 337.804 168.248 336.978 cv
168.248 336.698 li
167.002 336.698 li
169.508 336.18 mo
169.508 340.548 li
168.248 340.548 li
168.248 339.386 li
167.954 339.862 167.59 340.198 167.17 340.408 cv
166.75 340.618 166.218 340.73 165.602 340.73 cv
164.818 340.73 164.188 340.52 163.726 340.086 cv
163.264 339.652 163.04 339.064 163.04 338.322 cv
163.04 337.468 163.32 336.824 163.908 336.376 cv
164.482 335.942 165.336 335.718 166.484 335.718 cv
168.248 335.718 li
168.248 335.592 li
168.248 335.018 168.052 334.57 167.674 334.248 cv
167.296 333.94 166.764 333.772 166.078 333.772 cv
165.63 333.772 165.21 333.828 164.79 333.94 cv
164.37 334.052 163.978 334.206 163.6 334.402 cv
163.6 333.24 li
164.048 333.072 164.496 332.932 164.93 332.848 cv
165.364 332.764 165.784 332.708 166.204 332.708 cv
167.31 332.708 168.136 333.002 168.682 333.576 cv
169.228 334.15 169.508 335.018 169.508 336.18 cv
f
171.902 329.922 mo
172.994 329.922 li
173.666 331 174.184 332.05 174.52 333.086 cv
174.856 334.122 175.038 335.144 175.038 336.152 cv
175.038 337.174 174.856 338.196 174.52 339.232 cv
174.184 340.268 173.666 341.304 172.994 342.382 cv
171.902 342.382 li
172.504 341.332 172.952 340.31 173.26 339.274 cv
173.554 338.252 173.708 337.216 173.708 336.152 cv
173.708 335.102 173.554 334.066 173.26 333.044 cv
172.952 332.022 172.504 330.986 171.902 329.922 cv
f
181.03 331.7 mo
179.154 336.782 li
182.906 336.782 li
181.03 331.7 li
180.246 330.342 mo
181.814 330.342 li
185.706 340.548 li
184.264 340.548 li
183.34 337.93 li
178.734 337.93 li
177.81 340.548 li
176.354 340.548 li
180.246 330.342 li
f
194.834 331.126 mo
194.834 332.582 li
194.358 332.162 193.868 331.84 193.336 331.616 cv
192.804 331.406 192.258 331.294 191.67 331.294 cv
190.494 331.294 189.598 331.658 188.982 332.372 cv
188.366 333.086 188.058 334.108 188.058 335.452 cv
188.058 336.796 188.366 337.832 188.982 338.546 cv
189.598 339.26 190.494 339.61 191.67 339.61 cv
192.258 339.61 192.804 339.512 193.336 339.288 cv
193.868 339.078 194.358 338.756 194.834 338.322 cv
194.834 339.764 li
194.344 340.1 193.826 340.338 193.294 340.492 cv
192.762 340.646 192.188 340.73 191.586 340.73 cv
190.046 340.73 188.828 340.268 187.932 339.33 cv
187.036 338.392 186.602 337.104 186.602 335.452 cv
186.602 333.814 187.036 332.526 187.932 331.574 cv
188.828 330.636 190.046 330.16 191.586 330.16 cv
192.202 330.16 192.776 330.244 193.308 330.398 cv
193.84 330.566 194.358 330.804 194.834 331.126 cv
f
204.606 331.126 mo
204.606 332.582 li
204.13 332.162 203.64 331.84 203.108 331.616 cv
202.576 331.406 202.03 331.294 201.442 331.294 cv
200.266 331.294 199.37 331.658 198.754 332.372 cv
198.138 333.086 197.83 334.108 197.83 335.452 cv
197.83 336.796 198.138 337.832 198.754 338.546 cv
199.37 339.26 200.266 339.61 201.442 339.61 cv
202.03 339.61 202.576 339.512 203.108 339.288 cv
203.64 339.078 204.13 338.756 204.606 338.322 cv
204.606 339.764 li
204.116 340.1 203.598 340.338 203.066 340.492 cv
202.534 340.646 201.96 340.73 201.358 340.73 cv
199.818 340.73 198.6 340.268 197.704 339.33 cv
196.808 338.392 196.374 337.104 196.374 335.452 cv
196.374 333.814 196.808 332.526 197.704 331.574 cv
198.6 330.636 199.818 330.16 201.358 330.16 cv
201.974 330.16 202.548 330.244 203.08 330.398 cv
203.612 330.566 204.13 330.804 204.606 331.126 cv
f
31.6161 263.286 mo
28.1161 263.286 li
f
31.6161 263.286 mo
28.1161 263.286 li
@
6.80247 259.311 mo
6.08847 259.311 5.55647 259.661 5.19247 260.361 cv
4.82847 261.061 4.66047 262.111 4.66047 263.511 cv
4.66047 264.911 4.82847 265.961 5.19247 266.661 cv
5.55647 267.361 6.08847 267.711 6.80247 267.711 cv
7.51647 267.711 8.04847 267.361 8.41247 266.661 cv
8.76247 265.961 8.94447 264.911 8.94447 263.511 cv
8.94447 262.111 8.76247 261.061 8.41247 260.361 cv
8.04847 259.661 7.51647 259.311 6.80247 259.311 cv
6.80247 258.219 mo
7.93647 258.219 8.80447 258.681 9.42047 259.577 cv
10.0225 260.487 10.3305 261.803 10.3305 263.511 cv
10.3305 265.233 10.0225 266.549 9.42047 267.445 cv
8.80447 268.341 7.93647 268.789 6.80247 268.789 cv
5.65447 268.789 4.77247 268.341 4.17047 267.445 cv
3.56847 266.549 3.27447 265.233 3.27447 263.511 cv
3.27447 261.803 3.56847 260.487 4.17047 259.577 cv
4.77247 258.681 5.65447 258.219 6.80247 258.219 cv
f
12.7525 266.871 mo
14.1945 266.871 li
14.1945 268.607 li
12.7525 268.607 li
12.7525 266.871 li
f
20.9984 259.605 mo
17.5124 265.051 li
20.9984 265.051 li
20.9984 259.605 li
20.6344 258.401 mo
22.3704 258.401 li
22.3704 265.051 li
23.8264 265.051 li
23.8264 266.199 li
22.3704 266.199 li
22.3704 268.607 li
20.9984 268.607 li
20.9984 266.199 li
16.3924 266.199 li
16.3924 264.869 li
20.6344 258.401 li
f
31.6161 231.95 mo
28.1161 231.95 li
f
31.6161 231.95 mo
28.1161 231.95 li
@
6.80247 227.974 mo
6.08847 227.974 5.55647 228.324 5.19247 229.024 cv
4.82847 229.724 4.66047 230.774 4.66047 232.174 cv
4.66047 233.574 4.82847 234.624 5.19247 235.324 cv
5.55647 236.024 6.08847 236.374 6.80247 236.374 cv
7.51647 236.374 8.04847 236.024 8.41247 235.324 cv
8.76247 234.624 8.94447 233.574 8.94447 232.174 cv
8.94447 230.774 8.76247 229.724 8.41247 229.024 cv
8.04847 228.324 7.51647 227.974 6.80247 227.974 cv
6.80247 226.882 mo
7.93647 226.882 8.80447 227.344 9.42047 228.24 cv
10.0225 229.15 10.3305 230.466 10.3305 232.174 cv
10.3305 233.896 10.0225 235.212 9.42047 236.108 cv
8.80447 237.004 7.93647 237.452 6.80247 237.452 cv
5.65447 237.452 4.77247 237.004 4.17047 236.108 cv
3.56847 235.212 3.27447 233.896 3.27447 232.174 cv
3.27447 230.466 3.56847 229.15 4.17047 228.24 cv
4.77247 227.344 5.65447 226.882 6.80247 226.882 cv
f
12.7525 235.534 mo
14.1945 235.534 li
14.1945 237.27 li
12.7525 237.27 li
12.7525 235.534 li
f
17.2184 227.064 mo
22.6364 227.064 li
22.6364 228.226 li
18.4784 228.226 li
18.4784 230.732 li
18.6744 230.662 18.8844 230.606 19.0804 230.578 cv
19.2764 230.55 19.4864 230.522 19.6824 230.522 cv
20.8164 230.522 21.7124 230.844 22.3844 231.46 cv
23.0564 232.09 23.3924 232.93 23.3924 233.994 cv
23.3924 235.1 23.0424 235.954 22.3564 236.556 cv
21.6704 237.158 20.7044 237.452 19.4724 237.452 cv
19.0384 237.452 18.6044 237.41 18.1564 237.354 cv
17.7084 237.284 17.2604 237.186 16.7844 237.032 cv
16.7844 235.646 li
17.1904 235.87 17.6104 236.038 18.0584 236.15 cv
18.4924 236.262 18.9544 236.304 19.4444 236.304 cv
20.2284 236.304 20.8584 236.108 21.3204 235.688 cv
21.7684 235.268 22.0064 234.708 22.0064 233.994 cv
22.0064 233.294 21.7684 232.734 21.3204 232.314 cv
20.8584 231.894 20.2284 231.684 19.4444 231.684 cv
19.0804 231.684 18.7024 231.726 18.3384 231.81 cv
17.9744 231.894 17.5964 232.02 17.2184 232.188 cv
17.2184 227.064 li
f
31.6161 200.613 mo
28.1161 200.613 li
f
31.6161 200.613 mo
28.1161 200.613 li
@
6.80247 196.637 mo
6.08847 196.637 5.55647 196.987 5.19247 197.687 cv
4.82847 198.387 4.66047 199.437 4.66047 200.837 cv
4.66047 202.237 4.82847 203.287 5.19247 203.987 cv
5.55647 204.687 6.08847 205.037 6.80247 205.037 cv
7.51647 205.037 8.04847 204.687 8.41247 203.987 cv
8.76247 203.287 8.94447 202.237 8.94447 200.837 cv
8.94447 199.437 8.76247 198.387 8.41247 197.687 cv
8.04847 196.987 7.51647 196.637 6.80247 196.637 cv
6.80247 195.545 mo
7.93647 195.545 8.80447 196.007 9.42047 196.903 cv
10.0225 197.813 10.3305 199.129 10.3305 200.837 cv
10.3305 202.559 10.0225 203.875 9.42047 204.771 cv
8.80447 205.667 7.93647 206.115 6.80247 206.115 cv
5.65447 206.115 4.77247 205.667 4.17047 204.771 cv
3.56847 203.875 3.27447 202.559 3.27447 200.837 cv
3.27447 199.129 3.56847 197.813 4.17047 196.903 cv
4.77247 196.007 5.65447 195.545 6.80247 195.545 cv
f
12.7525 204.197 mo
14.1945 204.197 li
14.1945 205.933 li
12.7525 205.933 li
12.7525 204.197 li
f
20.3264 200.277 mo
19.7104 200.277 19.2204 200.501 18.8564 200.921 cv
18.4924 201.341 18.3104 201.929 18.3104 202.657 cv
18.3104 203.399 18.4924 203.987 18.8564 204.407 cv
19.2204 204.827 19.7104 205.037 20.3264 205.037 cv
20.9424 205.037 21.4324 204.827 21.7964 204.407 cv
22.1604 203.987 22.3424 203.399 22.3424 202.657 cv
22.3424 201.929 22.1604 201.341 21.7964 200.921 cv
21.4324 200.501 20.9424 200.277 20.3264 200.277 cv
23.0704 195.951 mo
23.0704 197.211 li
22.7204 197.043 22.3704 196.917 22.0204 196.833 cv
21.6564 196.749 21.3064 196.707 20.9704 196.707 cv
20.0464 196.707 19.3464 197.015 18.8704 197.631 cv
18.3944 198.247 18.1144 199.185 18.0584 200.417 cv
18.3244 200.025 18.6604 199.717 19.0664 199.507 cv
19.4724 199.297 19.9204 199.185 20.4104 199.185 cv
21.4324 199.185 22.2444 199.507 22.8324 200.123 cv
23.4204 200.739 23.7284 201.593 23.7284 202.657 cv
23.7284 203.707 23.4064 204.547 22.7904 205.177 cv
22.1744 205.807 21.3484 206.115 20.3264 206.115 cv
19.1504 206.115 18.2404 205.667 17.6244 204.771 cv
16.9944 203.875 16.6864 202.559 16.6864 200.837 cv
16.6864 199.227 17.0644 197.939 17.8344 196.987 cv
18.5904 196.035 19.6264 195.545 20.9144 195.545 cv
21.2504 195.545 21.6004 195.587 21.9644 195.643 cv
22.3144 195.713 22.6784 195.811 23.0704 195.951 cv
f
31.6161 169.276 mo
28.1161 169.276 li
f
31.6161 169.276 mo
28.1161 169.276 li
@
6.80247 165.3 mo
6.08847 165.3 5.55647 165.65 5.19247 166.35 cv
4.82847 167.05 4.66047 168.1 4.66047 169.5 cv
4.66047 170.9 4.82847 171.95 5.19247 172.65 cv
5.55647 173.35 6.08847 173.7 6.80247 173.7 cv
7.51647 173.7 8.04847 173.35 8.41247 172.65 cv
8.76247 171.95 8.94447 170.9 8.94447 169.5 cv
8.94447 168.1 8.76247 167.05 8.41247 166.35 cv
8.04847 165.65 7.51647 165.3 6.80247 165.3 cv
6.80247 164.208 mo
7.93647 164.208 8.80447 164.67 9.42047 165.566 cv
10.0225 166.476 10.3305 167.792 10.3305 169.5 cv
10.3305 171.222 10.0225 172.538 9.42047 173.434 cv
8.80447 174.33 7.93647 174.778 6.80247 174.778 cv
5.65447 174.778 4.77247 174.33 4.17047 173.434 cv
3.56847 172.538 3.27447 171.222 3.27447 169.5 cv
3.27447 167.792 3.56847 166.476 4.17047 165.566 cv
4.77247 164.67 5.65447 164.208 6.80247 164.208 cv
f
12.7525 172.86 mo
14.1945 172.86 li
14.1945 174.596 li
12.7525 174.596 li
12.7525 172.86 li
f
16.8544 164.39 mo
23.4204 164.39 li
23.4204 164.978 li
19.7104 174.596 li
18.2684 174.596 li
21.7544 165.552 li
16.8544 165.552 li
16.8544 164.39 li
f
31.6161 137.939 mo
28.1161 137.939 li
f
31.6161 137.939 mo
28.1161 137.939 li
@
6.80247 133.963 mo
6.08847 133.963 5.55647 134.313 5.19247 135.013 cv
4.82847 135.713 4.66047 136.763 4.66047 138.163 cv
4.66047 139.563 4.82847 140.613 5.19247 141.313 cv
5.55647 142.013 6.08847 142.363 6.80247 142.363 cv
7.51647 142.363 8.04847 142.013 8.41247 141.313 cv
8.76247 140.613 8.94447 139.563 8.94447 138.163 cv
8.94447 136.763 8.76247 135.713 8.41247 135.013 cv
8.04847 134.313 7.51647 133.963 6.80247 133.963 cv
6.80247 132.871 mo
7.93647 132.871 8.80447 133.333 9.42047 134.229 cv
10.0225 135.139 10.3305 136.455 10.3305 138.163 cv
10.3305 139.885 10.0225 141.201 9.42047 142.097 cv
8.80447 142.993 7.93647 143.441 6.80247 143.441 cv
5.65447 143.441 4.77247 142.993 4.17047 142.097 cv
3.56847 141.201 3.27447 139.885 3.27447 138.163 cv
3.27447 136.455 3.56847 135.139 4.17047 134.229 cv
4.77247 133.333 5.65447 132.871 6.80247 132.871 cv
f
12.7525 141.523 mo
14.1945 141.523 li
14.1945 143.259 li
12.7525 143.259 li
12.7525 141.523 li
f
20.1584 138.415 mo
19.5004 138.415 18.9824 138.597 18.6044 138.947 cv
18.2264 139.297 18.0444 139.773 18.0444 140.389 cv
18.0444 141.005 18.2264 141.495 18.6044 141.845 cv
18.9824 142.195 19.5004 142.363 20.1584 142.363 cv
20.8024 142.363 21.3204 142.195 21.6984 141.831 cv
22.0764 141.481 22.2724 141.005 22.2724 140.389 cv
22.2724 139.773 22.0764 139.297 21.7124 138.947 cv
21.3344 138.597 20.8164 138.415 20.1584 138.415 cv
18.7724 137.827 mo
18.1844 137.687 17.7224 137.407 17.3864 137.001 cv
17.0504 136.595 16.8964 136.105 16.8964 135.517 cv
16.8964 134.705 17.1764 134.061 17.7644 133.585 cv
18.3384 133.109 19.1364 132.871 20.1584 132.871 cv
21.1664 132.871 21.9644 133.109 22.5524 133.585 cv
23.1264 134.061 23.4204 134.705 23.4204 135.517 cv
23.4204 136.105 23.2524 136.595 22.9164 137.001 cv
22.5804 137.407 22.1324 137.687 21.5444 137.827 cv
22.2024 137.981 22.7204 138.289 23.0984 138.737 cv
23.4624 139.185 23.6584 139.745 23.6584 140.389 cv
23.6584 141.383 23.3504 142.139 22.7484 142.657 cv
22.1324 143.189 21.2784 143.441 20.1584 143.441 cv
19.0244 143.441 18.1564 143.189 17.5544 142.657 cv
16.9524 142.139 16.6584 141.383 16.6584 140.389 cv
16.6584 139.745 16.8404 139.185 17.2184 138.737 cv
17.5824 138.289 18.1004 137.981 18.7724 137.827 cv
18.2684 135.643 mo
18.2684 136.175 18.4224 136.595 18.7584 136.889 cv
19.0944 137.183 19.5564 137.323 20.1584 137.323 cv
20.7464 137.323 21.2084 137.183 21.5444 136.889 cv
21.8804 136.595 22.0484 136.175 22.0484 135.643 cv
22.0484 135.111 21.8804 134.705 21.5444 134.411 cv
21.2084 134.117 20.7464 133.963 20.1584 133.963 cv
19.5564 133.963 19.0944 134.117 18.7584 134.411 cv
18.4224 134.705 18.2684 135.111 18.2684 135.643 cv
f
31.6161 106.602 mo
28.1161 106.602 li
f
31.6161 106.602 mo
28.1161 106.602 li
@
6.80247 102.626 mo
6.08847 102.626 5.55647 102.976 5.19247 103.676 cv
4.82847 104.376 4.66047 105.426 4.66047 106.826 cv
4.66047 108.226 4.82847 109.276 5.19247 109.976 cv
5.55647 110.676 6.08847 111.026 6.80247 111.026 cv
7.51647 111.026 8.04847 110.676 8.41247 109.976 cv
8.76247 109.276 8.94447 108.226 8.94447 106.826 cv
8.94447 105.426 8.76247 104.376 8.41247 103.676 cv
8.04847 102.976 7.51647 102.626 6.80247 102.626 cv
6.80247 101.534 mo
7.93647 101.534 8.80447 101.996 9.42047 102.892 cv
10.0225 103.802 10.3305 105.118 10.3305 106.826 cv
10.3305 108.548 10.0225 109.864 9.42047 110.76 cv
8.80447 111.656 7.93647 112.104 6.80247 112.104 cv
5.65447 112.104 4.77247 111.656 4.17047 110.76 cv
3.56847 109.864 3.27447 108.548 3.27447 106.826 cv
3.27447 105.118 3.56847 103.802 4.17047 102.892 cv
4.77247 101.996 5.65447 101.534 6.80247 101.534 cv
f
12.7525 110.186 mo
14.1945 110.186 li
14.1945 111.922 li
12.7525 111.922 li
12.7525 110.186 li
f
17.2464 111.712 mo
17.2464 110.452 li
17.5824 110.62 17.9324 110.746 18.2964 110.83 cv
18.6464 110.914 18.9964 110.956 19.3464 110.956 cv
20.2424 110.956 20.9424 110.662 21.4184 110.046 cv
21.8944 109.43 22.1744 108.506 22.2584 107.246 cv
21.9784 107.638 21.6424 107.946 21.2504 108.156 cv
20.8444 108.366 20.3964 108.464 19.9064 108.464 cv
18.8704 108.464 18.0584 108.156 17.4704 107.54 cv
16.8824 106.924 16.5884 106.084 16.5884 105.006 cv
16.5884 103.97 16.8964 103.13 17.5124 102.486 cv
18.1284 101.856 18.9544 101.534 19.9904 101.534 cv
21.1664 101.534 22.0764 101.996 22.6924 102.892 cv
23.3084 103.802 23.6304 105.118 23.6304 106.826 cv
23.6304 108.45 23.2384 109.724 22.4824 110.676 cv
21.7124 111.628 20.6904 112.104 19.4024 112.104 cv
19.0524 112.104 18.7024 112.062 18.3524 112.006 cv
17.9884 111.95 17.6244 111.852 17.2464 111.712 cv
19.9904 107.386 mo
20.6064 107.386 21.0964 107.176 21.4604 106.756 cv
21.8244 106.336 22.0064 105.748 22.0064 105.006 cv
22.0064 104.278 21.8244 103.69 21.4604 103.27 cv
21.0964 102.85 20.6064 102.626 19.9904 102.626 cv
19.3744 102.626 18.8844 102.85 18.5204 103.27 cv
18.1564 103.69 17.9744 104.278 17.9744 105.006 cv
17.9744 105.748 18.1564 106.336 18.5204 106.756 cv
18.8844 107.176 19.3744 107.386 19.9904 107.386 cv
f
31.6161 75.2652 mo
28.1161 75.2652 li
f
31.6161 75.2652 mo
28.1161 75.2652 li
@
4.08647 79.4235 mo
6.34047 79.4235 li
6.34047 71.6395 li
3.89047 72.1295 li
3.89047 70.8695 li
6.32647 70.3795 li
7.71247 70.3795 li
7.71247 79.4235 li
9.96647 79.4235 li
9.96647 80.5855 li
4.08647 80.5855 li
4.08647 79.4235 li
f
12.7525 78.8495 mo
14.1945 78.8495 li
14.1945 80.5855 li
12.7525 80.5855 li
12.7525 78.8495 li
f
20.1584 71.2895 mo
19.4444 71.2895 18.9124 71.6395 18.5484 72.3395 cv
18.1844 73.0395 18.0164 74.0895 18.0164 75.4895 cv
18.0164 76.8895 18.1844 77.9395 18.5484 78.6395 cv
18.9124 79.3395 19.4444 79.6895 20.1584 79.6895 cv
20.8724 79.6895 21.4044 79.3395 21.7684 78.6395 cv
22.1184 77.9395 22.3004 76.8895 22.3004 75.4895 cv
22.3004 74.0895 22.1184 73.0395 21.7684 72.3395 cv
21.4044 71.6395 20.8724 71.2895 20.1584 71.2895 cv
20.1584 70.1975 mo
21.2924 70.1975 22.1604 70.6595 22.7764 71.5555 cv
23.3784 72.4655 23.6864 73.7815 23.6864 75.4895 cv
23.6864 77.2115 23.3784 78.5275 22.7764 79.4235 cv
22.1604 80.3195 21.2924 80.7675 20.1584 80.7675 cv
19.0104 80.7675 18.1284 80.3195 17.5264 79.4235 cv
16.9244 78.5275 16.6304 77.2115 16.6304 75.4895 cv
16.6304 73.7815 16.9244 72.4655 17.5264 71.5555 cv
18.1284 70.6595 19.0104 70.1975 20.1584 70.1975 cv
f
2 lc
0 lj
31.6161 263.286 mo
31.6161 59.5968 li
@
330.52 263.286 mo
330.52 59.5968 li
@
31.6161 263.286 mo
330.52 263.286 li
@
31.6161 59.5968 mo
330.52 59.5968 li
@
412.016 263.286 mo
710.92 263.286 li
710.92 59.5968 li
412.016 59.5968 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
gsave
412.016 263.286 mo
710.92 263.286 li
710.92 59.5969 li
412.016 59.5969 li
412.016 263.286 li
clp
424.779 388.634 mo
433.128 388.634 li
433.128 123.251 li
424.779 123.251 li
cp
f
1 lw
0 lc
424.779 388.634 mo
433.128 388.634 li
433.128 123.251 li
424.779 123.251 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
412.016 263.286 mo
710.92 263.286 li
710.92 59.5969 li
412.016 59.5969 li
412.016 263.286 li
clp
472.489 388.634 mo
480.838 388.634 li
480.838 157.885 li
472.489 157.885 li
cp
f
1 lw
0 lc
472.489 388.634 mo
480.838 388.634 li
480.838 157.885 li
472.489 157.885 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
412.016 263.286 mo
710.92 263.286 li
710.92 59.5969 li
412.016 59.5969 li
412.016 263.286 li
clp
520.199 388.634 mo
528.548 388.634 li
528.548 135.77 li
520.199 135.77 li
cp
f
1 lw
0 lc
520.199 388.634 mo
528.548 388.634 li
528.548 135.77 li
520.199 135.77 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
412.016 263.286 mo
710.92 263.286 li
710.92 59.5969 li
412.016 59.5969 li
412.016 263.286 li
clp
567.909 388.634 mo
576.258 388.634 li
576.258 144.115 li
567.909 144.115 li
cp
f
1 lw
0 lc
567.909 388.634 mo
576.258 388.634 li
576.258 144.115 li
567.909 144.115 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
412.016 263.286 mo
710.92 263.286 li
710.92 59.5969 li
412.016 59.5969 li
412.016 263.286 li
clp
615.619 388.634 mo
623.968 388.634 li
623.968 177.079 li
615.619 177.079 li
cp
f
1 lw
0 lc
615.619 388.634 mo
623.968 388.634 li
623.968 177.079 li
615.619 177.079 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
412.016 263.286 mo
710.92 263.286 li
710.92 59.5969 li
412.016 59.5969 li
412.016 263.286 li
clp
663.329 388.634 mo
671.678 388.634 li
671.678 125.545 li
663.329 125.545 li
cp
f
1 lw
0 lc
663.329 388.634 mo
671.678 388.634 li
671.678 125.545 li
663.329 125.545 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
412.016 263.286 mo
710.92 263.286 li
710.92 59.5969 li
412.016 59.5969 li
412.016 263.286 li
clp
433.128 388.634 mo
441.477 388.634 li
441.477 124.712 li
433.128 124.712 li
cp
1 /0 /CSD get_res sepcs
.588235 sep
f
1 lw
0 lc
433.128 388.634 mo
441.477 388.634 li
441.477 124.712 li
433.128 124.712 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
412.016 263.286 mo
710.92 263.286 li
710.92 59.5969 li
412.016 59.5969 li
412.016 263.286 li
clp
480.838 388.634 mo
489.187 388.634 li
489.187 161.639 li
480.838 161.639 li
cp
1 /0 /CSD get_res sepcs
.588235 sep
f
1 lw
0 lc
480.838 388.634 mo
489.187 388.634 li
489.187 161.639 li
480.838 161.639 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
412.016 263.286 mo
710.92 263.286 li
710.92 59.5969 li
412.016 59.5969 li
412.016 263.286 li
clp
528.548 388.634 mo
536.897 388.634 li
536.897 130.97 li
528.548 130.97 li
cp
1 /0 /CSD get_res sepcs
.588235 sep
f
1 lw
0 lc
528.548 388.634 mo
536.897 388.634 li
536.897 130.97 li
528.548 130.97 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
412.016 263.286 mo
710.92 263.286 li
710.92 59.5969 li
412.016 59.5969 li
412.016 263.286 li
clp
576.258 388.634 mo
584.607 388.634 li
584.607 142.238 li
576.258 142.238 li
cp
1 /0 /CSD get_res sepcs
.588235 sep
f
1 lw
0 lc
576.258 388.634 mo
584.607 388.634 li
584.607 142.238 li
576.258 142.238 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
412.016 263.286 mo
710.92 263.286 li
710.92 59.5969 li
412.016 59.5969 li
412.016 263.286 li
clp
623.968 388.634 mo
632.318 388.634 li
632.318 173.531 li
623.968 173.531 li
cp
1 /0 /CSD get_res sepcs
.588235 sep
f
1 lw
0 lc
623.968 388.634 mo
632.318 388.634 li
632.318 173.531 li
623.968 173.531 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
412.016 263.286 mo
710.92 263.286 li
710.92 59.5969 li
412.016 59.5969 li
412.016 263.286 li
clp
671.678 388.634 mo
680.028 388.634 li
680.028 120.748 li
671.678 120.748 li
cp
1 /0 /CSD get_res sepcs
.588235 sep
f
1 lw
0 lc
671.678 388.634 mo
680.028 388.634 li
680.028 120.748 li
671.678 120.748 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
472.369 263.286 mo
472.369 266.786 li
1 /0 /CSD get_res sepcs
1 sep
f
0 lc
1 lj
472.369 263.286 mo
472.369 266.786 li
@
413.525 273.111 mo
413.139 274.298 li
412.742 273.923 412.361 273.621 411.989 273.377 cv
411.601 273.142 411.225 272.952 410.855 272.831 cv
410.187 272.614 409.623 272.581 409.185 272.712 cv
408.742 272.855 408.448 273.17 408.295 273.64 cv
408.167 274.035 408.178 274.381 408.361 274.659 cv
408.527 274.945 408.933 275.255 409.56 275.595 cv
410.254 275.985 li
411.1 276.451 411.667 276.977 411.959 277.55 cv
412.247 278.136 412.281 278.789 412.044 279.519 cv
411.759 280.397 411.249 280.956 410.524 281.212 cv
409.785 281.464 408.86 281.41 407.735 281.044 cv
407.302 280.903 406.861 280.705 406.407 280.462 cv
405.953 280.219 405.502 279.922 405.06 279.56 cv
405.469 278.299 li
405.872 278.744 406.285 279.11 406.711 279.399 cv
407.133 279.7 407.582 279.915 408.052 280.067 cv
408.745 280.292 409.32 280.329 409.792 280.181 cv
410.251 280.03 410.574 279.711 410.743 279.192 cv
410.887 278.747 410.864 278.356 410.672 278.021 cv
410.48 277.685 410.095 277.355 409.517 277.03 cv
408.824 276.641 li
407.965 276.171 407.402 275.673 407.123 275.145 cv
406.839 274.629 406.814 274.033 407.039 273.341 cv
407.296 272.55 407.773 272.008 408.491 271.735 cv
409.196 271.458 410.051 271.476 411.04 271.798 cv
411.46 271.934 411.869 272.108 412.29 272.327 cv
412.698 272.542 413.103 272.81 413.525 273.111 cv
f
417.012 274.285 mo
416.389 276.201 li
418.676 276.944 li
418.395 277.81 li
416.108 277.067 li
414.915 280.739 li
414.734 281.295 414.691 281.678 414.792 281.874 cv
414.888 282.083 415.173 282.258 415.643 282.41 cv
416.78 282.78 li
416.479 283.707 li
415.341 283.338 li
414.476 283.057 413.935 282.703 413.718 282.277 cv
413.501 281.851 413.529 281.218 413.802 280.377 cv
414.995 276.705 li
414.179 276.44 li
414.46 275.574 li
415.276 275.84 li
415.899 273.923 li
417.012 274.285 li
f
422.121 281.782 mo
421.218 281.488 420.564 281.399 420.154 281.484 cv
419.739 281.582 419.454 281.872 419.293 282.366 cv
419.164 282.762 419.184 283.124 419.371 283.43 cv
419.554 283.75 419.877 283.978 420.322 284.122 cv
420.94 284.323 421.503 284.274 422.018 283.949 cv
422.53 283.637 422.904 283.116 423.141 282.386 cv
423.221 282.139 li
422.121 281.782 li
424.483 282.043 mo
423.229 285.901 li
422.117 285.539 li
422.45 284.513 li
422.054 284.849 421.636 285.041 421.205 285.106 cv
420.774 285.171 420.272 285.117 419.728 284.941 cv
419.035 284.716 418.539 284.349 418.256 283.834 cv
417.972 283.318 417.943 282.734 418.156 282.079 cv
418.401 281.325 418.833 280.836 419.481 280.609 cv
420.112 280.391 420.931 280.438 421.945 280.768 cv
423.503 281.274 li
423.539 281.162 li
423.703 280.656 423.659 280.204 423.417 279.811 cv
423.172 279.43 422.75 279.129 422.145 278.932 cv
421.749 278.804 421.362 278.733 420.959 278.711 cv
420.556 278.69 420.165 278.713 419.775 278.778 cv
420.109 277.752 li
420.553 277.732 420.989 277.737 421.396 277.787 cv
421.803 277.837 422.19 277.908 422.561 278.029 cv
423.538 278.346 424.183 278.843 424.5 279.507 cv
424.818 280.17 424.816 281.017 424.483 282.043 cv
f
429.437 278.322 mo
428.815 280.239 li
431.102 280.982 li
430.821 281.847 li
428.533 281.104 li
427.34 284.776 li
427.159 285.332 427.117 285.715 427.217 285.912 cv
427.313 286.121 427.598 286.295 428.068 286.448 cv
429.206 286.817 li
428.904 287.745 li
427.767 287.375 li
426.901 287.094 426.36 286.74 426.143 286.314 cv
425.926 285.889 425.954 285.255 426.227 284.414 cv
427.421 280.742 li
426.605 280.477 li
426.886 279.612 li
427.702 279.877 li
428.324 277.961 li
429.437 278.322 li
f
432.561 281.456 mo
433.673 281.817 li
431.476 288.58 li
430.363 288.219 li
432.561 281.456 li
433.416 278.822 mo
434.529 279.184 li
434.071 280.593 li
432.958 280.232 li
433.416 278.822 li
f
440.249 284.172 mo
439.907 285.223 li
439.634 284.97 439.353 284.742 439.047 284.547 cv
438.725 284.361 438.395 284.199 438.036 284.082 cv
437.48 283.901 437.031 283.851 436.703 283.936 cv
436.375 284.021 436.158 284.224 436.05 284.558 cv
435.966 284.817 436 285.047 436.15 285.26 cv
436.299 285.473 436.647 285.75 437.2 286.066 cv
437.555 286.277 li
438.29 286.707 438.766 287.135 439.004 287.541 cv
439.225 287.954 439.257 288.443 439.081 288.987 cv
438.876 289.618 438.468 290.032 437.857 290.23 cv
437.242 290.44 436.493 290.388 435.628 290.107 cv
435.257 289.986 434.898 289.829 434.522 289.638 cv
434.147 289.448 433.771 289.216 433.386 288.928 cv
433.76 287.778 li
434.096 288.133 434.451 288.426 434.815 288.654 cv
435.174 288.893 435.554 289.071 435.949 289.2 cv
436.469 289.369 436.905 289.415 437.246 289.334 cv
437.574 289.249 437.806 289.038 437.915 288.704 cv
438.011 288.407 437.976 288.136 437.831 287.911 cv
437.685 287.686 437.292 287.381 436.648 287.008 cv
436.293 286.796 li
435.649 286.423 435.214 286.036 435.014 285.643 cv
434.801 285.246 434.785 284.789 434.958 284.258 cv
435.163 283.627 435.546 283.205 436.104 283.003 cv
436.661 282.802 437.361 282.838 438.201 283.111 cv
438.609 283.243 438.981 283.405 439.331 283.587 cv
439.67 283.766 439.976 283.961 440.249 284.172 cv
f
444.162 283.107 mo
443.54 285.023 li
445.827 285.766 li
445.546 286.632 li
443.258 285.888 li
442.065 289.56 li
441.885 290.117 441.842 290.5 441.942 290.696 cv
442.039 290.905 442.324 291.08 442.793 291.232 cv
443.931 291.602 li
443.63 292.529 li
442.492 292.16 li
441.627 291.878 441.085 291.525 440.868 291.099 cv
440.651 290.673 440.679 290.04 440.953 289.199 cv
442.146 285.527 li
441.33 285.262 li
441.611 284.396 li
442.427 284.661 li
443.05 282.745 li
444.162 283.107 li
f
447.286 286.24 mo
448.399 286.602 li
446.201 293.365 li
445.088 293.003 li
447.286 286.24 li
448.142 283.607 mo
449.254 283.968 li
448.796 285.378 li
447.684 285.016 li
448.142 283.607 li
f
455.51 289.199 mo
455.172 290.238 li
454.907 289.96 454.638 289.736 454.345 289.545 cv
454.052 289.354 453.759 289.204 453.437 289.1 cv
452.72 288.867 452.075 288.917 451.531 289.246 cv
450.986 289.575 450.58 290.154 450.315 290.97 cv
450.045 291.798 450.034 292.505 450.281 293.091 cv
450.528 293.677 451.025 294.085 451.742 294.318 cv
452.063 294.422 452.385 294.485 452.734 294.503 cv
453.084 294.521 453.437 294.486 453.815 294.417 cv
453.481 295.443 li
453.112 295.487 452.754 295.494 452.412 295.451 cv
452.059 295.405 451.688 295.325 451.317 295.205 cv
450.303 294.875 449.588 294.301 449.203 293.465 cv
448.802 292.638 448.787 291.676 449.14 290.588 cv
449.498 289.488 450.076 288.719 450.886 288.285 cv
451.697 287.851 452.63 287.799 453.693 288.144 cv
454.039 288.257 454.361 288.402 454.658 288.581 cv
454.956 288.76 455.245 288.963 455.51 289.199 cv
f
459.509 293.93 mo
458.606 293.636 457.952 293.547 457.542 293.632 cv
457.127 293.73 456.842 294.02 456.681 294.514 cv
456.552 294.91 456.572 295.272 456.759 295.579 cv
456.942 295.898 457.265 296.126 457.71 296.27 cv
458.328 296.471 458.891 296.422 459.406 296.097 cv
459.918 295.785 460.292 295.264 460.529 294.534 cv
460.609 294.287 li
459.509 293.93 li
461.871 294.191 mo
460.617 298.049 li
459.505 297.687 li
459.838 296.661 li
459.442 296.997 459.024 297.189 458.593 297.254 cv
458.162 297.319 457.66 297.265 457.116 297.089 cv
456.423 296.864 455.927 296.498 455.644 295.982 cv
455.36 295.466 455.331 294.882 455.544 294.227 cv
455.789 293.473 456.221 292.984 456.869 292.758 cv
457.5 292.539 458.319 292.586 459.333 292.916 cv
460.891 293.422 li
460.927 293.31 li
461.091 292.804 461.047 292.352 460.805 291.959 cv
460.56 291.578 460.138 291.277 459.533 291.081 cv
459.137 290.952 458.75 290.881 458.347 290.859 cv
457.944 290.838 457.553 290.861 457.163 290.926 cv
457.497 289.9 li
457.941 289.88 458.376 289.885 458.784 289.935 cv
459.191 289.985 459.578 290.057 459.949 290.177 cv
460.926 290.494 461.571 290.991 461.888 291.655 cv
462.206 292.318 462.204 293.165 461.871 294.191 cv
f
465.958 289.396 mo
467.071 289.757 li
464.017 299.154 li
462.905 298.792 li
465.958 289.396 li
f
469.759 295.661 mo
469.283 295.862 468.915 296.111 468.638 296.376 cv
468.36 296.642 468.161 296.96 468.049 297.306 cv
467.856 297.899 467.909 298.45 468.214 298.986 cv
468.505 299.518 468.989 299.88 469.632 300.089 cv
470.003 300.21 470.382 300.265 470.756 300.249 cv
471.13 300.234 471.515 300.141 471.896 299.978 cv
469.759 295.661 li
470.833 295.258 mo
472.879 299.395 li
473.226 299.125 473.536 298.802 473.805 298.438 cv
474.061 298.07 474.288 297.665 474.465 297.204 cv
475.59 297.569 li
475.368 298.085 475.064 298.56 474.685 299.011 cv
474.306 299.462 473.853 299.889 473.317 300.275 cv
474.44 302.54 li
472.919 302.046 li
472.343 300.875 li
471.802 301.109 471.273 301.224 470.759 301.248 cv
470.249 301.26 469.727 301.186 469.207 301.018 cv
468.231 300.7 467.528 300.171 467.086 299.426 cv
466.645 298.681 466.581 297.868 466.862 297.002 cv
467.031 296.483 467.311 296.041 467.728 295.684 cv
468.145 295.328 468.693 295.028 469.37 294.796 cv
469.252 294.485 469.188 294.177 469.17 293.897 cv
469.151 293.618 469.182 293.355 469.262 293.107 cv
469.471 292.465 469.867 292.005 470.44 291.754 cv
471.014 291.503 471.672 291.498 472.414 291.739 cv
472.747 291.848 473.069 291.993 473.379 292.176 cv
473.676 292.355 473.99 292.566 474.288 292.827 cv
473.931 293.927 li
473.632 293.625 473.347 293.368 473.057 293.165 cv
472.768 292.962 472.5 292.82 472.228 292.731 cv
471.807 292.595 471.425 292.594 471.093 292.732 cv
470.749 292.866 470.529 293.123 470.416 293.469 cv
470.348 293.679 470.329 293.905 470.389 294.143 cv
470.444 294.393 470.582 294.767 470.833 295.258 cv
f
478.964 294.045 mo
480.188 294.443 li
477.259 303.456 li
476.035 303.058 li
478.964 294.045 li
f
486.584 301.975 mo
485.258 306.055 li
484.146 305.694 li
485.459 301.651 li
485.668 301.008 485.685 300.494 485.542 300.092 cv
485.399 299.69 485.08 299.409 484.586 299.248 cv
483.98 299.051 483.446 299.097 482.975 299.367 cv
482.504 299.638 482.163 300.101 481.95 300.756 cv
480.708 304.577 li
479.596 304.215 li
481.793 297.452 li
482.906 297.814 li
482.564 298.865 li
482.953 298.553 483.362 298.345 483.797 298.268 cv
484.22 298.186 484.677 298.212 485.146 298.364 cv
485.913 298.613 486.426 299.053 486.665 299.664 cv
486.904 300.275 486.885 301.048 486.584 301.975 cv
f
493.949 298.491 mo
493.648 299.418 li
492.585 299.072 li
492.189 298.944 491.877 298.938 491.676 299.05 cv
491.463 299.159 491.296 299.419 491.16 299.84 cv
490.967 300.433 li
492.797 301.028 li
492.516 301.893 li
490.686 301.299 li
488.77 307.196 li
487.657 306.834 li
489.573 300.937 li
488.51 300.591 li
488.791 299.726 li
489.854 300.072 li
490.007 299.602 li
490.248 298.86 490.602 298.36 491.061 298.126 cv
491.519 297.892 492.132 297.9 492.898 298.149 cv
493.949 298.491 li
f
496.389 303.056 mo
495.796 302.863 495.249 302.945 494.751 303.303 cv
494.252 303.66 493.874 304.234 493.613 305.038 cv
493.347 305.854 493.303 306.537 493.497 307.119 cv
493.69 307.701 494.088 308.077 494.694 308.273 cv
495.287 308.466 495.829 308.396 496.328 308.039 cv
496.827 307.682 497.205 307.107 497.47 306.291 cv
497.727 305.5 497.763 304.801 497.569 304.219 cv
497.376 303.636 496.982 303.249 496.389 303.056 cv
496.694 302.116 mo
497.659 302.43 498.308 302.996 498.664 303.795 cv
499.003 304.602 499.006 305.56 498.645 306.673 cv
498.283 307.786 497.718 308.559 496.973 309 cv
496.211 309.45 495.357 309.514 494.392 309.201 cv
493.416 308.883 492.75 308.325 492.41 307.518 cv
492.067 306.723 492.077 305.769 492.438 304.656 cv
492.8 303.544 493.353 302.767 494.102 302.313 cv
494.847 301.871 495.718 301.799 496.694 302.116 cv
f
503.311 302.325 mo
502.688 304.241 li
504.975 304.985 li
504.694 305.85 li
502.407 305.107 li
501.214 308.779 li
501.033 309.335 500.991 309.718 501.091 309.914 cv
501.187 310.123 501.472 310.298 501.942 310.451 cv
503.079 310.82 li
502.778 311.748 li
501.64 311.378 li
500.775 311.097 500.234 310.743 500.017 310.317 cv
499.8 309.891 499.828 309.258 500.101 308.417 cv
501.294 304.745 li
500.478 304.48 li
500.759 303.615 li
501.575 303.88 li
502.198 301.964 li
503.311 302.325 li
f
511.188 309.969 mo
509.862 314.049 li
508.749 313.688 li
510.063 309.645 li
510.272 309.002 510.289 308.488 510.146 308.086 cv
510.003 307.684 509.684 307.403 509.19 307.242 cv
508.584 307.046 508.05 307.091 507.579 307.362 cv
507.108 307.632 506.767 308.095 506.554 308.751 cv
505.312 312.571 li
504.2 312.21 li
507.253 302.813 li
508.365 303.175 li
507.168 306.859 li
507.557 306.548 507.966 306.339 508.401 306.262 cv
508.824 306.181 509.281 306.206 509.75 306.358 cv
510.517 306.608 511.03 307.048 511.269 307.658 cv
511.508 308.269 511.489 309.042 511.188 309.969 cv
f
519.051 312.989 mo
518.874 313.533 li
513.768 311.874 li
513.568 312.656 513.598 313.322 513.89 313.854 cv
514.169 314.383 514.674 314.765 515.415 315.006 cv
515.836 315.143 516.272 315.23 516.7 315.26 cv
517.128 315.289 517.588 315.261 518.056 315.167 cv
517.714 316.218 li
517.263 316.263 516.81 316.266 516.366 316.204 cv
515.921 316.141 515.473 316.05 515.052 315.913 cv
513.964 315.56 513.212 314.974 512.782 314.151 cv
512.352 313.328 512.32 312.374 512.67 311.298 cv
513.027 310.198 513.609 309.417 514.416 308.954 cv
515.218 308.504 516.142 308.435 517.156 308.765 cv
518.071 309.062 518.692 309.592 519.035 310.346 cv
519.361 311.108 519.376 311.987 519.051 312.989 cv
518.042 312.306 mo
518.227 311.696 518.21 311.158 518.01 310.682 cv
517.792 310.215 517.407 309.885 516.863 309.708 cv
516.245 309.508 515.69 309.532 515.207 309.758 cv
514.724 309.984 514.34 310.406 514.086 311.02 cv
518.042 312.306 li
f
524.245 312.107 mo
523.651 311.914 523.105 311.996 522.606 312.354 cv
522.107 312.711 521.729 313.285 521.468 314.089 cv
521.203 314.905 521.159 315.588 521.352 316.17 cv
521.546 316.752 521.943 317.127 522.549 317.324 cv
523.143 317.517 523.685 317.447 524.184 317.09 cv
524.683 316.732 525.061 316.158 525.326 315.342 cv
525.583 314.551 525.619 313.852 525.425 313.269 cv
525.232 312.687 524.838 312.3 524.245 312.107 cv
524.55 311.167 mo
525.514 311.48 526.164 312.047 526.519 312.846 cv
526.859 313.653 526.862 314.611 526.5 315.724 cv
526.139 316.837 525.573 317.61 524.828 318.051 cv
524.067 318.501 523.212 318.565 522.248 318.251 cv
521.271 317.934 520.605 317.376 520.266 316.569 cv
519.923 315.774 519.932 314.82 520.294 313.707 cv
520.655 312.594 521.208 311.817 521.957 311.364 cv
522.702 310.922 523.573 310.85 524.55 311.167 cv
f
533.025 315.247 mo
532.925 315.132 532.805 315.039 532.669 314.953 cv
532.529 314.88 532.376 314.804 532.203 314.747 cv
531.573 314.542 531.022 314.596 530.556 314.895 cv
530.077 315.191 529.727 315.72 529.478 316.486 cv
528.321 320.047 li
527.209 319.686 li
529.406 312.923 li
530.519 313.284 li
530.177 314.335 li
530.532 313.999 530.942 313.791 531.377 313.713 cv
531.812 313.636 532.302 313.686 532.846 313.863 cv
532.92 313.887 533.003 313.927 533.102 313.959 cv
533.184 314 533.279 314.044 533.395 314.109 cv
533.025 315.247 li
f
534.945 322.883 mo
534.367 323.57 533.885 324.001 533.508 324.152 cv
533.131 324.303 532.695 324.298 532.2 324.137 cv
531.31 323.848 li
531.611 322.921 li
532.267 323.133 li
532.563 323.23 532.822 323.232 533.044 323.14 cv
533.265 323.048 533.559 322.774 533.946 322.298 cv
534.304 321.868 li
533.733 314.329 li
534.908 314.71 li
535.303 320.689 li
539.136 316.084 li
540.311 316.466 li
534.945 322.883 li
f
520.079 263.286 mo
520.079 266.786 li
f
520.079 263.286 mo
520.079 266.786 li
@
473.694 271.059 mo
475.511 271.649 li
475.818 278.529 li
480.123 273.148 li
481.94 273.738 li
479.012 282.751 li
477.825 282.366 li
480.396 274.453 li
476.063 279.879 li
474.839 279.482 li
474.523 272.545 li
471.952 280.457 li
470.765 280.072 li
473.694 271.059 li
f
485.951 278.39 mo
485.358 278.197 484.812 278.28 484.313 278.637 cv
483.814 278.994 483.436 279.569 483.175 280.372 cv
482.91 281.188 482.866 281.871 483.059 282.453 cv
483.253 283.036 483.65 283.411 484.256 283.608 cv
484.849 283.801 485.392 283.731 485.89 283.373 cv
486.389 283.016 486.767 282.442 487.032 281.626 cv
487.289 280.834 487.325 280.135 487.132 279.553 cv
486.938 278.971 486.545 278.583 485.951 278.39 cv
486.257 277.451 mo
487.221 277.764 487.871 278.33 488.226 279.129 cv
488.565 279.937 488.568 280.895 488.207 282.007 cv
487.845 283.12 487.28 283.893 486.535 284.334 cv
485.774 284.784 484.919 284.848 483.955 284.535 cv
482.978 284.218 482.312 283.659 481.973 282.852 cv
481.63 282.057 481.639 281.103 482 279.991 cv
482.362 278.878 482.915 278.101 483.664 277.647 cv
484.409 277.206 485.28 277.133 486.257 277.451 cv
f
495.267 281.691 mo
496.456 278.031 li
497.569 278.392 li
494.516 287.789 li
493.403 287.427 li
493.733 286.414 li
493.365 286.745 492.972 286.945 492.553 287.014 cv
492.134 287.083 491.682 287.046 491.187 286.885 cv
490.371 286.62 489.808 286.082 489.498 285.27 cv
489.187 284.458 489.221 283.512 489.567 282.449 cv
489.912 281.386 490.437 280.613 491.169 280.127 cv
491.897 279.652 492.673 279.535 493.489 279.801 cv
493.984 279.961 494.372 280.197 494.666 280.511 cv
494.961 280.825 495.161 281.219 495.267 281.691 cv
490.717 282.823 mo
490.452 283.639 490.403 284.334 490.585 284.912 cv
490.766 285.49 491.163 285.866 491.757 286.059 cv
492.338 286.247 492.868 286.173 493.366 285.816 cv
493.853 285.455 494.235 284.868 494.5 284.052 cv
494.765 283.236 494.797 282.549 494.616 281.971 cv
494.422 281.389 494.041 281.005 493.46 280.816 cv
492.867 280.623 492.32 280.706 491.834 281.067 cv
491.347 281.428 490.982 282.007 490.717 282.823 cv
f
503.779 286.752 mo
503.602 287.296 li
498.496 285.637 li
498.296 286.42 498.326 287.086 498.618 287.618 cv
498.897 288.146 499.401 288.529 500.143 288.77 cv
500.564 288.906 501 288.993 501.428 289.023 cv
501.856 289.053 502.316 289.025 502.784 288.931 cv
502.442 289.982 li
501.99 290.026 501.538 290.03 501.094 289.967 cv
500.649 289.905 500.201 289.814 499.78 289.677 cv
498.692 289.323 497.939 288.737 497.51 287.914 cv
497.08 287.091 497.048 286.138 497.398 285.062 cv
497.755 283.962 498.337 283.18 499.144 282.718 cv
499.946 282.268 500.87 282.199 501.884 282.528 cv
502.799 282.826 503.42 283.355 503.763 284.109 cv
504.089 284.871 504.104 285.751 503.779 286.752 cv
502.77 286.069 mo
502.955 285.46 502.938 284.921 502.737 284.446 cv
502.52 283.979 502.135 283.649 501.591 283.472 cv
500.973 283.271 500.418 283.296 499.935 283.522 cv
499.451 283.747 499.068 284.169 498.814 284.784 cv
502.77 286.069 li
f
507.46 281.606 mo
508.573 281.968 li
505.52 291.364 li
504.407 291.003 li
507.46 281.606 li
f
520.06 286.452 mo
519.675 287.639 li
519.277 287.264 518.897 286.962 518.525 286.719 cv
518.137 286.483 517.761 286.293 517.39 286.172 cv
516.722 285.955 516.159 285.923 515.72 286.053 cv
515.277 286.196 514.984 286.511 514.831 286.981 cv
514.702 287.377 514.713 287.722 514.896 288 cv
515.063 288.287 515.468 288.596 516.095 288.936 cv
516.789 289.326 li
517.635 289.792 518.203 290.318 518.495 290.892 cv
518.783 291.477 518.817 292.131 518.58 292.86 cv
518.294 293.738 517.785 294.297 517.059 294.553 cv
516.321 294.805 515.396 294.751 514.27 294.385 cv
513.838 294.245 513.396 294.046 512.942 293.803 cv
512.488 293.56 512.038 293.263 511.595 292.901 cv
512.005 291.64 li
512.407 292.085 512.821 292.452 513.247 292.74 cv
513.668 293.041 514.118 293.256 514.588 293.408 cv
515.28 293.633 515.856 293.67 516.328 293.523 cv
516.787 293.371 517.109 293.052 517.278 292.533 cv
517.423 292.088 517.399 291.697 517.207 291.362 cv
517.016 291.026 516.631 290.696 516.053 290.372 cv
515.359 289.982 li
514.501 289.512 513.938 289.014 513.658 288.486 cv
513.375 287.97 513.35 287.375 513.575 286.682 cv
513.832 285.891 514.309 285.349 515.026 285.076 cv
515.731 284.799 516.586 284.818 517.575 285.139 cv
517.996 285.275 518.404 285.449 518.825 285.668 cv
519.234 285.883 519.639 286.151 520.06 286.452 cv
f
523.547 287.626 mo
522.924 289.542 li
525.212 290.286 li
524.931 291.151 li
522.643 290.408 li
521.45 294.08 li
521.269 294.636 521.227 295.019 521.327 295.215 cv
521.423 295.424 521.708 295.599 522.178 295.752 cv
523.316 296.121 li
523.014 297.049 li
521.877 296.679 li
521.011 296.398 520.47 296.044 520.253 295.618 cv
520.036 295.192 520.064 294.559 520.337 293.718 cv
521.531 290.046 li
520.715 289.781 li
520.996 288.916 li
521.812 289.181 li
522.434 287.264 li
523.547 287.626 li
f
530.253 293.072 mo
530.153 292.957 530.033 292.864 529.897 292.778 cv
529.756 292.705 529.604 292.628 529.431 292.572 cv
528.8 292.367 528.25 292.421 527.783 292.72 cv
527.304 293.016 526.955 293.545 526.706 294.311 cv
525.549 297.872 li
524.436 297.51 li
526.634 290.748 li
527.746 291.109 li
527.405 292.16 li
527.76 291.824 528.169 291.616 528.605 291.538 cv
529.04 291.461 529.529 291.511 530.073 291.688 cv
530.148 291.712 530.23 291.752 530.329 291.784 cv
530.412 291.825 530.506 291.869 530.622 291.934 cv
530.253 293.072 li
f
530.311 296.467 mo
531.641 292.374 li
532.754 292.736 li
531.436 296.791 li
531.227 297.434 531.198 297.944 531.341 298.346 cv
531.484 298.748 531.802 299.029 532.309 299.194 cv
532.903 299.387 533.445 299.358 533.916 299.087 cv
534.387 298.816 534.728 298.353 534.945 297.686 cv
536.191 293.853 li
537.303 294.214 li
535.106 300.977 li
533.993 300.616 li
534.331 299.577 li
533.922 299.909 533.504 300.102 533.094 300.187 cv
532.675 300.256 532.235 300.222 531.765 300.069 cv
530.986 299.816 530.469 299.389 530.23 298.778 cv
529.975 298.176 530.006 297.407 530.311 296.467 cv
534.487 293.122 mo
534.487 293.122 li
f
544.378 296.8 mo
544.04 297.839 li
543.775 297.561 543.506 297.337 543.213 297.146 cv
542.919 296.955 542.626 296.805 542.305 296.701 cv
541.588 296.468 540.943 296.518 540.398 296.847 cv
539.854 297.176 539.447 297.754 539.182 298.57 cv
538.913 299.399 538.902 300.106 539.149 300.692 cv
539.396 301.278 539.893 301.685 540.61 301.918 cv
540.931 302.023 541.252 302.086 541.602 302.104 cv
541.951 302.122 542.305 302.086 542.682 302.017 cv
542.349 303.044 li
541.979 303.088 541.622 303.094 541.28 303.052 cv
540.926 303.005 540.556 302.926 540.185 302.805 cv
539.171 302.476 538.455 301.902 538.071 301.066 cv
537.67 300.238 537.654 299.277 538.008 298.189 cv
538.365 297.088 538.943 296.319 539.754 295.885 cv
540.565 295.452 541.497 295.399 542.561 295.745 cv
542.907 295.857 543.229 296.003 543.526 296.182 cv
543.823 296.36 544.113 296.564 544.378 296.8 cv
f
548.114 295.608 mo
547.491 297.525 li
549.778 298.268 li
549.497 299.133 li
547.21 298.39 li
546.017 302.062 li
545.836 302.618 545.794 303.001 545.894 303.198 cv
545.99 303.407 546.275 303.581 546.745 303.734 cv
547.882 304.103 li
547.581 305.031 li
546.444 304.661 li
545.578 304.38 545.037 304.026 544.82 303.6 cv
544.603 303.175 544.631 302.541 544.904 301.701 cv
546.097 298.029 li
545.281 297.763 li
545.562 296.898 li
546.378 297.163 li
547.001 295.247 li
548.114 295.608 li
f
549.796 302.798 mo
551.126 298.706 li
552.239 299.067 li
550.921 303.122 li
550.712 303.765 550.683 304.275 550.826 304.677 cv
550.969 305.079 551.288 305.36 551.794 305.525 cv
552.388 305.718 552.93 305.689 553.401 305.418 cv
553.872 305.147 554.214 304.684 554.431 304.017 cv
555.676 300.184 li
556.789 300.546 li
554.591 307.309 li
553.479 306.947 li
553.816 305.908 li
553.407 306.24 552.99 306.433 552.579 306.518 cv
552.16 306.587 551.72 306.553 551.25 306.401 cv
550.471 306.148 549.954 305.72 549.715 305.109 cv
549.46 304.507 549.491 303.738 549.796 302.798 cv
553.973 299.453 mo
553.973 299.453 li
f
562.658 303.601 mo
562.558 303.486 562.438 303.393 562.302 303.307 cv
562.162 303.234 562.009 303.158 561.836 303.101 cv
561.205 302.896 560.655 302.95 560.189 303.249 cv
559.71 303.545 559.36 304.074 559.111 304.84 cv
557.954 308.401 li
556.841 308.04 li
559.039 301.277 li
560.152 301.638 li
559.81 302.689 li
560.165 302.353 560.575 302.145 561.01 302.067 cv
561.445 301.99 561.935 302.04 562.479 302.217 cv
562.553 302.241 562.635 302.281 562.734 302.313 cv
562.817 302.354 562.912 302.398 563.027 302.463 cv
562.658 303.601 li
f
568.935 307.923 mo
568.759 308.467 li
563.652 306.808 li
563.453 307.591 563.482 308.256 563.774 308.789 cv
564.054 309.317 564.558 309.699 565.3 309.941 cv
565.72 310.077 566.157 310.164 566.585 310.194 cv
567.012 310.224 567.473 310.195 567.941 310.101 cv
567.599 311.152 li
567.147 311.197 566.695 311.2 566.251 311.138 cv
565.806 311.075 565.357 310.984 564.937 310.848 cv
563.849 310.494 563.096 309.908 562.667 309.085 cv
562.237 308.262 562.205 307.308 562.554 306.233 cv
562.912 305.132 563.494 304.351 564.3 303.888 cv
565.103 303.438 566.027 303.37 567.041 303.699 cv
567.956 303.996 568.577 304.526 568.919 305.28 cv
569.246 306.042 569.261 306.922 568.935 307.923 cv
567.927 307.24 mo
568.112 306.63 568.095 306.092 567.894 305.617 cv
567.677 305.15 567.292 304.819 566.748 304.643 cv
566.13 304.442 565.575 304.467 565.092 304.692 cv
564.608 304.918 564.225 305.34 563.971 305.955 cv
567.927 307.24 li
f
567.79 263.286 mo
567.79 266.786 li
f
567.79 263.286 mo
567.79 266.786 li
@
528.715 271.059 mo
529.939 271.456 li
527.344 279.443 li
531.733 280.869 li
531.4 281.896 li
525.787 280.072 li
528.715 271.059 li
f
536.807 279.894 mo
535.905 279.6 535.25 279.511 534.84 279.596 cv
534.425 279.694 534.14 279.984 533.979 280.478 cv
533.85 280.874 533.87 281.236 534.057 281.542 cv
534.24 281.862 534.563 282.09 535.008 282.234 cv
535.626 282.435 536.189 282.385 536.704 282.061 cv
537.216 281.749 537.59 281.228 537.827 280.498 cv
537.907 280.251 li
536.807 279.894 li
539.169 280.155 mo
537.915 284.013 li
536.803 283.651 li
537.136 282.625 li
536.74 282.961 536.322 283.153 535.891 283.218 cv
535.46 283.283 534.958 283.229 534.414 283.053 cv
533.721 282.828 533.225 282.461 532.942 281.946 cv
532.658 281.43 532.629 280.846 532.842 280.191 cv
533.087 279.437 533.519 278.948 534.167 278.721 cv
534.799 278.503 535.617 278.55 536.631 278.879 cv
538.189 279.386 li
538.225 279.274 li
538.39 278.767 538.345 278.316 538.104 277.923 cv
537.858 277.542 537.437 277.241 536.831 277.044 cv
536.435 276.916 536.048 276.845 535.645 276.823 cv
535.242 276.802 534.852 276.825 534.462 276.89 cv
534.795 275.864 li
535.239 275.844 535.675 275.849 536.082 275.899 cv
536.489 275.949 536.876 276.02 537.247 276.141 cv
538.224 276.458 538.869 276.955 539.187 277.619 cv
539.504 278.282 539.502 279.129 539.169 280.155 cv
f
547.154 282.504 mo
545.828 286.584 li
544.716 286.222 li
546.029 282.179 li
546.238 281.536 546.255 281.022 546.112 280.621 cv
545.969 280.219 545.651 279.938 545.156 279.777 cv
544.55 279.58 544.016 279.625 543.545 279.896 cv
543.075 280.167 542.733 280.63 542.52 281.285 cv
541.279 285.105 li
540.166 284.744 li
542.363 277.981 li
543.476 278.342 li
543.135 279.393 li
543.523 279.082 543.932 278.873 544.367 278.796 cv
544.79 278.715 545.247 278.74 545.717 278.893 cv
546.483 279.142 546.996 279.582 547.235 280.193 cv
547.474 280.803 547.455 281.576 547.154 282.504 cv
f
554.356 283.012 mo
555.546 279.353 li
556.658 279.714 li
553.605 289.111 li
552.492 288.749 li
552.822 287.735 li
552.454 288.067 552.061 288.267 551.642 288.336 cv
551.224 288.405 550.771 288.367 550.277 288.207 cv
549.461 287.942 548.897 287.403 548.587 286.592 cv
548.277 285.78 548.311 284.834 548.656 283.771 cv
549.002 282.708 549.526 281.935 550.258 281.448 cv
550.986 280.974 551.762 280.857 552.578 281.122 cv
553.073 281.283 553.461 281.518 553.755 281.833 cv
554.05 282.147 554.25 282.54 554.356 283.012 cv
549.806 284.144 mo
549.541 284.96 549.493 285.656 549.674 286.234 cv
549.855 286.812 550.252 287.187 550.846 287.38 cv
551.427 287.569 551.957 287.495 552.456 287.138 cv
552.942 286.776 553.324 286.19 553.589 285.374 cv
553.854 284.558 553.886 283.871 553.705 283.293 cv
553.511 282.71 553.13 282.327 552.549 282.138 cv
551.956 281.945 551.41 282.027 550.923 282.389 cv
550.437 282.75 550.071 283.328 549.806 284.144 cv
f
556.597 285.791 mo
559.849 286.847 li
559.528 287.836 li
556.276 286.78 li
556.597 285.791 li
f
563.334 282.307 mo
565.151 282.897 li
565.458 289.777 li
569.763 284.396 li
571.58 284.986 li
568.652 293.999 li
567.465 293.614 li
570.036 285.701 li
565.703 291.128 li
564.479 290.73 li
564.163 283.793 li
561.592 291.706 li
560.405 291.32 li
563.334 282.307 li
f
575.209 292.371 mo
574.306 292.078 573.652 291.988 573.242 292.074 cv
572.827 292.171 572.542 292.461 572.381 292.956 cv
572.252 293.351 572.271 293.713 572.459 294.02 cv
572.642 294.339 572.964 294.567 573.41 294.712 cv
574.028 294.912 574.591 294.863 575.106 294.538 cv
575.618 294.226 575.992 293.705 576.229 292.976 cv
576.309 292.729 li
575.209 292.371 li
577.571 292.633 mo
576.317 296.49 li
575.205 296.129 li
575.538 295.102 li
575.142 295.438 574.724 295.631 574.293 295.696 cv
573.862 295.761 573.36 295.707 572.816 295.53 cv
572.123 295.305 571.627 294.939 571.344 294.423 cv
571.06 293.907 571.031 293.324 571.244 292.668 cv
571.489 291.914 571.921 291.426 572.569 291.199 cv
573.2 290.98 574.019 291.028 575.033 291.357 cv
576.59 291.863 li
576.627 291.752 li
576.791 291.245 576.747 290.793 576.505 290.4 cv
576.26 290.02 575.838 289.719 575.232 289.522 cv
574.837 289.393 574.45 289.322 574.047 289.301 cv
573.644 289.279 573.253 289.303 572.863 289.367 cv
573.197 288.341 li
573.641 288.321 574.076 288.326 574.484 288.376 cv
574.891 288.427 575.278 288.498 575.649 288.618 cv
576.626 288.936 577.271 289.432 577.588 290.096 cv
577.906 290.76 577.904 291.607 577.571 292.633 cv
f
584.384 292.782 mo
584.284 292.668 584.164 292.574 584.028 292.489 cv
583.888 292.416 583.735 292.339 583.562 292.283 cv
582.932 292.078 582.381 292.132 581.915 292.431 cv
581.436 292.727 581.086 293.256 580.837 294.022 cv
579.68 297.583 li
578.568 297.221 li
580.765 290.458 li
581.878 290.82 li
581.536 291.871 li
581.891 291.535 582.301 291.326 582.736 291.249 cv
583.171 291.172 583.661 291.222 584.205 291.398 cv
584.279 291.422 584.362 291.463 584.461 291.495 cv
584.543 291.536 584.638 291.58 584.754 291.645 cv
584.384 292.782 li
f
586.702 289.476 mo
587.815 289.838 li
586.011 295.389 li
590.273 293.548 li
591.695 294.01 li
587.081 296.01 li
589.645 300.821 li
588.199 300.351 li
585.834 295.933 li
584.762 299.234 li
583.649 298.872 li
586.702 289.476 li
f
593.042 294.447 mo
594.155 294.809 li
591.957 301.572 li
590.845 301.21 li
593.042 294.447 li
593.898 291.814 mo
595.01 292.176 li
594.552 293.585 li
593.44 293.223 li
593.898 291.814 li
f
601.233 300.075 mo
599.907 304.155 li
598.794 303.793 li
600.108 299.751 li
600.317 299.108 600.334 298.594 600.191 298.192 cv
600.048 297.79 599.729 297.509 599.235 297.348 cv
598.629 297.151 598.095 297.196 597.624 297.467 cv
597.153 297.738 596.812 298.201 596.599 298.856 cv
595.357 302.677 li
594.245 302.315 li
596.442 295.552 li
597.555 295.914 li
597.213 296.965 li
597.602 296.653 598.011 296.445 598.446 296.367 cv
598.869 296.286 599.326 296.311 599.795 296.464 cv
600.562 296.713 601.075 297.153 601.314 297.764 cv
601.553 298.375 601.534 299.148 601.233 300.075 cv
f
607.696 302.858 mo
607.953 302.067 607.985 301.38 607.808 300.831 cv
607.619 300.277 607.222 299.902 606.628 299.709 cv
606.035 299.516 605.492 299.586 605.014 299.923 cv
604.536 300.26 604.17 300.838 603.913 301.629 cv
603.652 302.433 603.612 303.103 603.801 303.657 cv
603.99 304.21 604.388 304.586 604.981 304.778 cv
605.574 304.971 606.117 304.901 606.595 304.565 cv
607.061 304.224 607.435 303.662 607.696 302.858 cv
607.957 305.841 mo
607.588 306.979 607.051 307.747 606.359 308.151 cv
605.659 308.539 604.788 308.57 603.737 308.229 cv
603.341 308.1 602.995 307.947 602.665 307.785 cv
602.339 307.61 602.021 307.411 601.739 307.183 cv
602.089 306.108 li
602.354 306.385 602.635 306.613 602.929 306.804 cv
603.222 306.995 603.527 307.149 603.861 307.258 cv
604.578 307.491 605.186 307.47 605.678 307.219 cv
606.161 306.952 606.531 306.444 606.78 305.677 cv
606.957 305.133 li
606.594 305.453 606.2 305.653 605.778 305.734 cv
605.355 305.816 604.902 305.778 604.408 305.617 cv
603.567 305.344 603 304.818 602.698 304.023 cv
602.396 303.228 602.422 302.307 602.763 301.256 cv
603.101 300.217 603.621 299.457 604.333 298.991 cv
605.045 298.525 605.817 298.42 606.657 298.694 cv
607.152 298.854 607.54 299.09 607.834 299.404 cv
608.129 299.718 608.329 300.112 608.435 300.584 cv
608.769 299.557 li
609.882 299.919 li
607.957 305.841 li
f
615.5 263.286 mo
615.5 266.786 li
f
615.5 263.286 mo
615.5 266.786 li
@
566.684 272.458 mo
565.583 275.845 li
567.116 276.344 li
567.685 276.528 568.162 276.533 568.567 276.337 cv
568.973 276.14 569.27 275.772 569.447 275.228 cv
569.624 274.684 569.596 274.224 569.383 273.827 cv
569.17 273.43 568.786 273.141 568.217 272.956 cv
566.684 272.458 li
565.785 271.059 mo
568.542 271.954 li
569.544 272.28 570.234 272.764 570.605 273.39 cv
570.975 274.016 571.018 274.768 570.733 275.646 cv
570.444 276.536 569.963 277.132 569.299 277.408 cv
568.631 277.697 567.792 277.67 566.791 277.345 cv
565.258 276.847 li
564.081 280.469 li
562.857 280.072 li
565.785 271.059 li
f
576.042 278.027 mo
575.942 277.913 575.822 277.819 575.686 277.734 cv
575.546 277.661 575.393 277.584 575.22 277.528 cv
574.589 277.323 574.039 277.376 573.573 277.676 cv
573.094 277.971 572.744 278.5 572.495 279.267 cv
571.338 282.828 li
570.226 282.466 li
572.423 275.703 li
573.536 276.065 li
573.194 277.116 li
573.549 276.78 573.959 276.571 574.394 276.494 cv
574.829 276.417 575.319 276.466 575.863 276.643 cv
575.937 276.667 576.02 276.708 576.118 276.74 cv
576.201 276.78 576.296 276.825 576.411 276.89 cv
576.042 278.027 li
f
579.909 278.997 mo
579.316 278.804 578.77 278.886 578.271 279.244 cv
577.772 279.601 577.394 280.175 577.133 280.979 cv
576.868 281.795 576.824 282.478 577.017 283.06 cv
577.211 283.642 577.608 284.017 578.214 284.214 cv
578.808 284.407 579.35 284.337 579.849 283.98 cv
580.347 283.622 580.725 283.048 580.991 282.232 cv
581.248 281.441 581.283 280.742 581.09 280.159 cv
580.896 279.577 580.503 279.19 579.909 278.997 cv
580.215 278.057 mo
581.179 278.37 581.829 278.937 582.184 279.736 cv
582.523 280.543 582.527 281.501 582.165 282.614 cv
581.804 283.727 581.238 284.5 580.493 284.941 cv
579.732 285.391 578.877 285.455 577.913 285.142 cv
576.936 284.824 576.27 284.266 575.931 283.459 cv
575.588 282.664 575.597 281.71 575.959 280.597 cv
576.32 279.484 576.873 278.707 577.622 278.254 cv
578.367 277.812 579.238 277.74 580.215 278.057 cv
f
588.866 284.791 mo
589.131 283.975 589.163 283.288 588.982 282.71 cv
588.788 282.128 588.407 281.744 587.826 281.555 cv
587.233 281.363 586.699 281.449 586.213 281.81 cv
585.714 282.168 585.348 282.746 585.083 283.562 cv
584.818 284.378 584.77 285.073 584.963 285.655 cv
585.144 286.234 585.529 286.605 586.123 286.798 cv
586.704 286.986 587.234 286.913 587.733 286.555 cv
588.219 286.194 588.601 285.607 588.866 284.791 cv
585.85 281.2 mo
586.201 280.877 586.594 280.677 587.017 280.595 cv
587.44 280.514 587.905 280.556 588.4 280.716 cv
589.216 280.982 589.775 281.532 590.085 282.344 cv
590.379 283.164 590.362 284.101 590.016 285.165 cv
589.671 286.228 589.13 287.009 588.414 287.487 cv
587.686 287.962 586.914 288.066 586.098 287.801 cv
585.603 287.64 585.203 287.401 584.904 287.099 cv
584.606 286.797 584.406 286.404 584.316 285.923 cv
583.986 286.937 li
582.874 286.576 li
585.927 277.179 li
587.039 277.541 li
585.85 281.2 li
f
593.815 279.742 mo
594.927 280.104 li
591.874 289.5 li
590.761 289.139 li
593.815 279.742 li
f
601.174 288.476 mo
600.997 289.02 li
595.891 287.361 li
595.691 288.143 595.721 288.809 596.013 289.341 cv
596.292 289.869 596.797 290.252 597.539 290.493 cv
597.959 290.63 598.395 290.717 598.823 290.746 cv
599.251 290.776 599.711 290.748 600.179 290.654 cv
599.838 291.705 li
599.386 291.749 598.934 291.753 598.489 291.69 cv
598.045 291.628 597.596 291.537 597.176 291.4 cv
596.088 291.047 595.335 290.461 594.905 289.637 cv
594.475 288.814 594.444 287.861 594.793 286.785 cv
595.151 285.685 595.733 284.903 596.539 284.441 cv
597.341 283.991 598.266 283.922 599.28 284.252 cv
600.194 284.549 600.815 285.079 601.158 285.832 cv
601.484 286.595 601.499 287.474 601.174 288.476 cv
600.166 287.793 mo
600.35 287.183 600.334 286.644 600.133 286.169 cv
599.915 285.702 599.531 285.372 598.987 285.195 cv
598.368 284.994 597.814 285.019 597.33 285.245 cv
596.847 285.471 596.464 285.893 596.209 286.507 cv
600.166 287.793 li
f
608.845 288.973 mo
609.278 288.566 609.728 288.316 610.192 288.194 cv
610.651 288.083 611.149 288.108 611.68 288.281 cv
612.373 288.506 612.836 288.93 613.059 289.549 cv
613.282 290.168 613.25 290.937 612.957 291.84 cv
611.632 295.92 li
610.519 295.558 li
611.832 291.515 li
612.041 290.872 612.074 290.35 611.956 289.956 cv
611.822 289.571 611.528 289.298 611.058 289.145 cv
610.477 288.956 609.955 289.005 609.497 289.28 cv
609.038 289.555 608.709 290.022 608.496 290.677 cv
607.255 294.498 li
606.142 294.136 li
607.456 290.093 li
607.665 289.45 607.698 288.928 607.58 288.534 cv
607.445 288.149 607.139 287.871 606.669 287.719 cv
606.1 287.534 605.578 287.583 605.12 287.858 cv
604.662 288.133 604.332 288.6 604.119 289.255 cv
602.878 293.075 li
601.765 292.714 li
603.963 285.951 li
605.075 286.313 li
604.734 287.363 li
605.114 287.036 605.523 286.827 605.946 286.746 cv
606.357 286.66 606.809 286.698 607.304 286.859 cv
607.798 287.02 608.166 287.276 608.432 287.635 cv
608.698 287.995 608.825 288.446 608.845 288.973 cv
f
623.348 290.527 mo
622.931 291.813 li
622.631 291.306 622.29 290.881 621.885 290.53 cv
621.475 290.192 621.025 289.937 620.506 289.768 cv
619.467 289.43 618.572 289.495 617.823 289.949 cv
617.074 290.402 616.509 291.217 616.123 292.404 cv
615.737 293.59 615.712 294.594 616.051 295.401 cv
616.39 296.208 617.081 296.775 618.12 297.112 cv
618.639 297.281 619.149 297.351 619.683 297.306 cv
620.213 297.273 620.739 297.129 621.284 296.882 cv
620.87 298.156 li
620.341 298.312 619.815 298.374 619.301 298.357 cv
618.787 298.34 618.256 298.25 617.724 298.077 cv
616.364 297.635 615.421 296.878 614.899 295.792 cv
614.377 294.707 614.363 293.445 614.837 291.986 cv
615.307 290.539 616.06 289.526 617.124 288.943 cv
618.185 288.371 619.397 288.3 620.757 288.742 cv
621.301 288.919 621.784 289.158 622.21 289.447 cv
622.631 289.748 623.02 290.106 623.348 290.527 cv
f
627.04 294.31 mo
626.446 294.118 625.9 294.2 625.401 294.557 cv
624.903 294.914 624.525 295.489 624.264 296.292 cv
623.998 297.108 623.954 297.791 624.148 298.374 cv
624.341 298.956 624.739 299.331 625.345 299.528 cv
625.938 299.721 626.48 299.651 626.979 299.293 cv
627.478 298.936 627.856 298.362 628.121 297.546 cv
628.378 296.755 628.414 296.055 628.22 295.473 cv
628.027 294.891 627.633 294.503 627.04 294.31 cv
627.345 293.371 mo
628.31 293.684 628.959 294.251 629.315 295.049 cv
629.654 295.857 629.657 296.815 629.296 297.927 cv
628.934 299.04 628.368 299.813 627.624 300.255 cv
626.862 300.704 626.008 300.768 625.043 300.455 cv
624.067 300.138 623.401 299.58 623.061 298.772 cv
622.718 297.977 622.727 297.023 623.089 295.911 cv
623.451 294.798 624.004 294.021 624.753 293.567 cv
625.498 293.126 626.369 293.053 627.345 293.371 cv
f
637.084 298.148 mo
637.516 297.742 637.967 297.492 638.43 297.369 cv
638.89 297.258 639.388 297.284 639.919 297.456 cv
640.612 297.681 641.075 298.105 641.298 298.724 cv
641.52 299.343 641.489 300.112 641.196 301.015 cv
639.87 305.095 li
638.758 304.733 li
640.071 300.69 li
640.28 300.048 640.313 299.525 640.195 299.131 cv
640.06 298.746 639.767 298.473 639.297 298.32 cv
638.716 298.131 638.194 298.181 637.736 298.455 cv
637.277 298.73 636.948 299.197 636.735 299.853 cv
635.494 303.673 li
634.381 303.311 li
635.694 299.268 li
635.903 298.625 635.936 298.103 635.818 297.709 cv
635.684 297.324 635.377 297.047 634.908 296.894 cv
634.339 296.709 633.817 296.758 633.359 297.033 cv
632.9 297.308 632.571 297.775 632.358 298.43 cv
631.117 302.251 li
630.004 301.889 li
632.201 295.126 li
633.314 295.488 li
632.973 296.539 li
633.353 296.211 633.762 296.002 634.185 295.921 cv
634.595 295.836 635.048 295.873 635.542 296.034 cv
636.037 296.195 636.405 296.451 636.671 296.811 cv
636.936 297.171 637.063 297.622 637.084 298.148 cv
f
643.488 305.15 mo
642.327 308.723 li
641.215 308.361 li
644.244 299.039 li
645.356 299.401 li
645.023 300.427 li
645.374 300.103 645.767 299.903 646.19 299.822 cv
646.613 299.741 647.078 299.782 647.572 299.943 cv
648.388 300.208 648.948 300.759 649.258 301.57 cv
649.552 302.39 649.534 303.328 649.189 304.391 cv
648.843 305.454 648.303 306.236 647.587 306.714 cv
646.859 307.188 646.086 307.292 645.27 307.027 cv
644.776 306.867 644.375 306.627 644.077 306.325 cv
643.779 306.023 643.578 305.63 643.488 305.15 cv
648.039 304.018 mo
648.304 303.202 648.336 302.515 648.155 301.936 cv
647.961 301.354 647.58 300.971 646.999 300.782 cv
646.406 300.589 645.872 300.675 645.385 301.037 cv
644.886 301.394 644.521 301.972 644.256 302.788 cv
643.991 303.604 643.942 304.299 644.136 304.882 cv
644.317 305.46 644.702 305.831 645.296 306.024 cv
645.877 306.213 646.407 306.139 646.905 305.782 cv
647.392 305.42 647.774 304.834 648.039 304.018 cv
f
652.987 298.969 mo
654.1 299.33 li
651.047 308.727 li
649.934 308.365 li
652.987 298.969 li
f
660.347 307.702 mo
660.17 308.246 li
655.064 306.587 li
654.864 307.37 654.894 308.035 655.186 308.568 cv
655.465 309.096 655.97 309.478 656.711 309.72 cv
657.132 309.856 657.568 309.943 657.996 309.973 cv
658.424 310.003 658.884 309.974 659.352 309.88 cv
659.01 310.931 li
658.559 310.976 658.106 310.979 657.662 310.917 cv
657.217 310.854 656.769 310.763 656.348 310.627 cv
655.26 310.273 654.508 309.687 654.078 308.864 cv
653.648 308.041 653.616 307.087 653.966 306.012 cv
654.323 304.911 654.905 304.13 655.712 303.667 cv
656.514 303.217 657.439 303.149 658.452 303.478 cv
659.367 303.775 659.988 304.305 660.331 305.059 cv
660.657 305.821 660.672 306.701 660.347 307.702 cv
659.338 307.019 mo
659.523 306.409 659.507 305.871 659.306 305.396 cv
659.088 304.929 658.703 304.598 658.159 304.422 cv
657.541 304.221 656.986 304.246 656.503 304.471 cv
656.02 304.697 655.636 305.119 655.382 305.734 cv
659.338 307.019 li
f
668.798 307.017 mo
665.281 309.511 li
666.724 313.82 li
665.414 313.395 li
664.312 310.098 li
661.482 312.117 li
660.172 311.691 li
663.942 309.007 li
662.591 305.001 li
663.902 305.426 li
664.911 308.42 li
667.488 306.591 li
668.798 307.017 li
f
663.21 263.286 mo
663.21 266.786 li
f
663.21 263.286 mo
663.21 266.786 li
@
630.965 273.111 mo
630.579 274.298 li
630.182 273.923 629.801 273.621 629.43 273.377 cv
629.041 273.142 628.666 272.952 628.295 272.831 cv
627.627 272.614 627.064 272.581 626.625 272.712 cv
626.182 272.855 625.888 273.17 625.736 273.64 cv
625.607 274.035 625.618 274.381 625.801 274.659 cv
625.968 274.945 626.373 275.255 627 275.595 cv
627.694 275.985 li
628.54 276.451 629.107 276.977 629.4 277.55 cv
629.688 278.136 629.721 278.789 629.484 279.519 cv
629.199 280.397 628.69 280.956 627.964 281.212 cv
627.226 281.464 626.3 281.41 625.175 281.044 cv
624.742 280.903 624.301 280.705 623.847 280.462 cv
623.393 280.219 622.943 279.922 622.5 279.56 cv
622.91 278.299 li
623.312 278.744 623.726 279.11 624.151 279.399 cv
624.573 279.7 625.023 279.915 625.493 280.067 cv
626.185 280.292 626.761 280.329 627.232 280.181 cv
627.692 280.03 628.014 279.711 628.183 279.192 cv
628.327 278.747 628.304 278.356 628.112 278.021 cv
627.921 277.685 627.536 277.355 626.958 277.03 cv
626.264 276.641 li
625.405 276.171 624.843 275.673 624.563 275.145 cv
624.28 274.629 624.255 274.033 624.479 273.341 cv
624.737 272.55 625.214 272.008 625.931 271.735 cv
626.636 271.458 627.491 271.476 628.48 271.798 cv
628.901 271.934 629.309 272.108 629.73 272.327 cv
630.138 272.542 630.543 272.81 630.965 273.111 cv
f
634.452 274.285 mo
633.829 276.201 li
636.116 276.944 li
635.835 277.81 li
633.548 277.067 li
632.355 280.739 li
632.174 281.295 632.132 281.678 632.232 281.874 cv
632.328 282.083 632.613 282.258 633.083 282.41 cv
634.22 282.78 li
633.919 283.707 li
632.782 283.338 li
631.916 283.057 631.375 282.703 631.158 282.277 cv
630.941 281.851 630.969 281.218 631.242 280.377 cv
632.435 276.705 li
631.619 276.44 li
631.9 275.574 li
632.716 275.84 li
633.339 273.923 li
634.452 274.285 li
f
641.157 279.73 mo
641.058 279.616 640.938 279.522 640.801 279.437 cv
640.661 279.364 640.508 279.287 640.335 279.231 cv
639.705 279.026 639.154 279.08 638.688 279.379 cv
638.209 279.675 637.86 280.204 637.611 280.97 cv
636.454 284.531 li
635.341 284.169 li
637.538 277.406 li
638.651 277.768 li
638.31 278.819 li
638.665 278.483 639.074 278.274 639.509 278.197 cv
639.945 278.12 640.434 278.17 640.978 278.346 cv
641.052 278.37 641.135 278.411 641.234 278.443 cv
641.316 278.484 641.411 278.528 641.527 278.593 cv
641.157 279.73 li
f
641.216 283.126 mo
642.546 279.033 li
643.658 279.395 li
642.341 283.45 li
642.132 284.093 642.103 284.603 642.246 285.005 cv
642.388 285.407 642.707 285.688 643.214 285.853 cv
643.807 286.045 644.35 286.017 644.821 285.746 cv
645.291 285.475 645.633 285.012 645.85 284.344 cv
647.095 280.512 li
648.208 280.873 li
646.011 287.636 li
644.898 287.275 li
645.235 286.236 li
644.827 286.568 644.409 286.76 643.999 286.846 cv
643.58 286.915 643.14 286.881 642.67 286.728 cv
641.891 286.475 641.374 286.047 641.135 285.437 cv
640.879 284.834 640.911 284.065 641.216 283.126 cv
645.392 279.78 mo
645.392 279.78 li
f
655.282 283.459 mo
654.945 284.497 li
654.68 284.22 654.411 283.996 654.117 283.805 cv
653.824 283.614 653.531 283.464 653.21 283.359 cv
652.493 283.126 651.848 283.177 651.303 283.505 cv
650.759 283.834 650.352 284.413 650.087 285.229 cv
649.818 286.057 649.807 286.765 650.054 287.351 cv
650.301 287.937 650.797 288.344 651.514 288.577 cv
651.836 288.681 652.157 288.745 652.507 288.763 cv
652.856 288.78 653.209 288.745 653.587 288.676 cv
653.254 289.702 li
652.884 289.746 652.526 289.753 652.185 289.711 cv
651.831 289.664 651.46 289.585 651.089 289.464 cv
650.076 289.135 649.36 288.56 648.976 287.725 cv
648.575 286.897 648.559 285.935 648.913 284.847 cv
649.27 283.747 649.848 282.978 650.659 282.544 cv
651.469 282.111 652.402 282.058 653.466 282.404 cv
653.812 282.516 654.133 282.662 654.431 282.84 cv
654.728 283.019 655.018 283.222 655.282 283.459 cv
f
659.019 282.267 mo
658.396 284.183 li
660.683 284.927 li
660.402 285.792 li
658.115 285.049 li
656.922 288.721 li
656.741 289.277 656.699 289.66 656.799 289.856 cv
656.895 290.065 657.18 290.24 657.65 290.393 cv
658.787 290.762 li
658.486 291.69 li
657.348 291.32 li
656.483 291.039 655.942 290.685 655.725 290.259 cv
655.508 289.833 655.536 289.2 655.809 288.359 cv
657.002 284.687 li
656.186 284.422 li
656.467 283.557 li
657.283 283.822 li
657.906 281.905 li
659.019 282.267 li
f
660.701 289.457 mo
662.031 285.364 li
663.144 285.726 li
661.826 289.781 li
661.617 290.424 661.588 290.934 661.731 291.336 cv
661.874 291.738 662.192 292.019 662.699 292.184 cv
663.293 292.377 663.835 292.348 664.306 292.077 cv
664.777 291.806 665.118 291.343 665.335 290.676 cv
666.581 286.843 li
667.693 287.204 li
665.496 293.967 li
664.383 293.606 li
664.721 292.567 li
664.312 292.899 663.894 293.091 663.484 293.177 cv
663.065 293.246 662.625 293.212 662.155 293.059 cv
661.376 292.806 660.859 292.379 660.62 291.768 cv
660.365 291.165 660.396 290.396 660.701 289.457 cv
664.877 286.112 mo
664.877 286.112 li
f
673.563 290.26 mo
673.463 290.145 673.343 290.052 673.207 289.966 cv
673.067 289.893 672.914 289.816 672.741 289.76 cv
672.11 289.555 671.56 289.609 671.093 289.908 cv
670.615 290.204 670.265 290.733 670.016 291.499 cv
668.859 295.06 li
667.746 294.698 li
669.944 287.935 li
671.056 288.297 li
670.715 289.348 li
671.07 289.012 671.48 288.804 671.915 288.726 cv
672.35 288.649 672.84 288.699 673.384 288.875 cv
673.458 288.9 673.54 288.94 673.639 288.972 cv
673.722 289.013 673.817 289.057 673.932 289.122 cv
673.563 290.26 li
f
679.84 294.582 mo
679.663 295.126 li
674.557 293.467 li
674.357 294.249 674.387 294.915 674.679 295.447 cv
674.958 295.976 675.463 296.358 676.205 296.599 cv
676.625 296.736 677.062 296.823 677.489 296.853 cv
677.917 296.882 678.377 296.854 678.845 296.76 cv
678.504 297.811 li
678.052 297.856 677.6 297.859 677.155 297.797 cv
676.711 297.734 676.262 297.643 675.842 297.507 cv
674.754 297.153 674.001 296.567 673.571 295.744 cv
673.142 294.921 673.11 293.967 673.459 292.891 cv
673.817 291.791 674.399 291.01 675.205 290.547 cv
676.007 290.097 676.932 290.028 677.946 290.358 cv
678.861 290.655 679.481 291.185 679.824 291.939 cv
680.151 292.701 680.165 293.581 679.84 294.582 cv
678.832 293.899 mo
679.016 293.289 679 292.751 678.799 292.275 cv
678.582 291.808 678.197 291.478 677.653 291.301 cv
677.035 291.101 676.48 291.125 675.996 291.351 cv
675.513 291.577 675.13 291.999 674.875 292.613 cv
678.832 293.899 li
f
683.447 289.835 mo
684.671 290.233 li
681.742 299.246 li
680.518 298.848 li
683.447 289.835 li
f
691.067 297.765 mo
689.741 301.845 li
688.629 301.484 li
689.942 297.441 li
690.151 296.798 690.168 296.284 690.025 295.882 cv
689.882 295.48 689.563 295.199 689.069 295.038 cv
688.463 294.841 687.929 294.886 687.458 295.157 cv
686.987 295.428 686.646 295.891 686.433 296.546 cv
685.191 300.367 li
684.079 300.005 li
686.276 293.242 li
687.389 293.604 li
687.047 294.655 li
687.436 294.343 687.845 294.135 688.28 294.057 cv
688.703 293.976 689.16 294.001 689.629 294.154 cv
690.396 294.403 690.909 294.843 691.148 295.454 cv
691.387 296.065 691.368 296.838 691.067 297.765 cv
f
698.432 294.281 mo
698.131 295.208 li
697.068 294.862 li
696.672 294.734 696.36 294.728 696.159 294.84 cv
695.946 294.949 695.78 295.209 695.643 295.63 cv
695.45 296.223 li
697.28 296.818 li
696.999 297.683 li
695.169 297.088 li
693.253 302.986 li
692.14 302.624 li
694.056 296.727 li
692.993 296.381 li
693.274 295.516 li
694.337 295.861 li
694.49 295.392 li
694.731 294.65 695.085 294.15 695.544 293.916 cv
696.002 293.682 696.615 293.69 697.381 293.939 cv
698.432 294.281 li
f
700.872 298.846 mo
700.279 298.653 699.732 298.735 699.234 299.093 cv
698.735 299.45 698.357 300.024 698.096 300.828 cv
697.831 301.644 697.786 302.327 697.98 302.909 cv
698.173 303.491 698.571 303.867 699.177 304.063 cv
699.77 304.256 700.312 304.186 700.811 303.829 cv
701.31 303.472 701.688 302.897 701.953 302.081 cv
702.21 301.29 702.246 300.591 702.053 300.009 cv
701.859 299.426 701.466 299.039 700.872 298.846 cv
701.177 297.906 mo
702.142 298.22 702.791 298.786 703.147 299.585 cv
703.486 300.392 703.489 301.35 703.128 302.463 cv
702.766 303.576 702.201 304.349 701.456 304.79 cv
700.694 305.24 699.84 305.304 698.875 304.991 cv
697.899 304.673 697.233 304.115 696.893 303.308 cv
696.55 302.513 696.56 301.559 696.921 300.446 cv
697.283 299.334 697.836 298.556 698.585 298.103 cv
699.33 297.661 700.201 297.589 701.177 297.906 cv
f
710.92 263.286 mo
710.92 266.786 li
f
710.92 263.286 mo
710.92 266.786 li
@
681.172 273.944 mo
680.754 275.23 li
680.455 274.723 680.114 274.298 679.709 273.947 cv
679.299 273.609 678.849 273.354 678.33 273.185 cv
677.291 272.847 676.396 272.912 675.647 273.366 cv
674.898 273.819 674.333 274.634 673.947 275.82 cv
673.561 277.007 673.536 278.011 673.875 278.818 cv
674.214 279.625 674.905 280.191 675.944 280.529 cv
676.463 280.698 676.973 280.768 677.507 280.723 cv
678.037 280.69 678.563 280.546 679.107 280.299 cv
678.694 281.573 li
678.164 281.729 677.639 281.79 677.125 281.774 cv
676.611 281.757 676.08 281.667 675.548 281.494 cv
674.188 281.052 673.245 280.294 672.723 279.209 cv
672.201 278.124 672.187 276.862 672.661 275.403 cv
673.131 273.956 673.884 272.943 674.948 272.36 cv
676.009 271.788 677.221 271.717 678.581 272.159 cv
679.125 272.336 679.608 272.575 680.034 272.864 cv
680.455 273.165 680.844 273.523 681.172 273.944 cv
f
684.864 277.727 mo
684.27 277.534 683.724 277.617 683.225 277.974 cv
682.727 278.331 682.349 278.906 682.088 279.709 cv
681.822 280.525 681.778 281.208 681.972 281.79 cv
682.165 282.373 682.563 282.748 683.169 282.945 cv
683.762 283.138 684.304 283.068 684.803 282.71 cv
685.302 282.353 685.68 281.779 685.945 280.963 cv
686.202 280.171 686.238 279.472 686.044 278.89 cv
685.851 278.308 685.457 277.92 684.864 277.727 cv
685.169 276.788 mo
686.134 277.101 686.783 277.668 687.139 278.466 cv
687.478 279.274 687.481 280.232 687.12 281.344 cv
686.758 282.457 686.192 283.23 685.448 283.672 cv
684.686 284.121 683.832 284.185 682.867 283.872 cv
681.891 283.555 681.224 282.997 680.885 282.189 cv
680.542 281.394 680.551 280.44 680.913 279.328 cv
681.275 278.215 681.828 277.438 682.577 276.984 cv
683.322 276.543 684.193 276.47 685.169 276.788 cv
f
694.908 281.565 mo
695.34 281.159 695.791 280.909 696.254 280.786 cv
696.714 280.675 697.211 280.7 697.743 280.873 cv
698.435 281.098 698.899 281.522 699.122 282.141 cv
699.344 282.76 699.313 283.529 699.02 284.432 cv
697.694 288.512 li
696.581 288.15 li
697.895 284.107 li
698.104 283.465 698.137 282.942 698.019 282.548 cv
697.884 282.163 697.591 281.89 697.121 281.737 cv
696.54 281.548 696.018 281.597 695.56 281.872 cv
695.101 282.147 694.772 282.614 694.559 283.269 cv
693.318 287.09 li
692.205 286.728 li
693.518 282.685 li
693.727 282.042 693.76 281.52 693.642 281.126 cv
693.508 280.741 693.201 280.464 692.732 280.311 cv
692.163 280.126 691.641 280.175 691.183 280.45 cv
690.724 280.725 690.395 281.192 690.182 281.847 cv
688.941 285.668 li
687.828 285.306 li
690.025 278.543 li
691.138 278.905 li
690.797 279.956 li
691.177 279.628 691.586 279.419 692.009 279.338 cv
692.419 279.253 692.872 279.29 693.366 279.451 cv
693.861 279.612 694.229 279.868 694.495 280.228 cv
694.76 280.587 694.887 281.039 694.908 281.565 cv
f
705.863 287.434 mo
706.128 286.618 706.16 285.932 705.979 285.353 cv
705.785 284.771 705.404 284.388 704.823 284.199 cv
704.229 284.006 703.696 284.092 703.209 284.454 cv
702.71 284.811 702.345 285.389 702.08 286.205 cv
701.815 287.021 701.766 287.716 701.96 288.299 cv
702.141 288.877 702.526 289.248 703.12 289.441 cv
703.701 289.63 704.231 289.556 704.729 289.199 cv
705.216 288.837 705.598 288.25 705.863 287.434 cv
702.847 283.844 mo
703.198 283.52 703.591 283.32 704.014 283.239 cv
704.437 283.157 704.902 283.199 705.396 283.36 cv
706.212 283.625 706.771 284.176 707.082 284.987 cv
707.376 285.807 707.358 286.745 707.013 287.808 cv
706.667 288.871 706.126 289.652 705.411 290.131 cv
704.682 290.605 703.91 290.709 703.094 290.444 cv
702.6 290.284 702.199 290.044 701.901 289.742 cv
701.603 289.44 701.402 289.047 701.312 288.567 cv
700.983 289.581 li
699.87 289.219 li
702.923 279.823 li
704.036 280.184 li
702.847 283.844 li
f
709.956 285.019 mo
711.068 285.38 li
708.871 292.143 li
707.758 291.782 li
709.956 285.019 li
710.811 282.385 mo
711.924 282.747 li
711.466 284.156 li
710.353 283.795 li
710.811 282.385 li
f
718.147 290.647 mo
716.821 294.727 li
715.708 294.365 li
717.022 290.322 li
717.231 289.679 717.247 289.165 717.104 288.763 cv
716.962 288.362 716.643 288.08 716.148 287.92 cv
715.543 287.723 715.008 287.768 714.538 288.039 cv
714.067 288.31 713.725 288.773 713.512 289.428 cv
712.271 293.248 li
711.158 292.887 li
713.356 286.124 li
714.468 286.485 li
714.127 287.536 li
714.515 287.225 714.925 287.016 715.36 286.939 cv
715.783 286.858 716.239 286.883 716.709 287.036 cv
717.476 287.285 717.989 287.725 718.228 288.335 cv
718.467 288.946 718.448 289.719 718.147 290.647 cv
f
723.217 293.046 mo
722.315 292.753 721.66 292.663 721.25 292.748 cv
720.836 292.846 720.55 293.136 720.389 293.631 cv
720.261 294.026 720.28 294.388 720.467 294.695 cv
720.651 295.014 720.973 295.242 721.418 295.386 cv
722.036 295.587 722.599 295.538 723.115 295.213 cv
723.626 294.901 724 294.38 724.237 293.651 cv
724.318 293.403 li
723.217 293.046 li
725.579 293.308 mo
724.326 297.165 li
723.213 296.803 li
723.546 295.777 li
723.15 296.113 722.732 296.306 722.301 296.371 cv
721.87 296.435 721.368 296.382 720.824 296.205 cv
720.132 295.98 719.635 295.614 719.352 295.098 cv
719.069 294.582 719.039 293.999 719.252 293.343 cv
719.497 292.589 719.93 292.101 720.577 291.874 cv
721.209 291.655 722.027 291.702 723.041 292.032 cv
724.599 292.538 li
724.635 292.427 li
724.8 291.92 724.755 291.468 724.514 291.075 cv
724.268 290.695 723.847 290.394 723.241 290.197 cv
722.845 290.068 722.458 289.997 722.055 289.976 cv
721.652 289.954 721.262 289.977 720.872 290.042 cv
721.205 289.016 li
721.649 288.996 722.085 289.001 722.492 289.051 cv
722.9 289.102 723.287 289.173 723.657 289.293 cv
724.634 289.611 725.279 290.107 725.597 290.771 cv
725.914 291.434 725.912 292.281 725.579 293.308 cv
f
730.534 289.586 mo
729.911 291.503 li
732.198 292.246 li
731.917 293.111 li
729.63 292.368 li
728.437 296.04 li
728.256 296.597 728.213 296.979 728.314 297.176 cv
728.41 297.385 728.695 297.559 729.165 297.712 cv
730.302 298.082 li
730.001 299.009 li
728.863 298.639 li
727.998 298.358 727.457 298.005 727.24 297.579 cv
727.023 297.153 727.051 296.519 727.324 295.679 cv
728.517 292.007 li
727.701 291.742 li
727.982 290.876 li
728.798 291.141 li
729.421 289.225 li
730.534 289.586 li
f
733.657 292.72 mo
734.77 293.082 li
732.572 299.845 li
731.46 299.483 li
733.657 292.72 li
734.513 290.087 mo
735.625 290.448 li
735.167 291.858 li
734.055 291.496 li
734.513 290.087 li
f
739.462 295.467 mo
738.869 295.275 738.323 295.357 737.824 295.714 cv
737.325 296.071 736.947 296.646 736.686 297.449 cv
736.421 298.265 736.377 298.948 736.57 299.531 cv
736.764 300.113 737.161 300.488 737.767 300.685 cv
738.36 300.878 738.903 300.808 739.401 300.45 cv
739.9 300.093 740.278 299.519 740.543 298.703 cv
740.8 297.912 740.836 297.212 740.643 296.63 cv
740.449 296.048 740.056 295.66 739.462 295.467 cv
739.768 294.528 mo
740.732 294.841 741.382 295.408 741.737 296.207 cv
742.076 297.014 742.079 297.972 741.718 299.084 cv
741.356 300.197 740.791 300.97 740.046 301.412 cv
739.285 301.861 738.43 301.925 737.466 301.612 cv
736.489 301.295 735.823 300.737 735.484 299.929 cv
735.141 299.134 735.15 298.181 735.511 297.068 cv
735.873 295.955 736.426 295.178 737.175 294.724 cv
737.92 294.283 738.791 294.21 739.768 294.528 cv
f
749.415 300.806 mo
748.089 304.886 li
746.976 304.525 li
748.29 300.482 li
748.499 299.839 748.515 299.325 748.372 298.923 cv
748.23 298.521 747.911 298.24 747.416 298.079 cv
746.811 297.882 746.276 297.927 745.806 298.198 cv
745.335 298.469 744.993 298.932 744.78 299.587 cv
743.539 303.408 li
742.426 303.046 li
744.624 296.283 li
745.736 296.645 li
745.395 297.696 li
745.783 297.384 746.193 297.176 746.628 297.098 cv
747.051 297.017 747.507 297.042 747.977 297.195 cv
748.744 297.444 749.257 297.884 749.496 298.495 cv
749.735 299.106 749.716 299.879 749.415 300.806 cv
f
525.785 329.922 mo
525.169 330.986 524.721 332.022 524.427 333.044 cv
524.119 334.066 523.979 335.102 523.979 336.152 cv
523.979 337.216 524.119 338.252 524.427 339.274 cv
524.721 340.31 525.169 341.332 525.785 342.382 cv
524.693 342.382 li
524.007 341.304 523.489 340.268 523.153 339.232 cv
522.817 338.196 522.649 337.174 522.649 336.152 cv
522.649 335.144 522.817 334.122 523.153 333.086 cv
523.489 332.05 523.993 331 524.693 329.922 cv
525.785 329.922 li
f
533.723 336.726 mo
533.723 335.802 533.527 335.088 533.149 334.556 cv
532.757 334.024 532.239 333.758 531.581 333.758 cv
530.909 333.758 530.391 334.024 530.013 334.556 cv
529.621 335.088 529.439 335.802 529.439 336.726 cv
529.439 337.65 529.621 338.378 530.013 338.91 cv
530.391 339.442 530.909 339.694 531.581 339.694 cv
532.239 339.694 532.757 339.442 533.149 338.91 cv
533.527 338.378 533.723 337.65 533.723 336.726 cv
529.439 334.052 mo
529.691 333.604 530.027 333.268 530.433 333.044 cv
530.839 332.82 531.329 332.708 531.889 332.708 cv
532.813 332.708 533.569 333.086 534.157 333.814 cv
534.731 334.556 535.025 335.522 535.025 336.726 cv
535.025 337.93 534.731 338.91 534.157 339.638 cv
533.569 340.366 532.813 340.73 531.889 340.73 cv
531.329 340.73 530.839 340.618 530.433 340.408 cv
530.027 340.198 529.691 339.862 529.439 339.4 cv
529.439 340.548 li
528.179 340.548 li
528.179 329.908 li
529.439 329.908 li
529.439 334.052 li
f
536.914 329.922 mo
538.006 329.922 li
538.678 331 539.196 332.05 539.532 333.086 cv
539.868 334.122 540.05 335.144 540.05 336.152 cv
540.05 337.174 539.868 338.196 539.532 339.232 cv
539.196 340.268 538.678 341.304 538.006 342.382 cv
536.914 342.382 li
537.516 341.332 537.964 340.31 538.273 339.274 cv
538.566 338.252 538.721 337.216 538.721 336.152 cv
538.721 335.102 538.566 334.066 538.273 333.044 cv
537.964 332.022 537.516 330.986 536.914 329.922 cv
f
546.043 331.7 mo
544.167 336.782 li
547.919 336.782 li
546.043 331.7 li
545.259 330.342 mo
546.827 330.342 li
550.719 340.548 li
549.276 340.548 li
548.353 337.93 li
543.747 337.93 li
542.823 340.548 li
541.367 340.548 li
545.259 330.342 li
f
557.047 335.76 mo
557.341 335.872 557.635 336.082 557.915 336.404 cv
558.195 336.74 558.475 337.188 558.755 337.762 cv
560.155 340.548 li
558.671 340.548 li
557.369 337.93 li
557.033 337.258 556.697 336.796 556.389 336.572 cv
556.067 336.348 555.633 336.236 555.087 336.236 cv
553.589 336.236 li
553.589 340.548 li
552.203 340.548 li
552.203 330.342 li
555.325 330.342 li
556.487 330.342 557.355 330.594 557.929 331.07 cv
558.503 331.56 558.797 332.302 558.797 333.282 cv
558.797 333.926 558.643 334.472 558.349 334.892 cv
558.041 335.312 557.607 335.606 557.047 335.76 cv
553.589 331.476 mo
553.589 335.102 li
555.325 335.102 li
555.983 335.102 556.487 334.948 556.823 334.64 cv
557.159 334.332 557.341 333.884 557.341 333.282 cv
557.341 332.694 557.159 332.246 556.823 331.938 cv
556.487 331.63 555.983 331.476 555.325 331.476 cv
553.589 331.476 li
f
566.777 335.76 mo
567.071 335.872 567.365 336.082 567.645 336.404 cv
567.925 336.74 568.205 337.188 568.485 337.762 cv
569.885 340.548 li
568.401 340.548 li
567.099 337.93 li
566.763 337.258 566.427 336.796 566.119 336.572 cv
565.797 336.348 565.363 336.236 564.817 336.236 cv
563.319 336.236 li
563.319 340.548 li
561.933 340.548 li
561.933 330.342 li
565.055 330.342 li
566.217 330.342 567.085 330.594 567.659 331.07 cv
568.233 331.56 568.527 332.302 568.527 333.282 cv
568.527 333.926 568.373 334.472 568.079 334.892 cv
567.771 335.312 567.337 335.606 566.777 335.76 cv
563.319 331.476 mo
563.319 335.102 li
565.055 335.102 li
565.713 335.102 566.217 334.948 566.553 334.64 cv
566.889 334.332 567.071 333.884 567.071 333.282 cv
567.071 332.694 566.889 332.246 566.553 331.938 cv
566.217 331.63 565.713 331.476 565.055 331.476 cv
563.319 331.476 li
f
574.743 331.252 mo
574.029 331.252 573.497 331.602 573.133 332.302 cv
572.769 333.002 572.601 334.052 572.601 335.452 cv
572.601 336.852 572.769 337.902 573.133 338.602 cv
573.497 339.302 574.029 339.652 574.743 339.652 cv
575.457 339.652 575.989 339.302 576.353 338.602 cv
576.703 337.902 576.885 336.852 576.885 335.452 cv
576.885 334.052 576.703 333.002 576.353 332.302 cv
575.989 331.602 575.457 331.252 574.743 331.252 cv
574.743 330.16 mo
575.877 330.16 576.745 330.622 577.361 331.518 cv
577.963 332.428 578.271 333.744 578.271 335.452 cv
578.271 337.174 577.963 338.49 577.361 339.386 cv
576.745 340.282 575.877 340.73 574.743 340.73 cv
573.595 340.73 572.713 340.282 572.111 339.386 cv
571.509 338.49 571.215 337.174 571.215 335.452 cv
571.215 333.744 571.509 332.428 572.111 331.518 cv
572.713 330.622 573.595 330.16 574.743 330.16 cv
f
580.693 338.812 mo
582.135 338.812 li
582.135 340.548 li
580.693 340.548 li
580.693 338.812 li
f
588.099 331.252 mo
587.385 331.252 586.853 331.602 586.489 332.302 cv
586.125 333.002 585.957 334.052 585.957 335.452 cv
585.957 336.852 586.125 337.902 586.489 338.602 cv
586.853 339.302 587.385 339.652 588.099 339.652 cv
588.813 339.652 589.345 339.302 589.709 338.602 cv
590.059 337.902 590.241 336.852 590.241 335.452 cv
590.241 334.052 590.059 333.002 589.709 332.302 cv
589.345 331.602 588.813 331.252 588.099 331.252 cv
588.099 330.16 mo
589.233 330.16 590.101 330.622 590.717 331.518 cv
591.319 332.428 591.627 333.744 591.627 335.452 cv
591.627 337.174 591.319 338.49 590.717 339.386 cv
590.101 340.282 589.233 340.73 588.099 340.73 cv
586.951 340.73 586.069 340.282 585.467 339.386 cv
584.865 338.49 584.571 337.174 584.571 335.452 cv
584.571 333.744 584.865 332.428 585.467 331.518 cv
586.069 330.622 586.951 330.16 588.099 330.16 cv
f
594.063 330.342 mo
599.481 330.342 li
599.481 331.504 li
595.323 331.504 li
595.323 334.01 li
595.519 333.94 595.729 333.884 595.925 333.856 cv
596.121 333.828 596.331 333.8 596.527 333.8 cv
597.661 333.8 598.557 334.122 599.229 334.738 cv
599.901 335.368 600.237 336.208 600.237 337.272 cv
600.237 338.378 599.887 339.232 599.201 339.834 cv
598.515 340.436 597.549 340.73 596.317 340.73 cv
595.883 340.73 595.449 340.688 595.001 340.632 cv
594.553 340.562 594.105 340.464 593.629 340.31 cv
593.629 338.924 li
594.035 339.148 594.455 339.316 594.903 339.428 cv
595.337 339.54 595.799 339.582 596.289 339.582 cv
597.073 339.582 597.703 339.386 598.165 338.966 cv
598.613 338.546 598.851 337.986 598.851 337.272 cv
598.851 336.572 598.613 336.012 598.165 335.592 cv
597.703 335.172 597.073 334.962 596.289 334.962 cv
595.925 334.962 595.547 335.004 595.183 335.088 cv
594.819 335.172 594.441 335.298 594.063 335.466 cv
594.063 330.342 li
f
412.016 263.286 mo
408.516 263.286 li
f
412.016 263.286 mo
408.516 263.286 li
@
387.202 259.311 mo
386.488 259.311 385.956 259.661 385.592 260.361 cv
385.228 261.061 385.06 262.111 385.06 263.511 cv
385.06 264.911 385.228 265.961 385.592 266.661 cv
385.956 267.361 386.488 267.711 387.202 267.711 cv
387.916 267.711 388.448 267.361 388.812 266.661 cv
389.162 265.961 389.344 264.911 389.344 263.511 cv
389.344 262.111 389.162 261.061 388.812 260.361 cv
388.448 259.661 387.916 259.311 387.202 259.311 cv
387.202 258.219 mo
388.336 258.219 389.204 258.681 389.82 259.577 cv
390.422 260.487 390.73 261.803 390.73 263.511 cv
390.73 265.233 390.422 266.549 389.82 267.445 cv
389.204 268.341 388.336 268.789 387.202 268.789 cv
386.054 268.789 385.172 268.341 384.57 267.445 cv
383.968 266.549 383.674 265.233 383.674 263.511 cv
383.674 261.803 383.968 260.487 384.57 259.577 cv
385.172 258.681 386.054 258.219 387.202 258.219 cv
f
393.152 266.871 mo
394.594 266.871 li
394.594 268.607 li
393.152 268.607 li
393.152 266.871 li
f
401.398 259.605 mo
397.912 265.051 li
401.398 265.051 li
401.398 259.605 li
401.034 258.401 mo
402.77 258.401 li
402.77 265.051 li
404.226 265.051 li
404.226 266.199 li
402.77 266.199 li
402.77 268.607 li
401.398 268.607 li
401.398 266.199 li
396.792 266.199 li
396.792 264.869 li
401.034 258.401 li
f
412.016 231.95 mo
408.516 231.95 li
f
412.016 231.95 mo
408.516 231.95 li
@
387.202 227.974 mo
386.488 227.974 385.956 228.324 385.592 229.024 cv
385.228 229.724 385.06 230.774 385.06 232.174 cv
385.06 233.574 385.228 234.624 385.592 235.324 cv
385.956 236.024 386.488 236.374 387.202 236.374 cv
387.916 236.374 388.448 236.024 388.812 235.324 cv
389.162 234.624 389.344 233.574 389.344 232.174 cv
389.344 230.774 389.162 229.724 388.812 229.024 cv
388.448 228.324 387.916 227.974 387.202 227.974 cv
387.202 226.882 mo
388.336 226.882 389.204 227.344 389.82 228.24 cv
390.422 229.15 390.73 230.466 390.73 232.174 cv
390.73 233.896 390.422 235.212 389.82 236.108 cv
389.204 237.004 388.336 237.452 387.202 237.452 cv
386.054 237.452 385.172 237.004 384.57 236.108 cv
383.968 235.212 383.674 233.896 383.674 232.174 cv
383.674 230.466 383.968 229.15 384.57 228.24 cv
385.172 227.344 386.054 226.882 387.202 226.882 cv
f
393.152 235.534 mo
394.594 235.534 li
394.594 237.27 li
393.152 237.27 li
393.152 235.534 li
f
397.618 227.064 mo
403.036 227.064 li
403.036 228.226 li
398.878 228.226 li
398.878 230.732 li
399.074 230.662 399.284 230.606 399.48 230.578 cv
399.676 230.55 399.886 230.522 400.082 230.522 cv
401.216 230.522 402.112 230.844 402.784 231.46 cv
403.456 232.09 403.792 232.93 403.792 233.994 cv
403.792 235.1 403.442 235.954 402.756 236.556 cv
402.07 237.158 401.104 237.452 399.872 237.452 cv
399.438 237.452 399.004 237.41 398.556 237.354 cv
398.108 237.284 397.66 237.186 397.184 237.032 cv
397.184 235.646 li
397.59 235.87 398.01 236.038 398.458 236.15 cv
398.892 236.262 399.354 236.304 399.844 236.304 cv
400.628 236.304 401.258 236.108 401.72 235.688 cv
402.168 235.268 402.406 234.708 402.406 233.994 cv
402.406 233.294 402.168 232.734 401.72 232.314 cv
401.258 231.894 400.628 231.684 399.844 231.684 cv
399.48 231.684 399.102 231.726 398.738 231.81 cv
398.374 231.894 397.996 232.02 397.618 232.188 cv
397.618 227.064 li
f
412.016 200.613 mo
408.516 200.613 li
f
412.016 200.613 mo
408.516 200.613 li
@
387.202 196.637 mo
386.488 196.637 385.956 196.987 385.592 197.687 cv
385.228 198.387 385.06 199.437 385.06 200.837 cv
385.06 202.237 385.228 203.287 385.592 203.987 cv
385.956 204.687 386.488 205.037 387.202 205.037 cv
387.916 205.037 388.448 204.687 388.812 203.987 cv
389.162 203.287 389.344 202.237 389.344 200.837 cv
389.344 199.437 389.162 198.387 388.812 197.687 cv
388.448 196.987 387.916 196.637 387.202 196.637 cv
387.202 195.545 mo
388.336 195.545 389.204 196.007 389.82 196.903 cv
390.422 197.813 390.73 199.129 390.73 200.837 cv
390.73 202.559 390.422 203.875 389.82 204.771 cv
389.204 205.667 388.336 206.115 387.202 206.115 cv
386.054 206.115 385.172 205.667 384.57 204.771 cv
383.968 203.875 383.674 202.559 383.674 200.837 cv
383.674 199.129 383.968 197.813 384.57 196.903 cv
385.172 196.007 386.054 195.545 387.202 195.545 cv
f
393.152 204.197 mo
394.594 204.197 li
394.594 205.933 li
393.152 205.933 li
393.152 204.197 li
f
400.726 200.277 mo
400.11 200.277 399.62 200.501 399.256 200.921 cv
398.892 201.341 398.71 201.929 398.71 202.657 cv
398.71 203.399 398.892 203.987 399.256 204.407 cv
399.62 204.827 400.11 205.037 400.726 205.037 cv
401.342 205.037 401.832 204.827 402.196 204.407 cv
402.56 203.987 402.742 203.399 402.742 202.657 cv
402.742 201.929 402.56 201.341 402.196 200.921 cv
401.832 200.501 401.342 200.277 400.726 200.277 cv
403.47 195.951 mo
403.47 197.211 li
403.12 197.043 402.77 196.917 402.42 196.833 cv
402.056 196.749 401.706 196.707 401.37 196.707 cv
400.446 196.707 399.746 197.015 399.27 197.631 cv
398.794 198.247 398.514 199.185 398.458 200.417 cv
398.724 200.025 399.06 199.717 399.466 199.507 cv
399.872 199.297 400.32 199.185 400.81 199.185 cv
401.832 199.185 402.644 199.507 403.232 200.123 cv
403.82 200.739 404.128 201.593 404.128 202.657 cv
404.128 203.707 403.806 204.547 403.19 205.177 cv
402.574 205.807 401.748 206.115 400.726 206.115 cv
399.55 206.115 398.64 205.667 398.024 204.771 cv
397.394 203.875 397.086 202.559 397.086 200.837 cv
397.086 199.227 397.464 197.939 398.234 196.987 cv
398.99 196.035 400.026 195.545 401.314 195.545 cv
401.65 195.545 402 195.587 402.364 195.643 cv
402.714 195.713 403.078 195.811 403.47 195.951 cv
f
412.016 169.276 mo
408.516 169.276 li
f
412.016 169.276 mo
408.516 169.276 li
@
387.202 165.3 mo
386.488 165.3 385.956 165.65 385.592 166.35 cv
385.228 167.05 385.06 168.1 385.06 169.5 cv
385.06 170.9 385.228 171.95 385.592 172.65 cv
385.956 173.35 386.488 173.7 387.202 173.7 cv
387.916 173.7 388.448 173.35 388.812 172.65 cv
389.162 171.95 389.344 170.9 389.344 169.5 cv
389.344 168.1 389.162 167.05 388.812 166.35 cv
388.448 165.65 387.916 165.3 387.202 165.3 cv
387.202 164.208 mo
388.336 164.208 389.204 164.67 389.82 165.566 cv
390.422 166.476 390.73 167.792 390.73 169.5 cv
390.73 171.222 390.422 172.538 389.82 173.434 cv
389.204 174.33 388.336 174.778 387.202 174.778 cv
386.054 174.778 385.172 174.33 384.57 173.434 cv
383.968 172.538 383.674 171.222 383.674 169.5 cv
383.674 167.792 383.968 166.476 384.57 165.566 cv
385.172 164.67 386.054 164.208 387.202 164.208 cv
f
393.152 172.86 mo
394.594 172.86 li
394.594 174.596 li
393.152 174.596 li
393.152 172.86 li
f
397.254 164.39 mo
403.82 164.39 li
403.82 164.978 li
400.11 174.596 li
398.668 174.596 li
402.154 165.552 li
397.254 165.552 li
397.254 164.39 li
f
412.016 137.939 mo
408.516 137.939 li
f
412.016 137.939 mo
408.516 137.939 li
@
387.202 133.963 mo
386.488 133.963 385.956 134.313 385.592 135.013 cv
385.228 135.713 385.06 136.763 385.06 138.163 cv
385.06 139.563 385.228 140.613 385.592 141.313 cv
385.956 142.013 386.488 142.363 387.202 142.363 cv
387.916 142.363 388.448 142.013 388.812 141.313 cv
389.162 140.613 389.344 139.563 389.344 138.163 cv
389.344 136.763 389.162 135.713 388.812 135.013 cv
388.448 134.313 387.916 133.963 387.202 133.963 cv
387.202 132.871 mo
388.336 132.871 389.204 133.333 389.82 134.229 cv
390.422 135.139 390.73 136.455 390.73 138.163 cv
390.73 139.885 390.422 141.201 389.82 142.097 cv
389.204 142.993 388.336 143.441 387.202 143.441 cv
386.054 143.441 385.172 142.993 384.57 142.097 cv
383.968 141.201 383.674 139.885 383.674 138.163 cv
383.674 136.455 383.968 135.139 384.57 134.229 cv
385.172 133.333 386.054 132.871 387.202 132.871 cv
f
393.152 141.523 mo
394.594 141.523 li
394.594 143.259 li
393.152 143.259 li
393.152 141.523 li
f
400.558 138.415 mo
399.9 138.415 399.382 138.597 399.004 138.947 cv
398.626 139.297 398.444 139.773 398.444 140.389 cv
398.444 141.005 398.626 141.495 399.004 141.845 cv
399.382 142.195 399.9 142.363 400.558 142.363 cv
401.202 142.363 401.72 142.195 402.098 141.831 cv
402.476 141.481 402.672 141.005 402.672 140.389 cv
402.672 139.773 402.476 139.297 402.112 138.947 cv
401.734 138.597 401.216 138.415 400.558 138.415 cv
399.172 137.827 mo
398.584 137.687 398.122 137.407 397.786 137.001 cv
397.45 136.595 397.296 136.105 397.296 135.517 cv
397.296 134.705 397.576 134.061 398.164 133.585 cv
398.738 133.109 399.536 132.871 400.558 132.871 cv
401.566 132.871 402.364 133.109 402.952 133.585 cv
403.526 134.061 403.82 134.705 403.82 135.517 cv
403.82 136.105 403.652 136.595 403.316 137.001 cv
402.98 137.407 402.532 137.687 401.944 137.827 cv
402.602 137.981 403.12 138.289 403.498 138.737 cv
403.862 139.185 404.058 139.745 404.058 140.389 cv
404.058 141.383 403.75 142.139 403.148 142.657 cv
402.532 143.189 401.678 143.441 400.558 143.441 cv
399.424 143.441 398.556 143.189 397.954 142.657 cv
397.352 142.139 397.058 141.383 397.058 140.389 cv
397.058 139.745 397.24 139.185 397.618 138.737 cv
397.982 138.289 398.5 137.981 399.172 137.827 cv
398.668 135.643 mo
398.668 136.175 398.822 136.595 399.158 136.889 cv
399.494 137.183 399.956 137.323 400.558 137.323 cv
401.146 137.323 401.608 137.183 401.944 136.889 cv
402.28 136.595 402.448 136.175 402.448 135.643 cv
402.448 135.111 402.28 134.705 401.944 134.411 cv
401.608 134.117 401.146 133.963 400.558 133.963 cv
399.956 133.963 399.494 134.117 399.158 134.411 cv
398.822 134.705 398.668 135.111 398.668 135.643 cv
f
412.016 106.602 mo
408.516 106.602 li
f
412.016 106.602 mo
408.516 106.602 li
@
387.202 102.626 mo
386.488 102.626 385.956 102.976 385.592 103.676 cv
385.228 104.376 385.06 105.426 385.06 106.826 cv
385.06 108.226 385.228 109.276 385.592 109.976 cv
385.956 110.676 386.488 111.026 387.202 111.026 cv
387.916 111.026 388.448 110.676 388.812 109.976 cv
389.162 109.276 389.344 108.226 389.344 106.826 cv
389.344 105.426 389.162 104.376 388.812 103.676 cv
388.448 102.976 387.916 102.626 387.202 102.626 cv
387.202 101.534 mo
388.336 101.534 389.204 101.996 389.82 102.892 cv
390.422 103.802 390.73 105.118 390.73 106.826 cv
390.73 108.548 390.422 109.864 389.82 110.76 cv
389.204 111.656 388.336 112.104 387.202 112.104 cv
386.054 112.104 385.172 111.656 384.57 110.76 cv
383.968 109.864 383.674 108.548 383.674 106.826 cv
383.674 105.118 383.968 103.802 384.57 102.892 cv
385.172 101.996 386.054 101.534 387.202 101.534 cv
f
393.152 110.186 mo
394.594 110.186 li
394.594 111.922 li
393.152 111.922 li
393.152 110.186 li
f
397.646 111.712 mo
397.646 110.452 li
397.982 110.62 398.332 110.746 398.696 110.83 cv
399.046 110.914 399.396 110.956 399.746 110.956 cv
400.642 110.956 401.342 110.662 401.818 110.046 cv
402.294 109.43 402.574 108.506 402.658 107.246 cv
402.378 107.638 402.042 107.946 401.65 108.156 cv
401.244 108.366 400.796 108.464 400.306 108.464 cv
399.27 108.464 398.458 108.156 397.87 107.54 cv
397.282 106.924 396.988 106.084 396.988 105.006 cv
396.988 103.97 397.296 103.13 397.912 102.486 cv
398.528 101.856 399.354 101.534 400.39 101.534 cv
401.566 101.534 402.476 101.996 403.092 102.892 cv
403.708 103.802 404.03 105.118 404.03 106.826 cv
404.03 108.45 403.638 109.724 402.882 110.676 cv
402.112 111.628 401.09 112.104 399.802 112.104 cv
399.452 112.104 399.102 112.062 398.752 112.006 cv
398.388 111.95 398.024 111.852 397.646 111.712 cv
400.39 107.386 mo
401.006 107.386 401.496 107.176 401.86 106.756 cv
402.224 106.336 402.406 105.748 402.406 105.006 cv
402.406 104.278 402.224 103.69 401.86 103.27 cv
401.496 102.85 401.006 102.626 400.39 102.626 cv
399.774 102.626 399.284 102.85 398.92 103.27 cv
398.556 103.69 398.374 104.278 398.374 105.006 cv
398.374 105.748 398.556 106.336 398.92 106.756 cv
399.284 107.176 399.774 107.386 400.39 107.386 cv
f
412.016 75.2652 mo
408.516 75.2652 li
f
412.016 75.2652 mo
408.516 75.2652 li
@
384.486 79.4235 mo
386.74 79.4235 li
386.74 71.6395 li
384.29 72.1295 li
384.29 70.8695 li
386.726 70.3795 li
388.112 70.3795 li
388.112 79.4235 li
390.366 79.4235 li
390.366 80.5855 li
384.486 80.5855 li
384.486 79.4235 li
f
393.152 78.8495 mo
394.594 78.8495 li
394.594 80.5855 li
393.152 80.5855 li
393.152 78.8495 li
f
400.558 71.2895 mo
399.844 71.2895 399.312 71.6395 398.948 72.3395 cv
398.584 73.0395 398.416 74.0895 398.416 75.4895 cv
398.416 76.8895 398.584 77.9395 398.948 78.6395 cv
399.312 79.3395 399.844 79.6895 400.558 79.6895 cv
401.272 79.6895 401.804 79.3395 402.168 78.6395 cv
402.518 77.9395 402.7 76.8895 402.7 75.4895 cv
402.7 74.0895 402.518 73.0395 402.168 72.3395 cv
401.804 71.6395 401.272 71.2895 400.558 71.2895 cv
400.558 70.1975 mo
401.692 70.1975 402.56 70.6595 403.176 71.5555 cv
403.778 72.4655 404.086 73.7815 404.086 75.4895 cv
404.086 77.2115 403.778 78.5275 403.176 79.4235 cv
402.56 80.3195 401.692 80.7675 400.558 80.7675 cv
399.41 80.7675 398.528 80.3195 397.926 79.4235 cv
397.324 78.5275 397.03 77.2115 397.03 75.4895 cv
397.03 73.7815 397.324 72.4655 397.926 71.5555 cv
398.528 70.6595 399.41 70.1975 400.558 70.1975 cv
f
2 lc
0 lj
412.016 263.286 mo
412.016 59.5968 li
@
710.92 263.286 mo
710.92 59.5968 li
@
412.016 263.286 mo
710.92 263.286 li
@
412.016 59.5968 mo
710.92 59.5968 li
@
654.132 30.1274 mo
468.804 30.1274 li
467.947 30.1256 467.4 29.9165 467.057 29.5739 cv
466.715 29.2313 466.506 28.684 466.504 27.8274 cv
466.504 8.2898 li
466.506 7.43328 466.715 6.88592 467.057 6.5436 cv
467.4 6.2007 467.947 5.99162 468.804 5.98988 cv
654.132 5.98988 li
654.988 5.99162 655.536 6.2007 655.878 6.5436 cv
656.221 6.88592 656.43 7.43328 656.432 8.2898 cv
656.432 27.8274 li
656.43 28.684 656.221 29.2313 655.878 29.5739 cv
655.536 29.9165 654.988 30.1256 654.132 30.1274 cv
/1 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
654.142 31.1275 mo
654.139 31.1275 654.136 31.1275 654.132 31.1275 cv
468.804 31.1275 li
468.801 31.1275 468.797 31.1275 468.794 31.1275 cv
467.788 31.1275 466.939 30.8695 466.35 30.2811 cv
465.76 29.6902 465.502 28.8377 465.504 27.8274 cv
465.504 8.2898 li
465.502 7.27986 465.76 6.42709 466.35 5.83646 cv
466.939 5.24814 467.787 4.99002 468.792 4.99002 cv
468.796 4.99002 468.8 4.99002 468.804 4.99003 cv
654.132 4.99003 li
654.136 4.99002 654.14 4.99002 654.144 4.99002 cv
655.149 4.99002 655.997 5.24811 656.586 5.83646 cv
657.176 6.42709 657.434 7.27986 657.432 8.2898 cv
657.432 27.8274 li
657.434 28.8377 657.176 29.6902 656.586 30.2811 cv
655.997 30.8694 655.148 31.1275 654.142 31.1275 cv
468.804 30.1274 mo
654.132 30.1274 li
654.988 30.1256 655.536 29.9165 655.878 29.5739 cv
656.221 29.2313 656.43 28.684 656.432 27.8274 cv
656.432 8.2898 li
656.43 7.43328 656.221 6.88592 655.878 6.5436 cv
655.536 6.2007 654.988 5.99162 654.132 5.98988 cv
468.804 5.98988 li
467.947 5.99162 467.4 6.2007 467.057 6.5436 cv
466.715 6.88592 466.506 7.43328 466.504 8.2898 cv
466.504 27.8274 li
466.506 28.684 466.715 29.2313 467.057 29.5739 cv
467.4 29.9165 467.947 30.1256 468.804 30.1274 cv
468.804 30.1274 li
.69482 .6318 .621515 .583612 cmyk
f
471.604 21.7305 mo
499.604 21.7305 li
499.604 11.9305 li
471.604 11.9305 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
1 lw
0 lc
471.604 21.7305 mo
499.604 21.7305 li
499.604 11.9305 li
471.604 11.9305 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
512.176 11.5245 mo
518.63 11.5245 li
518.63 12.6865 li
513.562 12.6865 li
513.562 15.7105 li
518.42 15.7105 li
518.42 16.8725 li
513.562 16.8725 li
513.562 20.5685 li
518.756 20.5685 li
518.756 21.7305 li
512.176 21.7305 li
512.176 11.5245 li
f
521.024 11.5245 mo
522.41 11.5245 li
522.41 20.5685 li
527.38 20.5685 li
527.38 21.7305 li
521.024 21.7305 li
521.024 11.5245 li
f
530.208 12.6585 mo
530.208 16.4945 li
531.944 16.4945 li
532.588 16.4945 533.078 16.3405 533.428 16.0045 cv
533.778 15.6685 533.96 15.1925 533.96 14.5765 cv
533.96 13.9605 533.778 13.4985 533.428 13.1625 cv
533.078 12.8265 532.588 12.6585 531.944 12.6585 cv
530.208 12.6585 li
528.822 11.5245 mo
531.944 11.5245 li
533.078 11.5245 533.946 11.7905 534.534 12.3085 cv
535.122 12.8265 535.416 13.5825 535.416 14.5765 cv
535.416 15.5845 535.122 16.3545 534.534 16.8585 cv
533.946 17.3765 533.078 17.6285 531.944 17.6285 cv
530.208 17.6285 li
530.208 21.7305 li
528.822 21.7305 li
528.822 11.5245 li
f
543.032 24.0405 mo
543.032 25.0205 li
535.766 25.0205 li
535.766 24.0405 li
543.032 24.0405 li
f
550.578 17.1105 mo
550.578 21.7305 li
549.318 21.7305 li
549.318 17.1525 li
549.318 16.4245 549.164 15.8925 548.884 15.5285 cv
548.604 15.1645 548.184 14.9825 547.624 14.9825 cv
546.938 14.9825 546.406 15.2065 546.014 15.6405 cv
545.622 16.0745 545.426 16.6625 545.426 17.4045 cv
545.426 21.7305 li
544.166 21.7305 li
544.166 14.0725 li
545.426 14.0725 li
545.426 15.2625 li
545.72 14.8145 546.07 14.4645 546.49 14.2405 cv
546.896 14.0165 547.372 13.8905 547.904 13.8905 cv
548.772 13.8905 549.444 14.1705 549.892 14.7165 cv
550.34 15.2625 550.578 16.0605 550.578 17.1105 cv
f
557.97 14.2965 mo
557.97 15.4865 li
557.606 15.3185 557.242 15.1785 556.864 15.0805 cv
556.472 14.9965 556.08 14.9405 555.674 14.9405 cv
555.044 14.9405 554.568 15.0385 554.26 15.2345 cv
553.952 15.4305 553.798 15.7105 553.798 16.0885 cv
553.798 16.3825 553.91 16.6065 554.134 16.7745 cv
554.358 16.9425 554.806 17.1105 555.478 17.2505 cv
555.912 17.3485 li
556.808 17.5445 557.438 17.8245 557.816 18.1605 cv
558.18 18.5105 558.376 19.0005 558.376 19.6165 cv
558.376 20.3305 558.096 20.8905 557.536 21.2965 cv
556.976 21.7165 556.192 21.9125 555.212 21.9125 cv
554.792 21.9125 554.372 21.8705 553.924 21.8005 cv
553.476 21.7305 553.014 21.6185 552.524 21.4505 cv
552.524 20.1485 li
552.986 20.4005 553.448 20.5825 553.896 20.6945 cv
554.344 20.8205 554.792 20.8765 555.24 20.8765 cv
555.828 20.8765 556.29 20.7785 556.612 20.5825 cv
556.92 20.3865 557.088 20.0925 557.088 19.7145 cv
557.088 19.3785 556.962 19.1125 556.738 18.9305 cv
556.514 18.7485 556.01 18.5665 555.226 18.3985 cv
554.792 18.3005 li
554.008 18.1325 553.434 17.8805 553.098 17.5445 cv
552.748 17.2085 552.58 16.7465 552.58 16.1445 cv
552.58 15.4305 552.832 14.8705 553.336 14.4785 cv
553.84 14.0865 554.568 13.8905 555.52 13.8905 cv
555.982 13.8905 556.416 13.9325 556.836 14.0025 cv
557.242 14.0725 557.62 14.1705 557.97 14.2965 cv
f
587.054 21.7305 mo
615.054 21.7305 li
615.054 11.9305 li
587.054 11.9305 li
cp
1 /0 /CSD get_res sepcs
.588235 sep
f
587.054 21.7305 mo
615.054 21.7305 li
615.054 11.9305 li
587.054 11.9305 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
627.626 11.5245 mo
634.08 11.5245 li
634.08 12.6865 li
629.012 12.6865 li
629.012 15.7105 li
633.87 15.7105 li
633.87 16.8725 li
629.012 16.8725 li
629.012 20.5685 li
634.206 20.5685 li
634.206 21.7305 li
627.626 21.7305 li
627.626 11.5245 li
f
636.474 11.5245 mo
637.86 11.5245 li
637.86 20.5685 li
642.83 20.5685 li
642.83 21.7305 li
636.474 21.7305 li
636.474 11.5245 li
f
645.658 12.6585 mo
645.658 16.4945 li
647.394 16.4945 li
648.038 16.4945 648.528 16.3405 648.878 16.0045 cv
649.228 15.6685 649.41 15.1925 649.41 14.5765 cv
649.41 13.9605 649.228 13.4985 648.878 13.1625 cv
648.528 12.8265 648.038 12.6585 647.394 12.6585 cv
645.658 12.6585 li
644.272 11.5245 mo
647.394 11.5245 li
648.528 11.5245 649.396 11.7905 649.984 12.3085 cv
650.572 12.8265 650.866 13.5825 650.866 14.5765 cv
650.866 15.5845 650.572 16.3545 649.984 16.8585 cv
649.396 17.3765 648.528 17.6285 647.394 17.6285 cv
645.658 17.6285 li
645.658 21.7305 li
644.272 21.7305 li
644.272 11.5245 li
f
792.416 263.286 mo
1091.32 263.286 li
1091.32 59.5968 li
792.416 59.5968 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
gsave
792.416 263.286 mo
1091.32 263.286 li
1091.32 59.5969 li
792.416 59.5969 li
792.416 263.286 li
clp
805.179 388.634 mo
813.528 388.634 li
813.528 127.422 li
805.179 127.422 li
cp
f
805.179 388.634 mo
813.528 388.634 li
813.528 127.422 li
805.179 127.422 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
792.416 263.286 mo
1091.32 263.286 li
1091.32 59.5969 li
792.416 59.5969 li
792.416 263.286 li
clp
852.889 388.634 mo
861.238 388.634 li
861.238 148.286 li
852.889 148.286 li
cp
f
852.889 388.634 mo
861.238 388.634 li
861.238 148.286 li
852.889 148.286 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
792.416 263.286 mo
1091.32 263.286 li
1091.32 59.5969 li
792.416 59.5969 li
792.416 263.286 li
clp
900.599 388.634 mo
908.948 388.634 li
908.948 135.77 li
900.599 135.77 li
cp
f
900.599 388.634 mo
908.948 388.634 li
908.948 135.77 li
900.599 135.77 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
792.416 263.286 mo
1091.32 263.286 li
1091.32 59.5969 li
792.416 59.5969 li
792.416 263.286 li
clp
948.309 388.634 mo
956.658 388.634 li
956.658 134.727 li
948.309 134.727 li
cp
f
948.309 388.634 mo
956.658 388.634 li
956.658 134.727 li
948.309 134.727 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
792.416 263.286 mo
1091.32 263.286 li
1091.32 59.5969 li
792.416 59.5969 li
792.416 263.286 li
clp
996.019 388.634 mo
1004.37 388.634 li
1004.37 173.115 li
996.019 173.115 li
cp
f
996.019 388.634 mo
1004.37 388.634 li
1004.37 173.115 li
996.019 173.115 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
792.416 263.286 mo
1091.32 263.286 li
1091.32 59.5969 li
792.416 59.5969 li
792.416 263.286 li
clp
1043.73 388.634 mo
1052.08 388.634 li
1052.08 124.502 li
1043.73 124.502 li
cp
f
1043.73 388.634 mo
1052.08 388.634 li
1052.08 124.502 li
1043.73 124.502 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
792.416 263.286 mo
1091.32 263.286 li
1091.32 59.5969 li
792.416 59.5969 li
792.416 263.286 li
clp
813.528 388.634 mo
821.877 388.634 li
821.877 134.1 li
813.528 134.1 li
cp
1 /0 /CSD get_res sepcs
.588235 sep
f
813.528 388.634 mo
821.877 388.634 li
821.877 134.1 li
813.528 134.1 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
792.416 263.286 mo
1091.32 263.286 li
1091.32 59.5969 li
792.416 59.5969 li
792.416 263.286 li
clp
861.238 388.634 mo
869.587 388.634 li
869.587 147.243 li
861.238 147.243 li
cp
1 /0 /CSD get_res sepcs
.588235 sep
f
861.238 388.634 mo
869.587 388.634 li
869.587 147.243 li
861.238 147.243 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
792.416 263.286 mo
1091.32 263.286 li
1091.32 59.5969 li
792.416 59.5969 li
792.416 263.286 li
clp
908.948 388.634 mo
917.297 388.634 li
917.297 133.473 li
908.948 133.473 li
cp
1 /0 /CSD get_res sepcs
.588235 sep
f
908.948 388.634 mo
917.297 388.634 li
917.297 133.473 li
908.948 133.473 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
792.416 263.286 mo
1091.32 263.286 li
1091.32 59.5969 li
792.416 59.5969 li
792.416 263.286 li
clp
956.658 388.634 mo
965.007 388.634 li
965.007 141.195 li
956.658 141.195 li
cp
1 /0 /CSD get_res sepcs
.588235 sep
f
956.658 388.634 mo
965.007 388.634 li
965.007 141.195 li
956.658 141.195 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
792.416 263.286 mo
1091.32 263.286 li
1091.32 59.5969 li
792.416 59.5969 li
792.416 263.286 li
clp
1004.37 388.634 mo
1012.72 388.634 li
1012.72 164.77 li
1004.37 164.77 li
cp
1 /0 /CSD get_res sepcs
.588235 sep
f
1004.37 388.634 mo
1012.72 388.634 li
1012.72 164.77 li
1004.37 164.77 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
792.416 263.286 mo
1091.32 263.286 li
1091.32 59.5969 li
792.416 59.5969 li
792.416 263.286 li
clp
1052.08 388.634 mo
1060.43 388.634 li
1060.43 117.41 li
1052.08 117.41 li
cp
1 /0 /CSD get_res sepcs
.588235 sep
f
1052.08 388.634 mo
1060.43 388.634 li
1060.43 117.41 li
1052.08 117.41 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
852.769 263.286 mo
852.769 266.786 li
1 /0 /CSD get_res sepcs
1 sep
f
.8 lw
1 lj
852.769 263.286 mo
852.769 266.786 li
@
793.925 273.111 mo
793.539 274.298 li
793.142 273.923 792.761 273.621 792.389 273.377 cv
792.001 273.142 791.625 272.952 791.255 272.831 cv
790.587 272.614 790.023 272.581 789.585 272.712 cv
789.142 272.855 788.848 273.17 788.695 273.64 cv
788.567 274.035 788.578 274.381 788.761 274.659 cv
788.927 274.945 789.333 275.255 789.96 275.595 cv
790.654 275.985 li
791.5 276.451 792.067 276.977 792.359 277.55 cv
792.647 278.136 792.681 278.789 792.444 279.519 cv
792.159 280.397 791.649 280.956 790.924 281.212 cv
790.185 281.464 789.26 281.41 788.135 281.044 cv
787.702 280.903 787.261 280.705 786.807 280.462 cv
786.353 280.219 785.902 279.922 785.46 279.56 cv
785.869 278.299 li
786.272 278.744 786.685 279.11 787.111 279.399 cv
787.533 279.7 787.982 279.915 788.452 280.067 cv
789.145 280.292 789.72 280.329 790.192 280.181 cv
790.651 280.03 790.974 279.711 791.143 279.192 cv
791.287 278.747 791.264 278.356 791.072 278.021 cv
790.88 277.685 790.495 277.355 789.917 277.03 cv
789.224 276.641 li
788.365 276.171 787.802 275.673 787.523 275.145 cv
787.239 274.629 787.214 274.033 787.439 273.341 cv
787.696 272.55 788.173 272.008 788.891 271.735 cv
789.596 271.458 790.451 271.476 791.44 271.798 cv
791.86 271.934 792.269 272.108 792.69 272.327 cv
793.098 272.542 793.503 272.81 793.925 273.111 cv
f
797.412 274.285 mo
796.789 276.201 li
799.076 276.944 li
798.795 277.81 li
796.508 277.067 li
795.315 280.739 li
795.134 281.295 795.091 281.678 795.192 281.874 cv
795.288 282.083 795.573 282.258 796.043 282.41 cv
797.18 282.78 li
796.879 283.707 li
795.741 283.338 li
794.876 283.057 794.335 282.703 794.118 282.277 cv
793.901 281.851 793.929 281.218 794.202 280.377 cv
795.395 276.705 li
794.579 276.44 li
794.86 275.574 li
795.676 275.84 li
796.299 273.923 li
797.412 274.285 li
f
802.521 281.782 mo
801.618 281.488 800.964 281.399 800.554 281.484 cv
800.139 281.582 799.854 281.872 799.693 282.366 cv
799.564 282.762 799.583 283.124 799.771 283.43 cv
799.954 283.75 800.277 283.978 800.722 284.122 cv
801.34 284.323 801.903 284.274 802.418 283.949 cv
802.93 283.637 803.304 283.116 803.541 282.386 cv
803.621 282.139 li
802.521 281.782 li
804.883 282.043 mo
803.629 285.901 li
802.517 285.539 li
802.85 284.513 li
802.454 284.849 802.036 285.041 801.605 285.106 cv
801.174 285.171 800.672 285.117 800.128 284.941 cv
799.435 284.716 798.939 284.349 798.656 283.834 cv
798.372 283.318 798.343 282.734 798.556 282.079 cv
798.801 281.325 799.233 280.836 799.881 280.609 cv
800.512 280.391 801.331 280.438 802.345 280.768 cv
803.903 281.274 li
803.939 281.162 li
804.103 280.656 804.059 280.204 803.817 279.811 cv
803.572 279.43 803.15 279.129 802.545 278.932 cv
802.149 278.804 801.762 278.733 801.359 278.711 cv
800.956 278.69 800.565 278.713 800.175 278.778 cv
800.509 277.752 li
800.953 277.732 801.388 277.737 801.796 277.787 cv
802.203 277.837 802.59 277.908 802.961 278.029 cv
803.938 278.346 804.583 278.843 804.9 279.507 cv
805.218 280.17 805.216 281.017 804.883 282.043 cv
f
809.837 278.322 mo
809.214 280.239 li
811.502 280.982 li
811.221 281.847 li
808.933 281.104 li
807.74 284.776 li
807.559 285.332 807.517 285.715 807.617 285.912 cv
807.713 286.121 807.998 286.295 808.468 286.448 cv
809.606 286.817 li
809.304 287.745 li
808.167 287.375 li
807.301 287.094 806.76 286.74 806.543 286.314 cv
806.326 285.889 806.354 285.255 806.627 284.414 cv
807.821 280.742 li
807.005 280.477 li
807.286 279.612 li
808.102 279.877 li
808.724 277.961 li
809.837 278.322 li
f
812.961 281.456 mo
814.073 281.817 li
811.876 288.58 li
810.763 288.219 li
812.961 281.456 li
813.816 278.822 mo
814.929 279.184 li
814.471 280.593 li
813.358 280.232 li
813.816 278.822 li
f
820.648 284.172 mo
820.307 285.223 li
820.034 284.97 819.753 284.742 819.447 284.547 cv
819.125 284.361 818.795 284.199 818.436 284.082 cv
817.88 283.901 817.431 283.851 817.103 283.936 cv
816.775 284.021 816.558 284.224 816.45 284.558 cv
816.366 284.817 816.4 285.047 816.55 285.26 cv
816.699 285.473 817.047 285.75 817.6 286.066 cv
817.955 286.277 li
818.69 286.707 819.166 287.135 819.404 287.541 cv
819.625 287.954 819.657 288.443 819.48 288.987 cv
819.276 289.618 818.868 290.032 818.257 290.23 cv
817.642 290.44 816.893 290.388 816.027 290.107 cv
815.657 289.986 815.298 289.829 814.922 289.638 cv
814.547 289.448 814.171 289.216 813.786 288.928 cv
814.16 287.778 li
814.495 288.133 814.851 288.426 815.215 288.654 cv
815.574 288.893 815.954 289.071 816.349 289.2 cv
816.869 289.369 817.305 289.415 817.645 289.334 cv
817.974 289.249 818.206 289.038 818.315 288.704 cv
818.411 288.407 818.376 288.136 818.231 287.911 cv
818.085 287.686 817.692 287.381 817.048 287.008 cv
816.693 286.796 li
816.049 286.423 815.614 286.036 815.414 285.643 cv
815.201 285.246 815.185 284.789 815.358 284.258 cv
815.563 283.627 815.946 283.205 816.504 283.003 cv
817.061 282.802 817.761 282.838 818.601 283.111 cv
819.009 283.243 819.381 283.405 819.731 283.587 cv
820.07 283.766 820.376 283.961 820.648 284.172 cv
f
824.562 283.107 mo
823.94 285.023 li
826.227 285.766 li
825.946 286.632 li
823.658 285.888 li
822.465 289.56 li
822.285 290.117 822.242 290.5 822.342 290.696 cv
822.439 290.905 822.724 291.08 823.193 291.232 cv
824.331 291.602 li
824.03 292.529 li
822.892 292.16 li
822.027 291.878 821.485 291.525 821.268 291.099 cv
821.051 290.673 821.079 290.04 821.353 289.199 cv
822.546 285.527 li
821.73 285.262 li
822.011 284.396 li
822.827 284.661 li
823.45 282.745 li
824.562 283.107 li
f
827.686 286.24 mo
828.799 286.602 li
826.601 293.365 li
825.488 293.003 li
827.686 286.24 li
828.542 283.607 mo
829.654 283.968 li
829.196 285.378 li
828.084 285.016 li
828.542 283.607 li
f
835.91 289.199 mo
835.573 290.238 li
835.307 289.96 835.038 289.736 834.745 289.545 cv
834.452 289.354 834.159 289.204 833.837 289.1 cv
833.12 288.867 832.475 288.917 831.931 289.246 cv
831.386 289.575 830.98 290.154 830.715 290.97 cv
830.445 291.798 830.434 292.505 830.681 293.091 cv
830.928 293.677 831.425 294.085 832.142 294.318 cv
832.463 294.422 832.785 294.485 833.134 294.503 cv
833.484 294.521 833.837 294.486 834.215 294.417 cv
833.881 295.443 li
833.512 295.487 833.154 295.494 832.812 295.451 cv
832.458 295.405 832.088 295.325 831.717 295.205 cv
830.703 294.875 829.988 294.301 829.603 293.465 cv
829.202 292.638 829.187 291.676 829.54 290.588 cv
829.898 289.488 830.476 288.719 831.286 288.285 cv
832.097 287.851 833.03 287.799 834.093 288.144 cv
834.439 288.257 834.761 288.402 835.058 288.581 cv
835.356 288.76 835.645 288.963 835.91 289.199 cv
f
839.909 293.93 mo
839.006 293.636 838.352 293.547 837.942 293.632 cv
837.527 293.73 837.242 294.02 837.081 294.514 cv
836.952 294.91 836.971 295.272 837.159 295.579 cv
837.342 295.898 837.665 296.126 838.11 296.27 cv
838.728 296.471 839.291 296.422 839.806 296.097 cv
840.318 295.785 840.692 295.264 840.929 294.534 cv
841.009 294.287 li
839.909 293.93 li
842.271 294.191 mo
841.017 298.049 li
839.905 297.687 li
840.238 296.661 li
839.842 296.997 839.424 297.189 838.993 297.254 cv
838.562 297.319 838.06 297.265 837.516 297.089 cv
836.823 296.864 836.327 296.498 836.044 295.982 cv
835.76 295.466 835.731 294.882 835.944 294.227 cv
836.189 293.473 836.621 292.984 837.269 292.758 cv
837.9 292.539 838.719 292.586 839.733 292.916 cv
841.291 293.422 li
841.327 293.31 li
841.491 292.804 841.447 292.352 841.205 291.959 cv
840.96 291.578 840.538 291.277 839.933 291.081 cv
839.537 290.952 839.15 290.881 838.747 290.859 cv
838.344 290.838 837.953 290.861 837.563 290.926 cv
837.897 289.9 li
838.341 289.88 838.776 289.885 839.184 289.935 cv
839.591 289.985 839.978 290.057 840.349 290.177 cv
841.326 290.494 841.971 290.991 842.288 291.655 cv
842.606 292.318 842.604 293.165 842.271 294.191 cv
f
846.358 289.396 mo
847.471 289.757 li
844.417 299.154 li
843.305 298.792 li
846.358 289.396 li
f
850.159 295.661 mo
849.683 295.862 849.315 296.111 849.038 296.376 cv
848.76 296.642 848.561 296.96 848.449 297.306 cv
848.256 297.899 848.309 298.45 848.614 298.986 cv
848.905 299.518 849.389 299.88 850.032 300.089 cv
850.403 300.21 850.782 300.265 851.156 300.249 cv
851.53 300.234 851.915 300.141 852.296 299.978 cv
850.159 295.661 li
851.233 295.258 mo
853.279 299.395 li
853.626 299.125 853.936 298.802 854.205 298.438 cv
854.461 298.07 854.688 297.665 854.865 297.204 cv
855.99 297.569 li
855.768 298.085 855.464 298.56 855.085 299.011 cv
854.706 299.462 854.253 299.889 853.717 300.275 cv
854.84 302.54 li
853.319 302.046 li
852.743 300.875 li
852.202 301.109 851.673 301.224 851.159 301.248 cv
850.649 301.26 850.127 301.186 849.607 301.018 cv
848.631 300.7 847.928 300.171 847.486 299.426 cv
847.045 298.681 846.981 297.868 847.262 297.002 cv
847.431 296.483 847.711 296.041 848.128 295.684 cv
848.545 295.328 849.093 295.028 849.77 294.796 cv
849.652 294.485 849.588 294.177 849.57 293.897 cv
849.551 293.618 849.582 293.355 849.663 293.107 cv
849.871 292.465 850.267 292.005 850.84 291.754 cv
851.414 291.503 852.072 291.498 852.814 291.739 cv
853.147 291.848 853.469 291.993 853.779 292.176 cv
854.076 292.355 854.39 292.566 854.688 292.827 cv
854.331 293.927 li
854.032 293.625 853.747 293.368 853.457 293.165 cv
853.168 292.962 852.9 292.82 852.628 292.731 cv
852.208 292.595 851.825 292.594 851.493 292.732 cv
851.149 292.866 850.929 293.123 850.816 293.469 cv
850.748 293.679 850.729 293.905 850.789 294.143 cv
850.844 294.393 850.982 294.767 851.233 295.258 cv
f
859.364 294.045 mo
860.588 294.443 li
857.659 303.456 li
856.435 303.058 li
859.364 294.045 li
f
866.984 301.975 mo
865.658 306.055 li
864.546 305.694 li
865.859 301.651 li
866.068 301.008 866.085 300.494 865.942 300.092 cv
865.799 299.69 865.48 299.409 864.986 299.248 cv
864.38 299.051 863.846 299.097 863.375 299.367 cv
862.904 299.638 862.563 300.101 862.35 300.756 cv
861.108 304.577 li
859.996 304.215 li
862.193 297.452 li
863.306 297.814 li
862.964 298.865 li
863.353 298.553 863.762 298.345 864.197 298.268 cv
864.62 298.186 865.077 298.212 865.546 298.364 cv
866.313 298.613 866.826 299.053 867.065 299.664 cv
867.304 300.275 867.285 301.048 866.984 301.975 cv
f
874.349 298.491 mo
874.048 299.418 li
872.985 299.072 li
872.589 298.944 872.277 298.938 872.076 299.05 cv
871.863 299.159 871.696 299.419 871.56 299.84 cv
871.367 300.433 li
873.197 301.028 li
872.916 301.893 li
871.086 301.299 li
869.17 307.196 li
868.057 306.834 li
869.973 300.937 li
868.91 300.591 li
869.191 299.726 li
870.254 300.072 li
870.407 299.602 li
870.648 298.86 871.002 298.36 871.461 298.126 cv
871.919 297.892 872.532 297.9 873.298 298.149 cv
874.349 298.491 li
f
876.789 303.056 mo
876.195 302.863 875.649 302.945 875.151 303.303 cv
874.652 303.66 874.274 304.234 874.013 305.038 cv
873.747 305.854 873.703 306.537 873.897 307.119 cv
874.09 307.701 874.488 308.077 875.094 308.273 cv
875.687 308.466 876.229 308.396 876.728 308.039 cv
877.227 307.682 877.605 307.107 877.87 306.291 cv
878.127 305.5 878.163 304.801 877.969 304.219 cv
877.776 303.636 877.382 303.249 876.789 303.056 cv
877.094 302.116 mo
878.059 302.43 878.708 302.996 879.064 303.795 cv
879.403 304.602 879.406 305.56 879.045 306.673 cv
878.683 307.786 878.117 308.559 877.373 309 cv
876.611 309.45 875.757 309.514 874.792 309.201 cv
873.816 308.883 873.15 308.325 872.81 307.518 cv
872.467 306.723 872.477 305.769 872.838 304.656 cv
873.2 303.544 873.753 302.767 874.502 302.313 cv
875.247 301.871 876.118 301.799 877.094 302.116 cv
f
883.711 302.325 mo
883.088 304.241 li
885.375 304.985 li
885.094 305.85 li
882.807 305.107 li
881.614 308.779 li
881.433 309.335 881.391 309.718 881.491 309.914 cv
881.587 310.123 881.872 310.298 882.342 310.451 cv
883.479 310.82 li
883.178 311.748 li
882.04 311.378 li
881.175 311.097 880.634 310.743 880.417 310.317 cv
880.2 309.891 880.228 309.258 880.501 308.417 cv
881.694 304.745 li
880.878 304.48 li
881.159 303.615 li
881.975 303.88 li
882.598 301.964 li
883.711 302.325 li
f
891.588 309.969 mo
890.262 314.049 li
889.149 313.688 li
890.463 309.645 li
890.672 309.002 890.689 308.488 890.546 308.086 cv
890.403 307.684 890.084 307.403 889.59 307.242 cv
888.984 307.046 888.45 307.091 887.979 307.362 cv
887.508 307.632 887.167 308.095 886.954 308.751 cv
885.712 312.571 li
884.6 312.21 li
887.653 302.813 li
888.765 303.175 li
887.568 306.859 li
887.956 306.548 888.366 306.339 888.801 306.262 cv
889.224 306.181 889.681 306.206 890.15 306.358 cv
890.917 306.608 891.43 307.048 891.669 307.658 cv
891.908 308.269 891.889 309.042 891.588 309.969 cv
f
899.451 312.989 mo
899.274 313.533 li
894.168 311.874 li
893.968 312.656 893.998 313.322 894.29 313.854 cv
894.569 314.383 895.073 314.765 895.815 315.006 cv
896.236 315.143 896.672 315.23 897.1 315.26 cv
897.528 315.289 897.988 315.261 898.456 315.167 cv
898.114 316.218 li
897.662 316.263 897.21 316.266 896.766 316.204 cv
896.321 316.141 895.873 316.05 895.452 315.913 cv
894.364 315.56 893.612 314.974 893.182 314.151 cv
892.752 313.328 892.72 312.374 893.07 311.298 cv
893.427 310.198 894.009 309.417 894.816 308.954 cv
895.618 308.504 896.542 308.435 897.556 308.765 cv
898.471 309.062 899.092 309.592 899.435 310.346 cv
899.761 311.108 899.776 311.987 899.451 312.989 cv
898.442 312.306 mo
898.627 311.696 898.61 311.158 898.409 310.682 cv
898.192 310.215 897.807 309.885 897.263 309.708 cv
896.645 309.508 896.09 309.532 895.607 309.758 cv
895.124 309.984 894.74 310.406 894.486 311.02 cv
898.442 312.306 li
f
904.645 312.107 mo
904.051 311.914 903.505 311.996 903.006 312.354 cv
902.507 312.711 902.129 313.285 901.868 314.089 cv
901.603 314.905 901.559 315.588 901.752 316.17 cv
901.946 316.752 902.344 317.127 902.949 317.324 cv
903.543 317.517 904.085 317.447 904.584 317.09 cv
905.083 316.732 905.461 316.158 905.726 315.342 cv
905.983 314.551 906.019 313.852 905.825 313.269 cv
905.632 312.687 905.238 312.3 904.645 312.107 cv
904.95 311.167 mo
905.914 311.48 906.564 312.047 906.919 312.846 cv
907.259 313.653 907.262 314.611 906.9 315.724 cv
906.539 316.837 905.973 317.61 905.228 318.051 cv
904.467 318.501 903.612 318.565 902.648 318.251 cv
901.671 317.934 901.005 317.376 900.666 316.569 cv
900.323 315.774 900.332 314.82 900.694 313.707 cv
901.055 312.594 901.608 311.817 902.357 311.364 cv
903.102 310.922 903.973 310.85 904.95 311.167 cv
f
913.425 315.247 mo
913.325 315.132 913.206 315.039 913.069 314.953 cv
912.929 314.88 912.776 314.804 912.603 314.747 cv
911.973 314.542 911.422 314.596 910.956 314.895 cv
910.477 315.191 910.127 315.72 909.878 316.486 cv
908.721 320.047 li
907.609 319.686 li
909.806 312.923 li
910.919 313.284 li
910.577 314.335 li
910.932 313.999 911.342 313.791 911.777 313.713 cv
912.212 313.636 912.702 313.686 913.246 313.863 cv
913.32 313.887 913.403 313.927 913.502 313.959 cv
913.584 314 913.679 314.044 913.795 314.109 cv
913.425 315.247 li
f
915.345 322.883 mo
914.767 323.57 914.285 324.001 913.908 324.152 cv
913.531 324.303 913.095 324.298 912.6 324.137 cv
911.71 323.848 li
912.011 322.921 li
912.667 323.133 li
912.963 323.23 913.222 323.232 913.444 323.14 cv
913.665 323.048 913.959 322.774 914.346 322.298 cv
914.704 321.868 li
914.133 314.329 li
915.308 314.71 li
915.703 320.689 li
919.536 316.084 li
920.711 316.466 li
915.345 322.883 li
f
900.479 263.286 mo
900.479 266.786 li
f
900.479 263.286 mo
900.479 266.786 li
@
854.094 271.059 mo
855.911 271.649 li
856.218 278.529 li
860.523 273.148 li
862.34 273.738 li
859.412 282.751 li
858.225 282.366 li
860.796 274.453 li
856.463 279.879 li
855.239 279.482 li
854.923 272.545 li
852.352 280.457 li
851.165 280.072 li
854.094 271.059 li
f
866.351 278.39 mo
865.758 278.197 865.212 278.28 864.713 278.637 cv
864.214 278.994 863.836 279.569 863.575 280.372 cv
863.31 281.188 863.266 281.871 863.459 282.453 cv
863.653 283.036 864.05 283.411 864.656 283.608 cv
865.249 283.801 865.792 283.731 866.29 283.373 cv
866.789 283.016 867.167 282.442 867.432 281.626 cv
867.689 280.834 867.725 280.135 867.532 279.553 cv
867.338 278.971 866.945 278.583 866.351 278.39 cv
866.657 277.451 mo
867.621 277.764 868.271 278.33 868.626 279.129 cv
868.965 279.937 868.968 280.895 868.607 282.007 cv
868.245 283.12 867.68 283.893 866.935 284.334 cv
866.174 284.784 865.319 284.848 864.355 284.535 cv
863.378 284.218 862.712 283.659 862.373 282.852 cv
862.03 282.057 862.039 281.103 862.4 279.991 cv
862.762 278.878 863.315 278.101 864.064 277.647 cv
864.809 277.206 865.68 277.133 866.657 277.451 cv
f
875.667 281.691 mo
876.856 278.031 li
877.969 278.392 li
874.916 287.789 li
873.803 287.427 li
874.133 286.414 li
873.765 286.745 873.372 286.945 872.953 287.014 cv
872.534 287.083 872.082 287.046 871.587 286.885 cv
870.771 286.62 870.208 286.082 869.898 285.27 cv
869.587 284.458 869.621 283.512 869.967 282.449 cv
870.312 281.386 870.837 280.613 871.569 280.127 cv
872.297 279.652 873.073 279.535 873.889 279.801 cv
874.384 279.961 874.772 280.197 875.066 280.511 cv
875.361 280.825 875.561 281.219 875.667 281.691 cv
871.117 282.823 mo
870.852 283.639 870.803 284.334 870.985 284.912 cv
871.166 285.49 871.563 285.866 872.157 286.059 cv
872.738 286.247 873.268 286.173 873.766 285.816 cv
874.253 285.455 874.635 284.868 874.9 284.052 cv
875.165 283.236 875.197 282.549 875.016 281.971 cv
874.822 281.389 874.441 281.005 873.86 280.816 cv
873.267 280.623 872.72 280.706 872.234 281.067 cv
871.747 281.428 871.382 282.007 871.117 282.823 cv
f
884.179 286.752 mo
884.002 287.296 li
878.896 285.637 li
878.696 286.42 878.726 287.086 879.018 287.618 cv
879.297 288.146 879.801 288.529 880.543 288.77 cv
880.964 288.906 881.4 288.993 881.828 289.023 cv
882.256 289.053 882.716 289.025 883.184 288.931 cv
882.842 289.982 li
882.39 290.026 881.938 290.03 881.494 289.967 cv
881.049 289.905 880.601 289.814 880.18 289.677 cv
879.092 289.323 878.339 288.737 877.91 287.914 cv
877.48 287.091 877.448 286.138 877.798 285.062 cv
878.155 283.962 878.737 283.18 879.544 282.718 cv
880.346 282.268 881.27 282.199 882.284 282.528 cv
883.199 282.826 883.82 283.355 884.163 284.109 cv
884.489 284.871 884.504 285.751 884.179 286.752 cv
883.17 286.069 mo
883.355 285.46 883.338 284.921 883.137 284.446 cv
882.92 283.979 882.535 283.649 881.991 283.472 cv
881.373 283.271 880.818 283.296 880.335 283.522 cv
879.852 283.747 879.468 284.169 879.214 284.784 cv
883.17 286.069 li
f
887.86 281.606 mo
888.973 281.968 li
885.92 291.364 li
884.807 291.003 li
887.86 281.606 li
f
900.46 286.452 mo
900.075 287.639 li
899.677 287.264 899.297 286.962 898.925 286.719 cv
898.537 286.483 898.161 286.293 897.79 286.172 cv
897.122 285.955 896.559 285.923 896.12 286.053 cv
895.677 286.196 895.384 286.511 895.231 286.981 cv
895.102 287.377 895.113 287.722 895.296 288 cv
895.463 288.287 895.868 288.596 896.495 288.936 cv
897.189 289.326 li
898.035 289.792 898.603 290.318 898.895 290.892 cv
899.183 291.477 899.217 292.131 898.98 292.86 cv
898.694 293.738 898.185 294.297 897.459 294.553 cv
896.721 294.805 895.796 294.751 894.67 294.385 cv
894.238 294.245 893.796 294.046 893.342 293.803 cv
892.888 293.56 892.438 293.263 891.995 292.901 cv
892.405 291.64 li
892.807 292.085 893.221 292.452 893.647 292.74 cv
894.068 293.041 894.518 293.256 894.988 293.408 cv
895.68 293.633 896.256 293.67 896.728 293.523 cv
897.187 293.371 897.509 293.052 897.678 292.533 cv
897.823 292.088 897.799 291.697 897.607 291.362 cv
897.416 291.026 897.031 290.696 896.453 290.372 cv
895.759 289.982 li
894.901 289.512 894.338 289.014 894.058 288.486 cv
893.775 287.97 893.75 287.375 893.975 286.682 cv
894.232 285.891 894.709 285.349 895.426 285.076 cv
896.131 284.799 896.986 284.818 897.975 285.139 cv
898.396 285.275 898.804 285.449 899.225 285.668 cv
899.634 285.883 900.039 286.151 900.46 286.452 cv
f
903.947 287.626 mo
903.324 289.542 li
905.612 290.286 li
905.331 291.151 li
903.043 290.408 li
901.85 294.08 li
901.669 294.636 901.627 295.019 901.727 295.215 cv
901.823 295.424 902.108 295.599 902.578 295.752 cv
903.716 296.121 li
903.414 297.049 li
902.277 296.679 li
901.411 296.398 900.87 296.044 900.653 295.618 cv
900.436 295.192 900.464 294.559 900.737 293.718 cv
901.931 290.046 li
901.115 289.781 li
901.396 288.916 li
902.212 289.181 li
902.834 287.264 li
903.947 287.626 li
f
910.653 293.072 mo
910.553 292.957 910.433 292.864 910.297 292.778 cv
910.156 292.705 910.004 292.628 909.831 292.572 cv
909.2 292.367 908.65 292.421 908.183 292.72 cv
907.704 293.016 907.355 293.545 907.106 294.311 cv
905.949 297.872 li
904.836 297.51 li
907.034 290.748 li
908.146 291.109 li
907.805 292.16 li
908.16 291.824 908.57 291.616 909.005 291.538 cv
909.44 291.461 909.929 291.511 910.473 291.688 cv
910.548 291.712 910.63 291.752 910.729 291.784 cv
910.812 291.825 910.906 291.869 911.022 291.934 cv
910.653 293.072 li
f
910.711 296.467 mo
912.041 292.374 li
913.154 292.736 li
911.836 296.791 li
911.627 297.434 911.598 297.944 911.741 298.346 cv
911.884 298.748 912.202 299.029 912.709 299.194 cv
913.303 299.387 913.845 299.358 914.316 299.087 cv
914.787 298.816 915.128 298.353 915.345 297.686 cv
916.591 293.853 li
917.703 294.214 li
915.506 300.977 li
914.393 300.616 li
914.731 299.577 li
914.322 299.909 913.904 300.102 913.494 300.187 cv
913.075 300.256 912.635 300.222 912.165 300.069 cv
911.386 299.816 910.869 299.389 910.63 298.778 cv
910.375 298.176 910.406 297.407 910.711 296.467 cv
914.887 293.122 mo
914.887 293.122 li
f
924.778 296.8 mo
924.44 297.839 li
924.175 297.561 923.906 297.337 923.613 297.146 cv
923.319 296.955 923.026 296.805 922.705 296.701 cv
921.988 296.468 921.343 296.518 920.799 296.847 cv
920.254 297.176 919.847 297.754 919.582 298.57 cv
919.313 299.399 919.302 300.106 919.549 300.692 cv
919.796 301.278 920.293 301.685 921.01 301.918 cv
921.331 302.023 921.652 302.086 922.002 302.104 cv
922.351 302.122 922.705 302.086 923.082 302.017 cv
922.749 303.044 li
922.379 303.088 922.022 303.094 921.68 303.052 cv
921.326 303.005 920.956 302.926 920.585 302.805 cv
919.571 302.476 918.855 301.902 918.471 301.066 cv
918.07 300.238 918.054 299.277 918.408 298.189 cv
918.765 297.088 919.343 296.319 920.154 295.885 cv
920.965 295.452 921.898 295.399 922.961 295.745 cv
923.307 295.857 923.629 296.003 923.926 296.182 cv
924.223 296.36 924.513 296.564 924.778 296.8 cv
f
928.514 295.608 mo
927.891 297.525 li
930.178 298.268 li
929.897 299.133 li
927.61 298.39 li
926.417 302.062 li
926.236 302.618 926.194 303.001 926.294 303.198 cv
926.39 303.407 926.675 303.581 927.145 303.734 cv
928.282 304.103 li
927.981 305.031 li
926.844 304.661 li
925.978 304.38 925.437 304.026 925.22 303.6 cv
925.003 303.175 925.031 302.541 925.304 301.701 cv
926.497 298.029 li
925.681 297.763 li
925.962 296.898 li
926.778 297.163 li
927.401 295.247 li
928.514 295.608 li
f
930.196 302.798 mo
931.526 298.706 li
932.639 299.067 li
931.321 303.122 li
931.112 303.765 931.083 304.275 931.226 304.677 cv
931.369 305.079 931.688 305.36 932.195 305.525 cv
932.788 305.718 933.33 305.689 933.801 305.418 cv
934.272 305.147 934.614 304.684 934.831 304.017 cv
936.076 300.184 li
937.189 300.546 li
934.991 307.309 li
933.879 306.947 li
934.216 305.908 li
933.807 306.24 933.39 306.433 932.979 306.518 cv
932.56 306.587 932.12 306.553 931.65 306.401 cv
930.871 306.148 930.354 305.72 930.115 305.109 cv
929.86 304.507 929.891 303.738 930.196 302.798 cv
934.373 299.453 mo
934.373 299.453 li
f
943.058 303.601 mo
942.958 303.486 942.838 303.393 942.702 303.307 cv
942.562 303.234 942.409 303.158 942.236 303.101 cv
941.605 302.896 941.055 302.95 940.589 303.249 cv
940.11 303.545 939.76 304.074 939.511 304.84 cv
938.354 308.401 li
937.242 308.04 li
939.439 301.277 li
940.552 301.638 li
940.21 302.689 li
940.565 302.353 940.975 302.145 941.41 302.067 cv
941.845 301.99 942.335 302.04 942.879 302.217 cv
942.953 302.241 943.036 302.281 943.134 302.313 cv
943.217 302.354 943.312 302.398 943.427 302.463 cv
943.058 303.601 li
f
949.335 307.923 mo
949.159 308.467 li
944.052 306.808 li
943.853 307.591 943.883 308.256 944.174 308.789 cv
944.454 309.317 944.958 309.699 945.7 309.941 cv
946.12 310.077 946.557 310.164 946.985 310.194 cv
947.412 310.224 947.873 310.195 948.341 310.101 cv
947.999 311.152 li
947.547 311.197 947.095 311.2 946.651 311.138 cv
946.206 311.075 945.757 310.984 945.337 310.848 cv
944.249 310.494 943.496 309.908 943.067 309.085 cv
942.637 308.262 942.605 307.308 942.954 306.233 cv
943.312 305.132 943.894 304.351 944.7 303.888 cv
945.503 303.438 946.427 303.37 947.441 303.699 cv
948.356 303.996 948.977 304.526 949.319 305.28 cv
949.646 306.042 949.661 306.922 949.335 307.923 cv
948.327 307.24 mo
948.512 306.63 948.495 306.092 948.294 305.617 cv
948.077 305.15 947.692 304.819 947.148 304.643 cv
946.53 304.442 945.975 304.467 945.492 304.692 cv
945.008 304.918 944.625 305.34 944.371 305.955 cv
948.327 307.24 li
f
948.19 263.286 mo
948.19 266.786 li
f
948.19 263.286 mo
948.19 266.786 li
@
909.115 271.059 mo
910.339 271.456 li
907.744 279.443 li
912.133 280.869 li
911.8 281.896 li
906.187 280.072 li
909.115 271.059 li
f
917.207 279.894 mo
916.305 279.6 915.65 279.511 915.24 279.596 cv
914.825 279.694 914.54 279.984 914.379 280.478 cv
914.25 280.874 914.27 281.236 914.457 281.542 cv
914.64 281.862 914.963 282.09 915.408 282.234 cv
916.026 282.435 916.589 282.385 917.104 282.061 cv
917.616 281.749 917.99 281.228 918.227 280.498 cv
918.307 280.251 li
917.207 279.894 li
919.569 280.155 mo
918.315 284.013 li
917.203 283.651 li
917.536 282.625 li
917.14 282.961 916.722 283.153 916.291 283.218 cv
915.86 283.283 915.358 283.229 914.814 283.053 cv
914.121 282.828 913.625 282.461 913.342 281.946 cv
913.058 281.43 913.029 280.846 913.242 280.191 cv
913.487 279.437 913.919 278.948 914.567 278.721 cv
915.199 278.503 916.017 278.55 917.031 278.879 cv
918.589 279.386 li
918.625 279.274 li
918.789 278.767 918.745 278.316 918.504 277.923 cv
918.258 277.542 917.836 277.241 917.231 277.044 cv
916.835 276.916 916.448 276.845 916.045 276.823 cv
915.642 276.802 915.252 276.825 914.862 276.89 cv
915.195 275.864 li
915.639 275.844 916.075 275.849 916.482 275.899 cv
916.889 275.949 917.276 276.02 917.647 276.141 cv
918.624 276.458 919.269 276.955 919.587 277.619 cv
919.904 278.282 919.902 279.129 919.569 280.155 cv
f
927.554 282.504 mo
926.228 286.584 li
925.116 286.222 li
926.429 282.179 li
926.638 281.536 926.655 281.022 926.512 280.621 cv
926.369 280.219 926.05 279.938 925.556 279.777 cv
924.95 279.58 924.416 279.625 923.945 279.896 cv
923.475 280.167 923.133 280.63 922.92 281.285 cv
921.679 285.105 li
920.566 284.744 li
922.763 277.981 li
923.876 278.342 li
923.534 279.393 li
923.923 279.082 924.332 278.873 924.767 278.796 cv
925.19 278.715 925.647 278.74 926.117 278.893 cv
926.883 279.142 927.396 279.582 927.635 280.193 cv
927.874 280.803 927.855 281.576 927.554 282.504 cv
f
934.756 283.012 mo
935.945 279.353 li
937.058 279.714 li
934.005 289.111 li
932.892 288.749 li
933.222 287.735 li
932.854 288.067 932.461 288.267 932.042 288.336 cv
931.624 288.405 931.171 288.367 930.677 288.207 cv
929.861 287.942 929.297 287.403 928.987 286.592 cv
928.677 285.78 928.711 284.834 929.056 283.771 cv
929.401 282.708 929.926 281.935 930.658 281.448 cv
931.386 280.974 932.162 280.857 932.978 281.122 cv
933.473 281.283 933.861 281.518 934.155 281.833 cv
934.45 282.147 934.65 282.54 934.756 283.012 cv
930.206 284.144 mo
929.941 284.96 929.893 285.656 930.074 286.234 cv
930.255 286.812 930.652 287.187 931.246 287.38 cv
931.827 287.569 932.357 287.495 932.856 287.138 cv
933.342 286.776 933.724 286.19 933.989 285.374 cv
934.254 284.558 934.286 283.871 934.105 283.293 cv
933.911 282.71 933.53 282.327 932.949 282.138 cv
932.356 281.945 931.81 282.027 931.323 282.389 cv
930.837 282.75 930.471 283.328 930.206 284.144 cv
f
936.997 285.791 mo
940.249 286.847 li
939.928 287.836 li
936.676 286.78 li
936.997 285.791 li
f
943.734 282.307 mo
945.551 282.897 li
945.858 289.777 li
950.163 284.396 li
951.98 284.986 li
949.052 293.999 li
947.865 293.614 li
950.436 285.701 li
946.103 291.128 li
944.879 290.73 li
944.563 283.793 li
941.992 291.706 li
940.805 291.32 li
943.734 282.307 li
f
955.609 292.371 mo
954.706 292.078 954.052 291.988 953.642 292.074 cv
953.227 292.171 952.942 292.461 952.781 292.956 cv
952.652 293.351 952.671 293.713 952.859 294.02 cv
953.042 294.339 953.365 294.567 953.81 294.712 cv
954.428 294.912 954.991 294.863 955.506 294.538 cv
956.018 294.226 956.392 293.705 956.629 292.976 cv
956.709 292.729 li
955.609 292.371 li
957.971 292.633 mo
956.717 296.49 li
955.605 296.129 li
955.938 295.102 li
955.542 295.438 955.124 295.631 954.693 295.696 cv
954.262 295.761 953.76 295.707 953.216 295.53 cv
952.523 295.305 952.027 294.939 951.744 294.423 cv
951.46 293.907 951.431 293.324 951.644 292.668 cv
951.889 291.914 952.321 291.426 952.969 291.199 cv
953.6 290.98 954.419 291.028 955.433 291.357 cv
956.99 291.863 li
957.027 291.752 li
957.191 291.245 957.147 290.793 956.905 290.4 cv
956.66 290.02 956.238 289.719 955.633 289.522 cv
955.237 289.393 954.85 289.322 954.447 289.301 cv
954.044 289.279 953.653 289.303 953.263 289.367 cv
953.597 288.341 li
954.041 288.321 954.476 288.326 954.884 288.376 cv
955.291 288.427 955.678 288.498 956.049 288.618 cv
957.026 288.936 957.671 289.432 957.988 290.096 cv
958.306 290.76 958.304 291.607 957.971 292.633 cv
f
964.784 292.782 mo
964.684 292.668 964.564 292.574 964.428 292.489 cv
964.288 292.416 964.135 292.339 963.962 292.283 cv
963.331 292.078 962.781 292.132 962.315 292.431 cv
961.836 292.727 961.486 293.256 961.237 294.022 cv
960.08 297.583 li
958.968 297.221 li
961.165 290.458 li
962.278 290.82 li
961.936 291.871 li
962.291 291.535 962.701 291.326 963.136 291.249 cv
963.571 291.172 964.061 291.222 964.605 291.398 cv
964.679 291.422 964.762 291.463 964.86 291.495 cv
964.943 291.536 965.038 291.58 965.154 291.645 cv
964.784 292.782 li
f
967.102 289.476 mo
968.215 289.838 li
966.411 295.389 li
970.673 293.548 li
972.094 294.01 li
967.481 296.01 li
970.045 300.821 li
968.599 300.351 li
966.234 295.933 li
965.162 299.234 li
964.049 298.872 li
967.102 289.476 li
f
973.442 294.447 mo
974.555 294.809 li
972.357 301.572 li
971.245 301.21 li
973.442 294.447 li
974.298 291.814 mo
975.41 292.176 li
974.952 293.585 li
973.84 293.223 li
974.298 291.814 li
f
981.633 300.075 mo
980.307 304.155 li
979.194 303.793 li
980.508 299.751 li
980.717 299.108 980.734 298.594 980.591 298.192 cv
980.448 297.79 980.129 297.509 979.635 297.348 cv
979.029 297.151 978.495 297.196 978.024 297.467 cv
977.553 297.738 977.212 298.201 976.999 298.856 cv
975.757 302.677 li
974.645 302.315 li
976.842 295.552 li
977.955 295.914 li
977.613 296.965 li
978.002 296.653 978.411 296.445 978.846 296.367 cv
979.269 296.286 979.726 296.311 980.195 296.464 cv
980.962 296.713 981.475 297.153 981.714 297.764 cv
981.953 298.375 981.934 299.148 981.633 300.075 cv
f
988.096 302.858 mo
988.353 302.067 988.385 301.38 988.208 300.831 cv
988.019 300.277 987.621 299.902 987.028 299.709 cv
986.435 299.516 985.892 299.586 985.414 299.923 cv
984.936 300.26 984.57 300.838 984.313 301.629 cv
984.052 302.433 984.012 303.103 984.201 303.657 cv
984.39 304.21 984.787 304.586 985.381 304.778 cv
985.974 304.971 986.517 304.901 986.995 304.565 cv
987.461 304.224 987.835 303.662 988.096 302.858 cv
988.357 305.841 mo
987.988 306.979 987.451 307.747 986.759 308.151 cv
986.059 308.539 985.188 308.57 984.137 308.229 cv
983.741 308.1 983.395 307.947 983.065 307.785 cv
982.738 307.61 982.42 307.411 982.139 307.183 cv
982.489 306.108 li
982.754 306.385 983.035 306.613 983.328 306.804 cv
983.622 306.995 983.927 307.149 984.261 307.258 cv
984.978 307.491 985.586 307.47 986.078 307.219 cv
986.561 306.952 986.931 306.444 987.18 305.677 cv
987.357 305.133 li
986.993 305.453 986.6 305.653 986.177 305.734 cv
985.755 305.816 985.302 305.778 984.808 305.617 cv
983.967 305.344 983.4 304.818 983.098 304.023 cv
982.796 303.228 982.822 302.307 983.163 301.256 cv
983.5 300.217 984.021 299.457 984.733 298.991 cv
985.444 298.525 986.217 298.42 987.057 298.694 cv
987.552 298.854 987.94 299.09 988.234 299.404 cv
988.529 299.718 988.729 300.112 988.835 300.584 cv
989.169 299.557 li
990.281 299.919 li
988.357 305.841 li
f
995.9 263.286 mo
995.9 266.786 li
f
995.9 263.286 mo
995.9 266.786 li
@
947.084 272.458 mo
945.983 275.845 li
947.516 276.344 li
948.085 276.528 948.562 276.533 948.967 276.337 cv
949.373 276.14 949.67 275.772 949.847 275.228 cv
950.024 274.684 949.996 274.224 949.783 273.827 cv
949.57 273.43 949.186 273.141 948.617 272.956 cv
947.084 272.458 li
946.185 271.059 mo
948.942 271.954 li
949.944 272.28 950.634 272.764 951.005 273.39 cv
951.375 274.016 951.418 274.768 951.133 275.646 cv
950.844 276.536 950.363 277.132 949.699 277.408 cv
949.031 277.697 948.192 277.67 947.191 277.345 cv
945.658 276.847 li
944.481 280.469 li
943.257 280.072 li
946.185 271.059 li
f
956.442 278.027 mo
956.342 277.913 956.222 277.819 956.086 277.734 cv
955.946 277.661 955.793 277.584 955.62 277.528 cv
954.989 277.323 954.439 277.376 953.973 277.676 cv
953.494 277.971 953.144 278.5 952.895 279.267 cv
951.738 282.828 li
950.626 282.466 li
952.823 275.703 li
953.936 276.065 li
953.594 277.116 li
953.949 276.78 954.359 276.571 954.794 276.494 cv
955.229 276.417 955.719 276.466 956.263 276.643 cv
956.337 276.667 956.42 276.708 956.518 276.74 cv
956.601 276.78 956.696 276.825 956.811 276.89 cv
956.442 278.027 li
f
960.31 278.997 mo
959.716 278.804 959.17 278.886 958.671 279.244 cv
958.172 279.601 957.794 280.175 957.533 280.979 cv
957.268 281.795 957.224 282.478 957.417 283.06 cv
957.611 283.642 958.008 284.017 958.614 284.214 cv
959.208 284.407 959.75 284.337 960.249 283.98 cv
960.747 283.622 961.125 283.048 961.391 282.232 cv
961.648 281.441 961.683 280.742 961.49 280.159 cv
961.296 279.577 960.903 279.19 960.31 278.997 cv
960.615 278.057 mo
961.579 278.37 962.229 278.937 962.584 279.736 cv
962.924 280.543 962.927 281.501 962.565 282.614 cv
962.204 283.727 961.638 284.5 960.893 284.941 cv
960.132 285.391 959.277 285.455 958.313 285.142 cv
957.336 284.824 956.67 284.266 956.331 283.459 cv
955.988 282.664 955.997 281.71 956.359 280.597 cv
956.72 279.484 957.273 278.707 958.022 278.254 cv
958.767 277.812 959.638 277.74 960.615 278.057 cv
f
969.266 284.791 mo
969.531 283.975 969.563 283.288 969.382 282.71 cv
969.188 282.128 968.807 281.744 968.226 281.555 cv
967.633 281.363 967.099 281.449 966.613 281.81 cv
966.114 282.168 965.748 282.746 965.483 283.562 cv
965.218 284.378 965.17 285.073 965.363 285.655 cv
965.544 286.234 965.93 286.605 966.523 286.798 cv
967.104 286.986 967.634 286.913 968.133 286.555 cv
968.619 286.194 969.001 285.607 969.266 284.791 cv
966.25 281.2 mo
966.601 280.877 966.995 280.677 967.417 280.595 cv
967.84 280.514 968.305 280.556 968.8 280.716 cv
969.616 280.982 970.175 281.532 970.485 282.344 cv
970.779 283.164 970.762 284.101 970.416 285.165 cv
970.071 286.228 969.53 287.009 968.814 287.487 cv
968.086 287.962 967.314 288.066 966.498 287.801 cv
966.003 287.64 965.603 287.401 965.304 287.099 cv
965.006 286.797 964.806 286.404 964.716 285.923 cv
964.386 286.937 li
963.274 286.576 li
966.327 277.179 li
967.439 277.541 li
966.25 281.2 li
f
974.215 279.742 mo
975.327 280.104 li
972.274 289.5 li
971.161 289.139 li
974.215 279.742 li
f
981.574 288.476 mo
981.397 289.02 li
976.291 287.361 li
976.091 288.143 976.121 288.809 976.413 289.341 cv
976.692 289.869 977.197 290.252 977.939 290.493 cv
978.359 290.63 978.795 290.717 979.223 290.746 cv
979.651 290.776 980.111 290.748 980.579 290.654 cv
980.238 291.705 li
979.786 291.749 979.334 291.753 978.889 291.69 cv
978.445 291.628 977.996 291.537 977.576 291.4 cv
976.488 291.047 975.735 290.461 975.305 289.637 cv
974.875 288.814 974.844 287.861 975.193 286.785 cv
975.551 285.685 976.133 284.903 976.939 284.441 cv
977.741 283.991 978.666 283.922 979.68 284.252 cv
980.594 284.549 981.215 285.079 981.558 285.832 cv
981.884 286.595 981.899 287.474 981.574 288.476 cv
980.566 287.793 mo
980.75 287.183 980.734 286.644 980.533 286.169 cv
980.315 285.702 979.931 285.372 979.387 285.195 cv
978.768 284.994 978.214 285.019 977.73 285.245 cv
977.247 285.471 976.864 285.893 976.609 286.507 cv
980.566 287.793 li
f
989.245 288.973 mo
989.678 288.566 990.128 288.316 990.592 288.194 cv
991.051 288.083 991.549 288.108 992.081 288.281 cv
992.773 288.506 993.237 288.93 993.459 289.549 cv
993.682 290.168 993.651 290.937 993.357 291.84 cv
992.032 295.92 li
990.919 295.558 li
992.232 291.515 li
992.441 290.872 992.474 290.35 992.356 289.956 cv
992.222 289.571 991.928 289.298 991.458 289.145 cv
990.877 288.956 990.355 289.005 989.897 289.28 cv
989.438 289.555 989.109 290.022 988.896 290.677 cv
987.655 294.498 li
986.542 294.136 li
987.856 290.093 li
988.065 289.45 988.098 288.928 987.98 288.534 cv
987.845 288.149 987.539 287.871 987.069 287.719 cv
986.5 287.534 985.978 287.583 985.52 287.858 cv
985.062 288.133 984.732 288.6 984.519 289.255 cv
983.278 293.075 li
982.165 292.714 li
984.363 285.951 li
985.475 286.313 li
985.134 287.363 li
985.514 287.036 985.923 286.827 986.346 286.746 cv
986.757 286.66 987.209 286.698 987.704 286.859 cv
988.198 287.02 988.566 287.276 988.832 287.635 cv
989.098 287.995 989.225 288.446 989.245 288.973 cv
f
1003.75 290.527 mo
1003.33 291.813 li
1003.03 291.306 1002.69 290.881 1002.28 290.53 cv
1001.88 290.192 1001.43 289.937 1000.91 289.768 cv
999.867 289.43 998.972 289.495 998.223 289.949 cv
997.474 290.402 996.909 291.217 996.523 292.404 cv
996.137 293.59 996.112 294.594 996.451 295.401 cv
996.79 296.208 997.481 296.775 998.52 297.112 cv
999.039 297.281 999.549 297.351 1000.08 297.306 cv
1000.61 297.273 1001.14 297.129 1001.68 296.882 cv
1001.27 298.156 li
1000.74 298.312 1000.21 298.374 999.701 298.357 cv
999.187 298.34 998.656 298.25 998.124 298.077 cv
996.764 297.635 995.821 296.878 995.299 295.792 cv
994.777 294.707 994.763 293.445 995.237 291.986 cv
995.707 290.539 996.46 289.526 997.524 288.943 cv
998.585 288.371 999.797 288.3 1001.16 288.742 cv
1001.7 288.919 1002.18 289.158 1002.61 289.447 cv
1003.03 289.748 1003.42 290.106 1003.75 290.527 cv
f
1007.44 294.31 mo
1006.85 294.118 1006.3 294.2 1005.8 294.557 cv
1005.3 294.914 1004.92 295.489 1004.66 296.292 cv
1004.4 297.108 1004.35 297.791 1004.55 298.374 cv
1004.74 298.956 1005.14 299.331 1005.74 299.528 cv
1006.34 299.721 1006.88 299.651 1007.38 299.293 cv
1007.88 298.936 1008.26 298.362 1008.52 297.546 cv
1008.78 296.755 1008.81 296.055 1008.62 295.473 cv
1008.43 294.891 1008.03 294.503 1007.44 294.31 cv
1007.75 293.371 mo
1008.71 293.684 1009.36 294.251 1009.71 295.049 cv
1010.05 295.857 1010.06 296.815 1009.7 297.927 cv
1009.33 299.04 1008.77 299.813 1008.02 300.255 cv
1007.26 300.704 1006.41 300.768 1005.44 300.455 cv
1004.47 300.138 1003.8 299.58 1003.46 298.772 cv
1003.12 297.977 1003.13 297.023 1003.49 295.911 cv
1003.85 294.798 1004.4 294.021 1005.15 293.567 cv
1005.9 293.126 1006.77 293.053 1007.75 293.371 cv
f
1017.48 298.148 mo
1017.92 297.742 1018.37 297.492 1018.83 297.369 cv
1019.29 297.258 1019.79 297.284 1020.32 297.456 cv
1021.01 297.681 1021.48 298.105 1021.7 298.724 cv
1021.92 299.343 1021.89 300.112 1021.6 301.015 cv
1020.27 305.095 li
1019.16 304.733 li
1020.47 300.69 li
1020.68 300.048 1020.71 299.525 1020.59 299.131 cv
1020.46 298.746 1020.17 298.473 1019.7 298.32 cv
1019.12 298.131 1018.59 298.181 1018.14 298.455 cv
1017.68 298.73 1017.35 299.197 1017.13 299.853 cv
1015.89 303.673 li
1014.78 303.311 li
1016.09 299.268 li
1016.3 298.625 1016.34 298.103 1016.22 297.709 cv
1016.08 297.324 1015.78 297.047 1015.31 296.894 cv
1014.74 296.709 1014.22 296.758 1013.76 297.033 cv
1013.3 297.308 1012.97 297.775 1012.76 298.43 cv
1011.52 302.251 li
1010.4 301.889 li
1012.6 295.126 li
1013.71 295.488 li
1013.37 296.539 li
1013.75 296.211 1014.16 296.002 1014.58 295.921 cv
1015 295.836 1015.45 295.873 1015.94 296.034 cv
1016.44 296.195 1016.8 296.451 1017.07 296.811 cv
1017.34 297.171 1017.46 297.622 1017.48 298.148 cv
f
1023.89 305.15 mo
1022.73 308.723 li
1021.61 308.361 li
1024.64 299.039 li
1025.76 299.401 li
1025.42 300.427 li
1025.77 300.103 1026.17 299.903 1026.59 299.822 cv
1027.01 299.741 1027.48 299.782 1027.97 299.943 cv
1028.79 300.208 1029.35 300.759 1029.66 301.57 cv
1029.95 302.39 1029.93 303.328 1029.59 304.391 cv
1029.24 305.454 1028.7 306.236 1027.99 306.714 cv
1027.26 307.188 1026.49 307.292 1025.67 307.027 cv
1025.18 306.867 1024.78 306.627 1024.48 306.325 cv
1024.18 306.023 1023.98 305.63 1023.89 305.15 cv
1028.44 304.018 mo
1028.7 303.202 1028.74 302.515 1028.55 301.936 cv
1028.36 301.354 1027.98 300.971 1027.4 300.782 cv
1026.81 300.589 1026.27 300.675 1025.79 301.037 cv
1025.29 301.394 1024.92 301.972 1024.66 302.788 cv
1024.39 303.604 1024.34 304.299 1024.54 304.882 cv
1024.72 305.46 1025.1 305.831 1025.7 306.024 cv
1026.28 306.213 1026.81 306.139 1027.31 305.782 cv
1027.79 305.42 1028.17 304.834 1028.44 304.018 cv
f
1033.39 298.969 mo
1034.5 299.33 li
1031.45 308.727 li
1030.33 308.365 li
1033.39 298.969 li
f
1040.75 307.702 mo
1040.57 308.246 li
1035.46 306.587 li
1035.26 307.37 1035.29 308.035 1035.59 308.568 cv
1035.87 309.096 1036.37 309.478 1037.11 309.72 cv
1037.53 309.856 1037.97 309.943 1038.4 309.973 cv
1038.82 310.003 1039.28 309.974 1039.75 309.88 cv
1039.41 310.931 li
1038.96 310.976 1038.51 310.979 1038.06 310.917 cv
1037.62 310.854 1037.17 310.763 1036.75 310.627 cv
1035.66 310.273 1034.91 309.687 1034.48 308.864 cv
1034.05 308.041 1034.02 307.087 1034.37 306.012 cv
1034.72 304.911 1035.31 304.13 1036.11 303.667 cv
1036.91 303.217 1037.84 303.149 1038.85 303.478 cv
1039.77 303.775 1040.39 304.305 1040.73 305.059 cv
1041.06 305.821 1041.07 306.701 1040.75 307.702 cv
1039.74 307.019 mo
1039.92 306.409 1039.91 305.871 1039.71 305.396 cv
1039.49 304.929 1039.1 304.598 1038.56 304.422 cv
1037.94 304.221 1037.39 304.246 1036.9 304.471 cv
1036.42 304.697 1036.04 305.119 1035.78 305.734 cv
1039.74 307.019 li
f
1049.2 307.017 mo
1045.68 309.511 li
1047.12 313.82 li
1045.81 313.395 li
1044.71 310.098 li
1041.88 312.117 li
1040.57 311.691 li
1044.34 309.007 li
1042.99 305.001 li
1044.3 305.426 li
1045.31 308.42 li
1047.89 306.591 li
1049.2 307.017 li
f
1043.61 263.286 mo
1043.61 266.786 li
f
1043.61 263.286 mo
1043.61 266.786 li
@
1011.37 273.111 mo
1010.98 274.298 li
1010.58 273.923 1010.2 273.621 1009.83 273.377 cv
1009.44 273.142 1009.07 272.952 1008.69 272.831 cv
1008.03 272.614 1007.46 272.581 1007.02 272.712 cv
1006.58 272.855 1006.29 273.17 1006.14 273.64 cv
1006.01 274.035 1006.02 274.381 1006.2 274.659 cv
1006.37 274.945 1006.77 275.255 1007.4 275.595 cv
1008.09 275.985 li
1008.94 276.451 1009.51 276.977 1009.8 277.55 cv
1010.09 278.136 1010.12 278.789 1009.88 279.519 cv
1009.6 280.397 1009.09 280.956 1008.36 281.212 cv
1007.63 281.464 1006.7 281.41 1005.58 281.044 cv
1005.14 280.903 1004.7 280.705 1004.25 280.462 cv
1003.79 280.219 1003.34 279.922 1002.9 279.56 cv
1003.31 278.299 li
1003.71 278.744 1004.13 279.11 1004.55 279.399 cv
1004.97 279.7 1005.42 279.915 1005.89 280.067 cv
1006.58 280.292 1007.16 280.329 1007.63 280.181 cv
1008.09 280.03 1008.41 279.711 1008.58 279.192 cv
1008.73 278.747 1008.7 278.356 1008.51 278.021 cv
1008.32 277.685 1007.94 277.355 1007.36 277.03 cv
1006.66 276.641 li
1005.81 276.171 1005.24 275.673 1004.96 275.145 cv
1004.68 274.629 1004.65 274.033 1004.88 273.341 cv
1005.14 272.55 1005.61 272.008 1006.33 271.735 cv
1007.04 271.458 1007.89 271.476 1008.88 271.798 cv
1009.3 271.934 1009.71 272.108 1010.13 272.327 cv
1010.54 272.542 1010.94 272.81 1011.37 273.111 cv
f
1014.85 274.285 mo
1014.23 276.201 li
1016.52 276.944 li
1016.24 277.81 li
1013.95 277.067 li
1012.75 280.739 li
1012.57 281.295 1012.53 281.678 1012.63 281.874 cv
1012.73 282.083 1013.01 282.258 1013.48 282.41 cv
1014.62 282.78 li
1014.32 283.707 li
1013.18 283.338 li
1012.32 283.057 1011.77 282.703 1011.56 282.277 cv
1011.34 281.851 1011.37 281.218 1011.64 280.377 cv
1012.84 276.705 li
1012.02 276.44 li
1012.3 275.574 li
1013.12 275.84 li
1013.74 273.923 li
1014.85 274.285 li
f
1021.56 279.73 mo
1021.46 279.616 1021.34 279.522 1021.2 279.437 cv
1021.06 279.364 1020.91 279.287 1020.74 279.231 cv
1020.1 279.026 1019.55 279.08 1019.09 279.379 cv
1018.61 279.675 1018.26 280.204 1018.01 280.97 cv
1016.85 284.531 li
1015.74 284.169 li
1017.94 277.406 li
1019.05 277.768 li
1018.71 278.819 li
1019.06 278.483 1019.47 278.274 1019.91 278.197 cv
1020.34 278.12 1020.83 278.17 1021.38 278.346 cv
1021.45 278.37 1021.53 278.411 1021.63 278.443 cv
1021.72 278.484 1021.81 278.528 1021.93 278.593 cv
1021.56 279.73 li
f
1021.62 283.126 mo
1022.95 279.033 li
1024.06 279.395 li
1022.74 283.45 li
1022.53 284.093 1022.5 284.603 1022.65 285.005 cv
1022.79 285.407 1023.11 285.688 1023.61 285.853 cv
1024.21 286.045 1024.75 286.017 1025.22 285.746 cv
1025.69 285.475 1026.03 285.012 1026.25 284.344 cv
1027.5 280.512 li
1028.61 280.873 li
1026.41 287.636 li
1025.3 287.275 li
1025.64 286.236 li
1025.23 286.568 1024.81 286.76 1024.4 286.846 cv
1023.98 286.915 1023.54 286.881 1023.07 286.728 cv
1022.29 286.475 1021.77 286.047 1021.53 285.437 cv
1021.28 284.834 1021.31 284.065 1021.62 283.126 cv
1025.79 279.78 mo
1025.79 279.78 li
f
1035.68 283.459 mo
1035.34 284.497 li
1035.08 284.22 1034.81 283.996 1034.52 283.805 cv
1034.22 283.614 1033.93 283.464 1033.61 283.359 cv
1032.89 283.126 1032.25 283.177 1031.7 283.505 cv
1031.16 283.834 1030.75 284.413 1030.49 285.229 cv
1030.22 286.057 1030.21 286.765 1030.45 287.351 cv
1030.7 287.937 1031.2 288.344 1031.91 288.577 cv
1032.24 288.681 1032.56 288.745 1032.91 288.763 cv
1033.26 288.78 1033.61 288.745 1033.99 288.676 cv
1033.65 289.702 li
1033.28 289.746 1032.93 289.753 1032.58 289.711 cv
1032.23 289.664 1031.86 289.585 1031.49 289.464 cv
1030.48 289.135 1029.76 288.56 1029.38 287.725 cv
1028.97 286.897 1028.96 285.935 1029.31 284.847 cv
1029.67 283.747 1030.25 282.978 1031.06 282.544 cv
1031.87 282.111 1032.8 282.058 1033.87 282.404 cv
1034.21 282.516 1034.53 282.662 1034.83 282.84 cv
1035.13 283.019 1035.42 283.222 1035.68 283.459 cv
f
1039.42 282.267 mo
1038.8 284.183 li
1041.08 284.927 li
1040.8 285.792 li
1038.51 285.049 li
1037.32 288.721 li
1037.14 289.277 1037.1 289.66 1037.2 289.856 cv
1037.29 290.065 1037.58 290.24 1038.05 290.393 cv
1039.19 290.762 li
1038.89 291.69 li
1037.75 291.32 li
1036.88 291.039 1036.34 290.685 1036.12 290.259 cv
1035.91 289.833 1035.94 289.2 1036.21 288.359 cv
1037.4 284.687 li
1036.59 284.422 li
1036.87 283.557 li
1037.68 283.822 li
1038.31 281.905 li
1039.42 282.267 li
f
1041.1 289.457 mo
1042.43 285.364 li
1043.54 285.726 li
1042.23 289.781 li
1042.02 290.424 1041.99 290.934 1042.13 291.336 cv
1042.27 291.738 1042.59 292.019 1043.1 292.184 cv
1043.69 292.377 1044.24 292.348 1044.71 292.077 cv
1045.18 291.806 1045.52 291.343 1045.74 290.676 cv
1046.98 286.843 li
1048.09 287.204 li
1045.9 293.967 li
1044.78 293.606 li
1045.12 292.567 li
1044.71 292.899 1044.29 293.091 1043.88 293.177 cv
1043.46 293.246 1043.02 293.212 1042.56 293.059 cv
1041.78 292.806 1041.26 292.379 1041.02 291.768 cv
1040.76 291.165 1040.8 290.396 1041.1 289.457 cv
1045.28 286.112 mo
1045.28 286.112 li
f
1053.96 290.26 mo
1053.86 290.145 1053.74 290.052 1053.61 289.966 cv
1053.47 289.893 1053.31 289.816 1053.14 289.76 cv
1052.51 289.555 1051.96 289.609 1051.49 289.908 cv
1051.01 290.204 1050.67 290.733 1050.42 291.499 cv
1049.26 295.06 li
1048.15 294.698 li
1050.34 287.935 li
1051.46 288.297 li
1051.11 289.348 li
1051.47 289.012 1051.88 288.804 1052.31 288.726 cv
1052.75 288.649 1053.24 288.699 1053.78 288.875 cv
1053.86 288.9 1053.94 288.94 1054.04 288.972 cv
1054.12 289.013 1054.22 289.057 1054.33 289.122 cv
1053.96 290.26 li
f
1060.24 294.582 mo
1060.06 295.126 li
1054.96 293.467 li
1054.76 294.249 1054.79 294.915 1055.08 295.447 cv
1055.36 295.976 1055.86 296.358 1056.6 296.599 cv
1057.03 296.736 1057.46 296.823 1057.89 296.853 cv
1058.32 296.882 1058.78 296.854 1059.25 296.76 cv
1058.9 297.811 li
1058.45 297.856 1058 297.859 1057.56 297.797 cv
1057.11 297.734 1056.66 297.643 1056.24 297.507 cv
1055.15 297.153 1054.4 296.567 1053.97 295.744 cv
1053.54 294.921 1053.51 293.967 1053.86 292.891 cv
1054.22 291.791 1054.8 291.01 1055.61 290.547 cv
1056.41 290.097 1057.33 290.028 1058.35 290.358 cv
1059.26 290.655 1059.88 291.185 1060.22 291.939 cv
1060.55 292.701 1060.57 293.581 1060.24 294.582 cv
1059.23 293.899 mo
1059.42 293.289 1059.4 292.751 1059.2 292.275 cv
1058.98 291.808 1058.6 291.478 1058.05 291.301 cv
1057.43 291.101 1056.88 291.125 1056.4 291.351 cv
1055.91 291.577 1055.53 291.999 1055.28 292.613 cv
1059.23 293.899 li
f
1063.85 289.835 mo
1065.07 290.233 li
1062.14 299.246 li
1060.92 298.848 li
1063.85 289.835 li
f
1071.47 297.765 mo
1070.14 301.845 li
1069.03 301.484 li
1070.34 297.441 li
1070.55 296.798 1070.57 296.284 1070.42 295.882 cv
1070.28 295.48 1069.96 295.199 1069.47 295.038 cv
1068.86 294.841 1068.33 294.886 1067.86 295.157 cv
1067.39 295.428 1067.05 295.891 1066.83 296.546 cv
1065.59 300.367 li
1064.48 300.005 li
1066.68 293.242 li
1067.79 293.604 li
1067.45 294.655 li
1067.84 294.343 1068.25 294.135 1068.68 294.057 cv
1069.1 293.976 1069.56 294.001 1070.03 294.154 cv
1070.8 294.403 1071.31 294.843 1071.55 295.454 cv
1071.79 296.065 1071.77 296.838 1071.47 297.765 cv
f
1078.83 294.281 mo
1078.53 295.208 li
1077.47 294.862 li
1077.07 294.734 1076.76 294.728 1076.56 294.84 cv
1076.35 294.949 1076.18 295.209 1076.04 295.63 cv
1075.85 296.223 li
1077.68 296.818 li
1077.4 297.683 li
1075.57 297.088 li
1073.65 302.986 li
1072.54 302.624 li
1074.46 296.727 li
1073.39 296.381 li
1073.67 295.516 li
1074.74 295.861 li
1074.89 295.392 li
1075.13 294.65 1075.48 294.15 1075.94 293.916 cv
1076.4 293.682 1077.01 293.69 1077.78 293.939 cv
1078.83 294.281 li
f
1081.27 298.846 mo
1080.68 298.653 1080.13 298.735 1079.63 299.093 cv
1079.13 299.45 1078.76 300.024 1078.5 300.828 cv
1078.23 301.644 1078.19 302.327 1078.38 302.909 cv
1078.57 303.491 1078.97 303.867 1079.58 304.063 cv
1080.17 304.256 1080.71 304.186 1081.21 303.829 cv
1081.71 303.472 1082.09 302.897 1082.35 302.081 cv
1082.61 301.29 1082.65 300.591 1082.45 300.009 cv
1082.26 299.426 1081.87 299.039 1081.27 298.846 cv
1081.58 297.906 mo
1082.54 298.22 1083.19 298.786 1083.55 299.585 cv
1083.89 300.392 1083.89 301.35 1083.53 302.463 cv
1083.17 303.576 1082.6 304.349 1081.86 304.79 cv
1081.09 305.24 1080.24 305.304 1079.28 304.991 cv
1078.3 304.673 1077.63 304.115 1077.29 303.308 cv
1076.95 302.513 1076.96 301.559 1077.32 300.446 cv
1077.68 299.334 1078.24 298.556 1078.98 298.103 cv
1079.73 297.661 1080.6 297.589 1081.58 297.906 cv
f
1091.32 263.286 mo
1091.32 266.786 li
f
1091.32 263.286 mo
1091.32 266.786 li
@
1061.57 273.944 mo
1061.15 275.23 li
1060.85 274.723 1060.51 274.298 1060.11 273.947 cv
1059.7 273.609 1059.25 273.354 1058.73 273.185 cv
1057.69 272.847 1056.8 272.912 1056.05 273.366 cv
1055.3 273.819 1054.73 274.634 1054.35 275.82 cv
1053.96 277.007 1053.94 278.011 1054.28 278.818 cv
1054.61 279.625 1055.31 280.191 1056.34 280.529 cv
1056.86 280.698 1057.37 280.768 1057.91 280.723 cv
1058.44 280.69 1058.96 280.546 1059.51 280.299 cv
1059.09 281.573 li
1058.56 281.729 1058.04 281.79 1057.52 281.774 cv
1057.01 281.757 1056.48 281.667 1055.95 281.494 cv
1054.59 281.052 1053.64 280.294 1053.12 279.209 cv
1052.6 278.124 1052.59 276.862 1053.06 275.403 cv
1053.53 273.956 1054.28 272.943 1055.35 272.36 cv
1056.41 271.788 1057.62 271.717 1058.98 272.159 cv
1059.53 272.336 1060.01 272.575 1060.43 272.864 cv
1060.86 273.165 1061.24 273.523 1061.57 273.944 cv
f
1065.26 277.727 mo
1064.67 277.534 1064.12 277.617 1063.63 277.974 cv
1063.13 278.331 1062.75 278.906 1062.49 279.709 cv
1062.22 280.525 1062.18 281.208 1062.37 281.79 cv
1062.57 282.373 1062.96 282.748 1063.57 282.945 cv
1064.16 283.138 1064.7 283.068 1065.2 282.71 cv
1065.7 282.353 1066.08 281.779 1066.34 280.963 cv
1066.6 280.171 1066.64 279.472 1066.44 278.89 cv
1066.25 278.308 1065.86 277.92 1065.26 277.727 cv
1065.57 276.788 mo
1066.53 277.101 1067.18 277.668 1067.54 278.466 cv
1067.88 279.274 1067.88 280.232 1067.52 281.344 cv
1067.16 282.457 1066.59 283.23 1065.85 283.672 cv
1065.09 284.121 1064.23 284.185 1063.27 283.872 cv
1062.29 283.555 1061.62 282.997 1061.29 282.189 cv
1060.94 281.394 1060.95 280.44 1061.31 279.328 cv
1061.67 278.215 1062.23 277.438 1062.98 276.984 cv
1063.72 276.543 1064.59 276.47 1065.57 276.788 cv
f
1075.31 281.565 mo
1075.74 281.159 1076.19 280.909 1076.65 280.786 cv
1077.11 280.675 1077.61 280.7 1078.14 280.873 cv
1078.84 281.098 1079.3 281.522 1079.52 282.141 cv
1079.74 282.76 1079.71 283.529 1079.42 284.432 cv
1078.09 288.512 li
1076.98 288.15 li
1078.3 284.107 li
1078.5 283.465 1078.54 282.942 1078.42 282.548 cv
1078.28 282.163 1077.99 281.89 1077.52 281.737 cv
1076.94 281.548 1076.42 281.597 1075.96 281.872 cv
1075.5 282.147 1075.17 282.614 1074.96 283.269 cv
1073.72 287.09 li
1072.6 286.728 li
1073.92 282.685 li
1074.13 282.042 1074.16 281.52 1074.04 281.126 cv
1073.91 280.741 1073.6 280.464 1073.13 280.311 cv
1072.56 280.126 1072.04 280.175 1071.58 280.45 cv
1071.12 280.725 1070.79 281.192 1070.58 281.847 cv
1069.34 285.668 li
1068.23 285.306 li
1070.43 278.543 li
1071.54 278.905 li
1071.2 279.956 li
1071.58 279.628 1071.99 279.419 1072.41 279.338 cv
1072.82 279.253 1073.27 279.29 1073.77 279.451 cv
1074.26 279.612 1074.63 279.868 1074.89 280.228 cv
1075.16 280.587 1075.29 281.039 1075.31 281.565 cv
f
1086.26 287.434 mo
1086.53 286.618 1086.56 285.932 1086.38 285.353 cv
1086.19 284.771 1085.8 284.388 1085.22 284.199 cv
1084.63 284.006 1084.1 284.092 1083.61 284.454 cv
1083.11 284.811 1082.74 285.389 1082.48 286.205 cv
1082.21 287.021 1082.17 287.716 1082.36 288.299 cv
1082.54 288.877 1082.93 289.248 1083.52 289.441 cv
1084.1 289.63 1084.63 289.556 1085.13 289.199 cv
1085.62 288.837 1086 288.25 1086.26 287.434 cv
1083.25 283.844 mo
1083.6 283.52 1083.99 283.32 1084.41 283.239 cv
1084.84 283.157 1085.3 283.199 1085.8 283.36 cv
1086.61 283.625 1087.17 284.176 1087.48 284.987 cv
1087.78 285.807 1087.76 286.745 1087.41 287.808 cv
1087.07 288.871 1086.53 289.652 1085.81 290.131 cv
1085.08 290.605 1084.31 290.709 1083.49 290.444 cv
1083 290.284 1082.6 290.044 1082.3 289.742 cv
1082 289.44 1081.8 289.047 1081.71 288.567 cv
1081.38 289.581 li
1080.27 289.219 li
1083.32 279.823 li
1084.44 280.184 li
1083.25 283.844 li
f
1090.36 285.019 mo
1091.47 285.38 li
1089.27 292.143 li
1088.16 291.782 li
1090.36 285.019 li
1091.21 282.385 mo
1092.32 282.747 li
1091.87 284.156 li
1090.75 283.795 li
1091.21 282.385 li
f
1098.55 290.647 mo
1097.22 294.727 li
1096.11 294.365 li
1097.42 290.322 li
1097.63 289.679 1097.65 289.165 1097.5 288.763 cv
1097.36 288.362 1097.04 288.08 1096.55 287.92 cv
1095.94 287.723 1095.41 287.768 1094.94 288.039 cv
1094.47 288.31 1094.13 288.773 1093.91 289.428 cv
1092.67 293.248 li
1091.56 292.887 li
1093.76 286.124 li
1094.87 286.485 li
1094.53 287.536 li
1094.92 287.225 1095.32 287.016 1095.76 286.939 cv
1096.18 286.858 1096.64 286.883 1097.11 287.036 cv
1097.88 287.285 1098.39 287.725 1098.63 288.335 cv
1098.87 288.946 1098.85 289.719 1098.55 290.647 cv
f
1103.62 293.046 mo
1102.71 292.753 1102.06 292.663 1101.65 292.748 cv
1101.24 292.846 1100.95 293.136 1100.79 293.631 cv
1100.66 294.026 1100.68 294.388 1100.87 294.695 cv
1101.05 295.014 1101.37 295.242 1101.82 295.386 cv
1102.44 295.587 1103 295.538 1103.51 295.213 cv
1104.03 294.901 1104.4 294.38 1104.64 293.651 cv
1104.72 293.403 li
1103.62 293.046 li
1105.98 293.308 mo
1104.73 297.165 li
1103.61 296.803 li
1103.95 295.777 li
1103.55 296.113 1103.13 296.306 1102.7 296.371 cv
1102.27 296.435 1101.77 296.382 1101.22 296.205 cv
1100.53 295.98 1100.04 295.614 1099.75 295.098 cv
1099.47 294.582 1099.44 293.999 1099.65 293.343 cv
1099.9 292.589 1100.33 292.101 1100.98 291.874 cv
1101.61 291.655 1102.43 291.702 1103.44 292.032 cv
1105 292.538 li
1105.03 292.427 li
1105.2 291.92 1105.16 291.468 1104.91 291.075 cv
1104.67 290.695 1104.25 290.394 1103.64 290.197 cv
1103.25 290.068 1102.86 289.997 1102.46 289.976 cv
1102.05 289.954 1101.66 289.977 1101.27 290.042 cv
1101.61 289.016 li
1102.05 288.996 1102.48 289.001 1102.89 289.051 cv
1103.3 289.102 1103.69 289.173 1104.06 289.293 cv
1105.03 289.611 1105.68 290.107 1106 290.771 cv
1106.31 291.434 1106.31 292.281 1105.98 293.308 cv
f
1110.93 289.586 mo
1110.31 291.503 li
1112.6 292.246 li
1112.32 293.111 li
1110.03 292.368 li
1108.84 296.04 li
1108.66 296.597 1108.61 296.979 1108.71 297.176 cv
1108.81 297.385 1109.09 297.559 1109.56 297.712 cv
1110.7 298.082 li
1110.4 299.009 li
1109.26 298.639 li
1108.4 298.358 1107.86 298.005 1107.64 297.579 cv
1107.42 297.153 1107.45 296.519 1107.72 295.679 cv
1108.92 292.007 li
1108.1 291.742 li
1108.38 290.876 li
1109.2 291.141 li
1109.82 289.225 li
1110.93 289.586 li
f
1114.06 292.72 mo
1115.17 293.082 li
1112.97 299.845 li
1111.86 299.483 li
1114.06 292.72 li
1114.91 290.087 mo
1116.03 290.448 li
1115.57 291.858 li
1114.45 291.496 li
1114.91 290.087 li
f
1119.86 295.467 mo
1119.27 295.275 1118.72 295.357 1118.22 295.714 cv
1117.72 296.071 1117.35 296.646 1117.09 297.449 cv
1116.82 298.265 1116.78 298.948 1116.97 299.531 cv
1117.16 300.113 1117.56 300.488 1118.17 300.685 cv
1118.76 300.878 1119.3 300.808 1119.8 300.45 cv
1120.3 300.093 1120.68 299.519 1120.94 298.703 cv
1121.2 297.912 1121.24 297.212 1121.04 296.63 cv
1120.85 296.048 1120.46 295.66 1119.86 295.467 cv
1120.17 294.528 mo
1121.13 294.841 1121.78 295.408 1122.14 296.207 cv
1122.48 297.014 1122.48 297.972 1122.12 299.084 cv
1121.76 300.197 1121.19 300.97 1120.45 301.412 cv
1119.68 301.861 1118.83 301.925 1117.87 301.612 cv
1116.89 301.295 1116.22 300.737 1115.88 299.929 cv
1115.54 299.134 1115.55 298.181 1115.91 297.068 cv
1116.27 295.955 1116.83 295.178 1117.57 294.724 cv
1118.32 294.283 1119.19 294.21 1120.17 294.528 cv
f
1129.81 300.806 mo
1128.49 304.886 li
1127.38 304.525 li
1128.69 300.482 li
1128.9 299.839 1128.92 299.325 1128.77 298.923 cv
1128.63 298.521 1128.31 298.24 1127.82 298.079 cv
1127.21 297.882 1126.68 297.927 1126.21 298.198 cv
1125.73 298.469 1125.39 298.932 1125.18 299.587 cv
1123.94 303.408 li
1122.83 303.046 li
1125.02 296.283 li
1126.14 296.645 li
1125.79 297.696 li
1126.18 297.384 1126.59 297.176 1127.03 297.098 cv
1127.45 297.017 1127.91 297.042 1128.38 297.195 cv
1129.14 297.444 1129.66 297.884 1129.9 298.495 cv
1130.13 299.106 1130.12 299.879 1129.81 300.806 cv
f
911.231 329.922 mo
910.615 330.986 910.167 332.022 909.873 333.044 cv
909.565 334.066 909.425 335.102 909.425 336.152 cv
909.425 337.216 909.565 338.252 909.873 339.274 cv
910.167 340.31 910.615 341.332 911.231 342.382 cv
910.139 342.382 li
909.453 341.304 908.935 340.268 908.599 339.232 cv
908.263 338.196 908.095 337.174 908.095 336.152 cv
908.095 335.144 908.263 334.122 908.599 333.086 cv
908.935 332.05 909.439 331 910.139 329.922 cv
911.231 329.922 li
f
919.183 333.184 mo
919.183 334.36 li
918.819 334.164 918.469 334.024 918.105 333.926 cv
917.741 333.828 917.391 333.772 917.027 333.772 cv
916.215 333.772 915.571 334.038 915.123 334.556 cv
914.675 335.074 914.451 335.802 914.451 336.726 cv
914.451 337.664 914.675 338.392 915.123 338.91 cv
915.571 339.428 916.215 339.68 917.027 339.68 cv
917.391 339.68 917.741 339.638 918.105 339.54 cv
918.469 339.442 918.819 339.288 919.183 339.092 cv
919.183 340.254 li
918.819 340.422 918.455 340.548 918.091 340.618 cv
917.713 340.688 917.307 340.73 916.887 340.73 cv
915.739 340.73 914.815 340.38 914.143 339.652 cv
913.457 338.938 913.121 337.958 913.121 336.726 cv
913.121 335.48 913.457 334.5 914.143 333.786 cv
914.829 333.072 915.767 332.708 916.971 332.708 cv
917.363 332.708 917.741 332.75 918.105 332.834 cv
918.469 332.918 918.833 333.03 919.183 333.184 cv
f
921.171 329.922 mo
922.263 329.922 li
922.935 331 923.453 332.05 923.789 333.086 cv
924.125 334.122 924.307 335.144 924.307 336.152 cv
924.307 337.174 924.125 338.196 923.789 339.232 cv
923.453 340.268 922.935 341.304 922.263 342.382 cv
921.171 342.382 li
921.773 341.332 922.221 340.31 922.529 339.274 cv
922.823 338.252 922.977 337.216 922.977 336.152 cv
922.977 335.102 922.823 334.066 922.529 333.044 cv
922.221 332.022 921.773 330.986 921.171 329.922 cv
f
930.299 331.7 mo
928.423 336.782 li
932.175 336.782 li
930.299 331.7 li
929.516 330.342 mo
931.083 330.342 li
934.975 340.548 li
933.533 340.548 li
932.609 337.93 li
928.003 337.93 li
927.079 340.548 li
925.623 340.548 li
929.516 330.342 li
f
941.304 335.76 mo
941.598 335.872 941.892 336.082 942.172 336.404 cv
942.452 336.74 942.732 337.188 943.012 337.762 cv
944.411 340.548 li
942.928 340.548 li
941.626 337.93 li
941.29 337.258 940.954 336.796 940.646 336.572 cv
940.324 336.348 939.89 336.236 939.344 336.236 cv
937.846 336.236 li
937.846 340.548 li
936.46 340.548 li
936.46 330.342 li
939.582 330.342 li
940.744 330.342 941.612 330.594 942.186 331.07 cv
942.76 331.56 943.054 332.302 943.054 333.282 cv
943.054 333.926 942.9 334.472 942.606 334.892 cv
942.298 335.312 941.864 335.606 941.304 335.76 cv
937.846 331.476 mo
937.846 335.102 li
939.582 335.102 li
940.24 335.102 940.744 334.948 941.08 334.64 cv
941.416 334.332 941.598 333.884 941.598 333.282 cv
941.598 332.694 941.416 332.246 941.08 331.938 cv
940.744 331.63 940.24 331.476 939.582 331.476 cv
937.846 331.476 li
f
951.034 335.76 mo
951.328 335.872 951.622 336.082 951.902 336.404 cv
952.182 336.74 952.462 337.188 952.742 337.762 cv
954.142 340.548 li
952.658 340.548 li
951.356 337.93 li
951.02 337.258 950.684 336.796 950.376 336.572 cv
950.054 336.348 949.62 336.236 949.074 336.236 cv
947.576 336.236 li
947.576 340.548 li
946.19 340.548 li
946.19 330.342 li
949.312 330.342 li
950.474 330.342 951.342 330.594 951.916 331.07 cv
952.49 331.56 952.784 332.302 952.784 333.282 cv
952.784 333.926 952.63 334.472 952.336 334.892 cv
952.028 335.312 951.594 335.606 951.034 335.76 cv
947.576 331.476 mo
947.576 335.102 li
949.312 335.102 li
949.97 335.102 950.474 334.948 950.81 334.64 cv
951.146 334.332 951.328 333.884 951.328 333.282 cv
951.328 332.694 951.146 332.246 950.81 331.938 cv
950.474 331.63 949.97 331.476 949.312 331.476 cv
947.576 331.476 li
f
959 331.252 mo
958.286 331.252 957.754 331.602 957.39 332.302 cv
957.026 333.002 956.858 334.052 956.858 335.452 cv
956.858 336.852 957.026 337.902 957.39 338.602 cv
957.754 339.302 958.286 339.652 959 339.652 cv
959.714 339.652 960.246 339.302 960.61 338.602 cv
960.96 337.902 961.142 336.852 961.142 335.452 cv
961.142 334.052 960.96 333.002 960.61 332.302 cv
960.246 331.602 959.714 331.252 959 331.252 cv
959 330.16 mo
960.134 330.16 961.002 330.622 961.618 331.518 cv
962.22 332.428 962.528 333.744 962.528 335.452 cv
962.528 337.174 962.22 338.49 961.618 339.386 cv
961.002 340.282 960.134 340.73 959 340.73 cv
957.852 340.73 956.97 340.282 956.368 339.386 cv
955.766 338.49 955.472 337.174 955.472 335.452 cv
955.472 333.744 955.766 332.428 956.368 331.518 cv
956.97 330.622 957.852 330.16 959 330.16 cv
f
964.95 338.812 mo
966.392 338.812 li
966.392 340.548 li
964.95 340.548 li
964.95 338.812 li
f
969.64 339.386 mo
971.894 339.386 li
971.894 331.602 li
969.444 332.092 li
969.444 330.832 li
971.88 330.342 li
973.266 330.342 li
973.266 339.386 li
975.52 339.386 li
975.52 340.548 li
969.64 340.548 li
969.64 339.386 li
f
792.416 263.286 mo
788.916 263.286 li
f
792.416 263.286 mo
788.916 263.286 li
@
767.602 259.311 mo
766.888 259.311 766.356 259.661 765.992 260.361 cv
765.628 261.061 765.46 262.111 765.46 263.511 cv
765.46 264.911 765.628 265.961 765.992 266.661 cv
766.356 267.361 766.888 267.711 767.602 267.711 cv
768.316 267.711 768.848 267.361 769.212 266.661 cv
769.562 265.961 769.744 264.911 769.744 263.511 cv
769.744 262.111 769.562 261.061 769.212 260.361 cv
768.848 259.661 768.316 259.311 767.602 259.311 cv
767.602 258.219 mo
768.736 258.219 769.604 258.681 770.22 259.577 cv
770.822 260.487 771.13 261.803 771.13 263.511 cv
771.13 265.233 770.822 266.549 770.22 267.445 cv
769.604 268.341 768.736 268.789 767.602 268.789 cv
766.454 268.789 765.572 268.341 764.97 267.445 cv
764.368 266.549 764.074 265.233 764.074 263.511 cv
764.074 261.803 764.368 260.487 764.97 259.577 cv
765.572 258.681 766.454 258.219 767.602 258.219 cv
f
773.552 266.871 mo
774.994 266.871 li
774.994 268.607 li
773.552 268.607 li
773.552 266.871 li
f
781.798 259.605 mo
778.312 265.051 li
781.798 265.051 li
781.798 259.605 li
781.434 258.401 mo
783.17 258.401 li
783.17 265.051 li
784.626 265.051 li
784.626 266.199 li
783.17 266.199 li
783.17 268.607 li
781.798 268.607 li
781.798 266.199 li
777.192 266.199 li
777.192 264.869 li
781.434 258.401 li
f
792.416 231.95 mo
788.916 231.95 li
f
792.416 231.95 mo
788.916 231.95 li
@
767.602 227.974 mo
766.888 227.974 766.356 228.324 765.992 229.024 cv
765.628 229.724 765.46 230.774 765.46 232.174 cv
765.46 233.574 765.628 234.624 765.992 235.324 cv
766.356 236.024 766.888 236.374 767.602 236.374 cv
768.316 236.374 768.848 236.024 769.212 235.324 cv
769.562 234.624 769.744 233.574 769.744 232.174 cv
769.744 230.774 769.562 229.724 769.212 229.024 cv
768.848 228.324 768.316 227.974 767.602 227.974 cv
767.602 226.882 mo
768.736 226.882 769.604 227.344 770.22 228.24 cv
770.822 229.15 771.13 230.466 771.13 232.174 cv
771.13 233.896 770.822 235.212 770.22 236.108 cv
769.604 237.004 768.736 237.452 767.602 237.452 cv
766.454 237.452 765.572 237.004 764.97 236.108 cv
764.368 235.212 764.074 233.896 764.074 232.174 cv
764.074 230.466 764.368 229.15 764.97 228.24 cv
765.572 227.344 766.454 226.882 767.602 226.882 cv
f
773.552 235.534 mo
774.994 235.534 li
774.994 237.27 li
773.552 237.27 li
773.552 235.534 li
f
778.018 227.064 mo
783.436 227.064 li
783.436 228.226 li
779.278 228.226 li
779.278 230.732 li
779.474 230.662 779.684 230.606 779.88 230.578 cv
780.076 230.55 780.286 230.522 780.482 230.522 cv
781.616 230.522 782.512 230.844 783.184 231.46 cv
783.856 232.09 784.192 232.93 784.192 233.994 cv
784.192 235.1 783.842 235.954 783.156 236.556 cv
782.47 237.158 781.504 237.452 780.272 237.452 cv
779.838 237.452 779.404 237.41 778.956 237.354 cv
778.508 237.284 778.06 237.186 777.584 237.032 cv
777.584 235.646 li
777.99 235.87 778.41 236.038 778.858 236.15 cv
779.292 236.262 779.754 236.304 780.244 236.304 cv
781.028 236.304 781.658 236.108 782.12 235.688 cv
782.568 235.268 782.806 234.708 782.806 233.994 cv
782.806 233.294 782.568 232.734 782.12 232.314 cv
781.658 231.894 781.028 231.684 780.244 231.684 cv
779.88 231.684 779.502 231.726 779.138 231.81 cv
778.774 231.894 778.396 232.02 778.018 232.188 cv
778.018 227.064 li
f
792.416 200.613 mo
788.916 200.613 li
f
792.416 200.613 mo
788.916 200.613 li
@
767.602 196.637 mo
766.888 196.637 766.356 196.987 765.992 197.687 cv
765.628 198.387 765.46 199.437 765.46 200.837 cv
765.46 202.237 765.628 203.287 765.992 203.987 cv
766.356 204.687 766.888 205.037 767.602 205.037 cv
768.316 205.037 768.848 204.687 769.212 203.987 cv
769.562 203.287 769.744 202.237 769.744 200.837 cv
769.744 199.437 769.562 198.387 769.212 197.687 cv
768.848 196.987 768.316 196.637 767.602 196.637 cv
767.602 195.545 mo
768.736 195.545 769.604 196.007 770.22 196.903 cv
770.822 197.813 771.13 199.129 771.13 200.837 cv
771.13 202.559 770.822 203.875 770.22 204.771 cv
769.604 205.667 768.736 206.115 767.602 206.115 cv
766.454 206.115 765.572 205.667 764.97 204.771 cv
764.368 203.875 764.074 202.559 764.074 200.837 cv
764.074 199.129 764.368 197.813 764.97 196.903 cv
765.572 196.007 766.454 195.545 767.602 195.545 cv
f
773.552 204.197 mo
774.994 204.197 li
774.994 205.933 li
773.552 205.933 li
773.552 204.197 li
f
781.126 200.277 mo
780.51 200.277 780.02 200.501 779.656 200.921 cv
779.292 201.341 779.11 201.929 779.11 202.657 cv
779.11 203.399 779.292 203.987 779.656 204.407 cv
780.02 204.827 780.51 205.037 781.126 205.037 cv
781.742 205.037 782.232 204.827 782.596 204.407 cv
782.96 203.987 783.142 203.399 783.142 202.657 cv
783.142 201.929 782.96 201.341 782.596 200.921 cv
782.232 200.501 781.742 200.277 781.126 200.277 cv
783.87 195.951 mo
783.87 197.211 li
783.52 197.043 783.17 196.917 782.82 196.833 cv
782.456 196.749 782.106 196.707 781.77 196.707 cv
780.846 196.707 780.146 197.015 779.67 197.631 cv
779.194 198.247 778.914 199.185 778.858 200.417 cv
779.124 200.025 779.46 199.717 779.866 199.507 cv
780.272 199.297 780.72 199.185 781.21 199.185 cv
782.232 199.185 783.044 199.507 783.632 200.123 cv
784.22 200.739 784.528 201.593 784.528 202.657 cv
784.528 203.707 784.206 204.547 783.59 205.177 cv
782.974 205.807 782.148 206.115 781.126 206.115 cv
779.95 206.115 779.04 205.667 778.424 204.771 cv
777.794 203.875 777.486 202.559 777.486 200.837 cv
777.486 199.227 777.864 197.939 778.634 196.987 cv
779.39 196.035 780.426 195.545 781.714 195.545 cv
782.05 195.545 782.4 195.587 782.764 195.643 cv
783.114 195.713 783.478 195.811 783.87 195.951 cv
f
792.416 169.276 mo
788.916 169.276 li
f
792.416 169.276 mo
788.916 169.276 li
@
767.602 165.3 mo
766.888 165.3 766.356 165.65 765.992 166.35 cv
765.628 167.05 765.46 168.1 765.46 169.5 cv
765.46 170.9 765.628 171.95 765.992 172.65 cv
766.356 173.35 766.888 173.7 767.602 173.7 cv
768.316 173.7 768.848 173.35 769.212 172.65 cv
769.562 171.95 769.744 170.9 769.744 169.5 cv
769.744 168.1 769.562 167.05 769.212 166.35 cv
768.848 165.65 768.316 165.3 767.602 165.3 cv
767.602 164.208 mo
768.736 164.208 769.604 164.67 770.22 165.566 cv
770.822 166.476 771.13 167.792 771.13 169.5 cv
771.13 171.222 770.822 172.538 770.22 173.434 cv
769.604 174.33 768.736 174.778 767.602 174.778 cv
766.454 174.778 765.572 174.33 764.97 173.434 cv
764.368 172.538 764.074 171.222 764.074 169.5 cv
764.074 167.792 764.368 166.476 764.97 165.566 cv
765.572 164.67 766.454 164.208 767.602 164.208 cv
f
773.552 172.86 mo
774.994 172.86 li
774.994 174.596 li
773.552 174.596 li
773.552 172.86 li
f
777.654 164.39 mo
784.22 164.39 li
784.22 164.978 li
780.51 174.596 li
779.068 174.596 li
782.554 165.552 li
777.654 165.552 li
777.654 164.39 li
f
792.416 137.939 mo
788.916 137.939 li
f
792.416 137.939 mo
788.916 137.939 li
@
767.602 133.963 mo
766.888 133.963 766.356 134.313 765.992 135.013 cv
765.628 135.713 765.46 136.763 765.46 138.163 cv
765.46 139.563 765.628 140.613 765.992 141.313 cv
766.356 142.013 766.888 142.363 767.602 142.363 cv
768.316 142.363 768.848 142.013 769.212 141.313 cv
769.562 140.613 769.744 139.563 769.744 138.163 cv
769.744 136.763 769.562 135.713 769.212 135.013 cv
768.848 134.313 768.316 133.963 767.602 133.963 cv
767.602 132.871 mo
768.736 132.871 769.604 133.333 770.22 134.229 cv
770.822 135.139 771.13 136.455 771.13 138.163 cv
771.13 139.885 770.822 141.201 770.22 142.097 cv
769.604 142.993 768.736 143.441 767.602 143.441 cv
766.454 143.441 765.572 142.993 764.97 142.097 cv
764.368 141.201 764.074 139.885 764.074 138.163 cv
764.074 136.455 764.368 135.139 764.97 134.229 cv
765.572 133.333 766.454 132.871 767.602 132.871 cv
f
773.552 141.523 mo
774.994 141.523 li
774.994 143.259 li
773.552 143.259 li
773.552 141.523 li
f
780.958 138.415 mo
780.3 138.415 779.782 138.597 779.404 138.947 cv
779.026 139.297 778.844 139.773 778.844 140.389 cv
778.844 141.005 779.026 141.495 779.404 141.845 cv
779.782 142.195 780.3 142.363 780.958 142.363 cv
781.602 142.363 782.12 142.195 782.498 141.831 cv
782.876 141.481 783.072 141.005 783.072 140.389 cv
783.072 139.773 782.876 139.297 782.512 138.947 cv
782.134 138.597 781.616 138.415 780.958 138.415 cv
779.572 137.827 mo
778.984 137.687 778.522 137.407 778.186 137.001 cv
777.85 136.595 777.696 136.105 777.696 135.517 cv
777.696 134.705 777.976 134.061 778.564 133.585 cv
779.138 133.109 779.936 132.871 780.958 132.871 cv
781.966 132.871 782.764 133.109 783.352 133.585 cv
783.926 134.061 784.22 134.705 784.22 135.517 cv
784.22 136.105 784.052 136.595 783.716 137.001 cv
783.38 137.407 782.932 137.687 782.344 137.827 cv
783.002 137.981 783.52 138.289 783.898 138.737 cv
784.262 139.185 784.458 139.745 784.458 140.389 cv
784.458 141.383 784.15 142.139 783.548 142.657 cv
782.932 143.189 782.078 143.441 780.958 143.441 cv
779.824 143.441 778.956 143.189 778.354 142.657 cv
777.752 142.139 777.458 141.383 777.458 140.389 cv
777.458 139.745 777.64 139.185 778.018 138.737 cv
778.382 138.289 778.9 137.981 779.572 137.827 cv
779.068 135.643 mo
779.068 136.175 779.222 136.595 779.558 136.889 cv
779.894 137.183 780.356 137.323 780.958 137.323 cv
781.546 137.323 782.008 137.183 782.344 136.889 cv
782.68 136.595 782.848 136.175 782.848 135.643 cv
782.848 135.111 782.68 134.705 782.344 134.411 cv
782.008 134.117 781.546 133.963 780.958 133.963 cv
780.356 133.963 779.894 134.117 779.558 134.411 cv
779.222 134.705 779.068 135.111 779.068 135.643 cv
f
792.416 106.602 mo
788.916 106.602 li
f
792.416 106.602 mo
788.916 106.602 li
@
767.602 102.626 mo
766.888 102.626 766.356 102.976 765.992 103.676 cv
765.628 104.376 765.46 105.426 765.46 106.826 cv
765.46 108.226 765.628 109.276 765.992 109.976 cv
766.356 110.676 766.888 111.026 767.602 111.026 cv
768.316 111.026 768.848 110.676 769.212 109.976 cv
769.562 109.276 769.744 108.226 769.744 106.826 cv
769.744 105.426 769.562 104.376 769.212 103.676 cv
768.848 102.976 768.316 102.626 767.602 102.626 cv
767.602 101.534 mo
768.736 101.534 769.604 101.996 770.22 102.892 cv
770.822 103.802 771.13 105.118 771.13 106.826 cv
771.13 108.548 770.822 109.864 770.22 110.76 cv
769.604 111.656 768.736 112.104 767.602 112.104 cv
766.454 112.104 765.572 111.656 764.97 110.76 cv
764.368 109.864 764.074 108.548 764.074 106.826 cv
764.074 105.118 764.368 103.802 764.97 102.892 cv
765.572 101.996 766.454 101.534 767.602 101.534 cv
f
773.552 110.186 mo
774.994 110.186 li
774.994 111.922 li
773.552 111.922 li
773.552 110.186 li
f
778.046 111.712 mo
778.046 110.452 li
778.382 110.62 778.732 110.746 779.096 110.83 cv
779.446 110.914 779.796 110.956 780.146 110.956 cv
781.042 110.956 781.742 110.662 782.218 110.046 cv
782.694 109.43 782.974 108.506 783.058 107.246 cv
782.778 107.638 782.442 107.946 782.05 108.156 cv
781.644 108.366 781.196 108.464 780.706 108.464 cv
779.67 108.464 778.858 108.156 778.27 107.54 cv
777.682 106.924 777.388 106.084 777.388 105.006 cv
777.388 103.97 777.696 103.13 778.312 102.486 cv
778.928 101.856 779.754 101.534 780.79 101.534 cv
781.966 101.534 782.876 101.996 783.492 102.892 cv
784.108 103.802 784.43 105.118 784.43 106.826 cv
784.43 108.45 784.038 109.724 783.282 110.676 cv
782.512 111.628 781.49 112.104 780.202 112.104 cv
779.852 112.104 779.502 112.062 779.152 112.006 cv
778.788 111.95 778.424 111.852 778.046 111.712 cv
780.79 107.386 mo
781.406 107.386 781.896 107.176 782.26 106.756 cv
782.624 106.336 782.806 105.748 782.806 105.006 cv
782.806 104.278 782.624 103.69 782.26 103.27 cv
781.896 102.85 781.406 102.626 780.79 102.626 cv
780.174 102.626 779.684 102.85 779.32 103.27 cv
778.956 103.69 778.774 104.278 778.774 105.006 cv
778.774 105.748 778.956 106.336 779.32 106.756 cv
779.684 107.176 780.174 107.386 780.79 107.386 cv
f
792.416 75.2652 mo
788.916 75.2652 li
f
792.416 75.2652 mo
788.916 75.2652 li
@
764.886 79.4235 mo
767.14 79.4235 li
767.14 71.6395 li
764.69 72.1295 li
764.69 70.8695 li
767.126 70.3795 li
768.512 70.3795 li
768.512 79.4235 li
770.766 79.4235 li
770.766 80.5855 li
764.886 80.5855 li
764.886 79.4235 li
f
773.552 78.8495 mo
774.994 78.8495 li
774.994 80.5855 li
773.552 80.5855 li
773.552 78.8495 li
f
780.958 71.2895 mo
780.244 71.2895 779.712 71.6395 779.348 72.3395 cv
778.984 73.0395 778.816 74.0895 778.816 75.4895 cv
778.816 76.8895 778.984 77.9395 779.348 78.6395 cv
779.712 79.3395 780.244 79.6895 780.958 79.6895 cv
781.672 79.6895 782.204 79.3395 782.568 78.6395 cv
782.918 77.9395 783.1 76.8895 783.1 75.4895 cv
783.1 74.0895 782.918 73.0395 782.568 72.3395 cv
782.204 71.6395 781.672 71.2895 780.958 71.2895 cv
780.958 70.1975 mo
782.092 70.1975 782.96 70.6595 783.576 71.5555 cv
784.178 72.4655 784.486 73.7815 784.486 75.4895 cv
784.486 77.2115 784.178 78.5275 783.576 79.4235 cv
782.96 80.3195 782.092 80.7675 780.958 80.7675 cv
779.81 80.7675 778.928 80.3195 778.326 79.4235 cv
777.724 78.5275 777.43 77.2115 777.43 75.4895 cv
777.43 73.7815 777.724 72.4655 778.326 71.5555 cv
778.928 70.6595 779.81 70.1975 780.958 70.1975 cv
f
2 lc
0 lj
792.416 263.286 mo
792.416 59.5968 li
@
1091.32 263.286 mo
1091.32 59.5968 li
@
792.416 263.286 mo
1091.32 263.286 li
@
792.416 59.5968 mo
1091.32 59.5968 li
@
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
